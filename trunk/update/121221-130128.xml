<files codepage='65001' xmlns:dt='urn:schemas-microsoft-com:datatypes'>
	<file name='catalog.asp' crc32='3E83F973'  dt:dt='bin.base64'>77u/PCVAIENPREVQQUdFPTY1MDAxICU+DQo8JQ0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicvLyAgICAgICAgICAgICAgWi1CbG9nDQonLy8g5L2cICAgIOiAhTogICAg5pyx54WKKHp4LmFzZCkNCicvLyDniYjmnYPmiYDmnIk6ICAgIFJhaW5ib3dTb2Z0IFN0dWRpbw0KJy8vIOaKgOacr+aUr+aMgTogICAgcmFpbmJvd3NvZnRAMTYzLmNvbQ0KJy8vIOeoi+W6j+WQjeensDogICAgDQonLy8g56iL5bqP54mI5pysOiAgICANCicvLyDljZXlhYPlkI3np7A6ICAgIGNhdGFsb2cuYXNwDQonLy8g5byA5aeL5pe26Ze0OiAgICAyMDA1LjAyLjExDQonLy8g5pyA5ZCO5L+u5pS5OiAgICANCicvLyDlpIcgICAg5rOoOiAgICDnm67lvZUNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQolPg0KPCUgT3B0aW9uIEV4cGxpY2l0ICU+DQo8JSBPbiBFcnJvciBSZXN1bWUgTmV4dCAlPg0KPCUgUmVzcG9uc2UuQ2hhcnNldD0iVVRGLTgiICU+DQo8JSBSZXNwb25zZS5CdWZmZXI9VHJ1ZSAlPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl91c2Vycy9jX29wdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl9zeXN0ZW0vZnVuY3Rpb24vY19mdW5jdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl9zeXN0ZW0vZnVuY3Rpb24vY19zeXN0ZW1fbGliLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9InpiX3N5c3RlbS9mdW5jdGlvbi9jX3N5c3RlbV9iYXNlLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9InpiX3N5c3RlbS9mdW5jdGlvbi9jX3N5c3RlbV9wbHVnaW4uYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iemJfc3lzdGVtL2Z1bmN0aW9uL2Nfc3lzdGVtX2V2ZW50LmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9InpiX3VzZXJzL3BsdWdpbi9wX2NvbmZpZy5hc3AiIC0tPg0KPCUNCkNhbGwgU3lzdGVtX0luaXRpYWxpemUoKQ0KDQoncGx1Z2luIG5vZGUNCkZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX0NhdGFsb2dfQmVnaW4gaW4gQWN0aW9uX1BsdWdpbl9DYXRhbG9nX0JlZ2luDQoJSWYgTm90IElzRW1wdHkoc0FjdGlvbl9QbHVnaW5fQ2F0YWxvZ19CZWdpbikgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fQ2F0YWxvZ19CZWdpbikNCk5leHQNCg0KRGltIGh0bWwNCg0KRGltIEFydExpc3QNClNldCBBcnRMaXN0PU5ldyBUQXJ0aWNsZUxpc3QNCg0KSWYgQXJ0TGlzdC5FeHBvcnQoUmVxdWVzdC5RdWVyeVN0cmluZygicGFnZSIpLFJlcXVlc3QuUXVlcnlTdHJpbmcoImNhdGUiKSxJSUYoTm90IElzRW1wdHkoUmVxdWVzdC5RdWVyeVN0cmluZygiYXV0aCIpKSxSZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJhdXRoIiksUmVxdWVzdC5RdWVyeVN0cmluZygidXNlciIpKSxSZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJkYXRlIiksUmVxdWVzdC5RdWVyeVN0cmluZygidGFncyIpLFpDX0RJU1BMQVlfTU9ERV9JTlRSTykgVGhlbg0KCUFydExpc3QuQnVpbGQNCglodG1sPUFydExpc3QuaHRtbA0KCVJlc3BvbnNlLldyaXRlIGh0bWwNCkVuZCBJZg0KDQoncGx1Z2luIG5vZGUNCkZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX0NhdGFsb2dfRW5kIGluIEFjdGlvbl9QbHVnaW5fQ2F0YWxvZ19FbmQNCglJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9DYXRhbG9nX0VuZCkgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fQ2F0YWxvZ19FbmQpDQpOZXh0DQoNCkNhbGwgU3lzdGVtX1Rlcm1pbmF0ZSgpDQoNCg0KSWYgRXJyLk51bWJlcjw+MCB0aGVuDQoJQ2FsbCBTaG93RXJyb3IoMCkNCkVuZCBJZg0KJT4NCjwhLS08JT1SdW5UaW1lKCklPm1zLS0+</file>
	<file name='default.asp' crc32='D9FD480'  dt:dt='bin.base64'>PCVAIENPREVQQUdFPTY1MDAxICU+DQo8JQ0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicvLyAgICAgICAgICAgICAgWi1CbG9nDQonLy8g5L2cICAgIOiAhTogICAg5pyx54WKKHp4LmFzZCkNCicvLyDniYjmnYPmiYDmnIk6ICAgIFJhaW5ib3dTb2Z0IFN0dWRpbw0KJy8vIOaKgOacr+aUr+aMgTogICAgcmFpbmJvd3NvZnRAMTYzLmNvbQ0KJy8vIOeoi+W6j+WQjeensDogICAgDQonLy8g56iL5bqP54mI5pysOiAgICANCicvLyDljZXlhYPlkI3np7A6ICAgIGRlZmF1bHQuYXNwDQonLy8g5byA5aeL5pe26Ze0OiAgICAyMDA0LjA3LjI1DQonLy8g5pyA5ZCO5L+u5pS5OiAgICANCicvLyDlpIcgICAg5rOoOiAgICDkuLvpobUNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQolPg0KPCUgT3B0aW9uIEV4cGxpY2l0ICU+DQo8JSBPbiBFcnJvciBSZXN1bWUgTmV4dCAlPg0KPCUgUmVzcG9uc2UuQ2hhcnNldD0iVVRGLTgiICU+DQo8JSBSZXNwb25zZS5CdWZmZXI9VHJ1ZSAlPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl91c2Vycy9jX29wdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl9zeXN0ZW0vZnVuY3Rpb24vY19mdW5jdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl9zeXN0ZW0vZnVuY3Rpb24vY19zeXN0ZW1fbGliLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9InpiX3N5c3RlbS9mdW5jdGlvbi9jX3N5c3RlbV9iYXNlLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9InpiX3N5c3RlbS9mdW5jdGlvbi9jX3N5c3RlbV9ldmVudC5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl9zeXN0ZW0vZnVuY3Rpb24vY19zeXN0ZW1fcGx1Z2luLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9InpiX3VzZXJzL3BsdWdpbi9wX2NvbmZpZy5hc3AiIC0tPg0KPCUNCkNhbGwgQWN0aXZlUGx1Z2luDQoNCidwbHVnaW4gbm9kZQ0KRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fRGVmYXVsdF9CZWdpbiBpbiBBY3Rpb25fUGx1Z2luX0RlZmF1bHRfQmVnaW4NCglJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9EZWZhdWx0X0JlZ2luKSBUaGVuIENhbGwgRXhlY3V0ZShzQWN0aW9uX1BsdWdpbl9EZWZhdWx0X0JlZ2luKQ0KTmV4dA0KDQoNCklmIFpDX0RJU1BMQVlfQ09VTlRfV0FQPjAgVGhlbiBJZiBDaGVja01vYmlsZSgpIFRoZW4gUmVzcG9uc2UuUmVkaXJlY3QgWkNfRklMRU5BTUVfV0FQDQoNCklmIFpDX0RBVEFCQVNFX1BBVEg9IiIgQW5kIFpDX01TU1FMX0RBVEFCQVNFPSIiIFRoZW4gUmVzcG9uc2UuUmVkaXJlY3QoInpiX2luc3RhbGwvIikNCg0KSWYgWkNfSFRUUF9MQVNUTU9ESUZJRUQ9VHJ1ZSBUaGVuDQoJUmVzcG9uc2UuQWRkSGVhZGVyICJMYXN0LU1vZGlmaWVkIixHZXRGaWxlTW9kaWZpZWQoQmxvZ1BhdGggJiAiemJfdXNlcnNcY2FjaGVcZGVmYXVsdC5hc3AiKQ0KRW5kIElmDQoNCkRpbSBodG1sDQpodG1sPUxvYWRGcm9tRmlsZShCbG9nUGF0aCAmICJ6Yl91c2Vyc1xjYWNoZVxkZWZhdWx0LmFzcCIsInV0Zi04IikNCg0KSWYgTGVuKGh0bWwpPjAgVGhlbg0KCVJlc3BvbnNlLldyaXRlIFJlcGxhY2UoaHRtbCwiPCNaQ19CTE9HX0hPU1QjPiIsQmxvZ0hvc3QpDQoJUmVzcG9uc2UuV3JpdGUgIjwhLS0gIiAmIFJ1blRpbWUoKSAmICJtcyAtLT4iDQoJUmVzcG9uc2UuRW5kDQpFbmQgSWYNCg0KDQpDYWxsIFN5c3RlbV9Jbml0aWFsaXplKCkNCg0KDQpEaW0gQXJ0TGlzdA0KU2V0IEFydExpc3Q9TmV3IFRBcnRpY2xlTGlzdA0KDQpJZiBBcnRMaXN0LkV4cG9ydCgiIiwiIiwiIiwiIiwiIixaQ19ESVNQTEFZX01PREVfSU5UUk8pIFRoZW4NCg0KCUFydExpc3QuQnVpbGQNCg0KCWh0bWw9QXJ0TGlzdC5odG1sDQoNCglSZXNwb25zZS5Xcml0ZSBodG1sDQoNCkVuZCBJZg0KDQoncGx1Z2luIG5vZGUNCkZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX0RlZmF1bHRfRW5kIGluIEFjdGlvbl9QbHVnaW5fRGVmYXVsdF9FbmQNCglJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9EZWZhdWx0X0VuZCkgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fRGVmYXVsdF9FbmQpDQpOZXh0DQoNCkNhbGwgU3lzdGVtX1Rlcm1pbmF0ZSgpDQoNCg0KSWYgRXJyLk51bWJlcjw+MCB0aGVuDQoJQ2FsbCBTaG93RXJyb3IoMCkNCkVuZCBJZg0KJT4=</file>
	<file name='view.asp' crc32='57C7A575'  dt:dt='bin.base64'>77u/PCVAIENPREVQQUdFPTY1MDAxICU+DQo8JQ0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicvLyAgICAgICAgICAgICAgWi1CbG9nDQonLy8g5L2cICAgIOiAhTogICAg5pyx54WKKHp4LmFzZCkNCicvLyDniYjmnYPmiYDmnIk6ICAgIFJhaW5ib3dTb2Z0IFN0dWRpbw0KJy8vIOaKgOacr+aUr+aMgTogICAgcmFpbmJvd3NvZnRAMTYzLmNvbQ0KJy8vIOeoi+W6j+WQjeensDogICAgDQonLy8g56iL5bqP54mI5pysOiAgICANCicvLyDljZXlhYPlkI3np7A6ICAgIHZpZXcuYXNwDQonLy8g5byA5aeL5pe26Ze0OiAgICAyMDA0LjA3LjMwDQonLy8g5pyA5ZCO5L+u5pS5OiAgICANCicvLyDlpIcgICAg5rOoOiAgICDmn6XnnIvpobUNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQolPg0KPCUgT3B0aW9uIEV4cGxpY2l0ICU+DQo8JSBPbiBFcnJvciBSZXN1bWUgTmV4dCAlPg0KPCUgUmVzcG9uc2UuQ2hhcnNldD0iVVRGLTgiICU+DQo8JSBSZXNwb25zZS5CdWZmZXI9VHJ1ZSAlPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl91c2Vycy9jX29wdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl9zeXN0ZW0vZnVuY3Rpb24vY19mdW5jdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl9zeXN0ZW0vZnVuY3Rpb24vY19zeXN0ZW1fbGliLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9InpiX3N5c3RlbS9mdW5jdGlvbi9jX3N5c3RlbV9iYXNlLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9InpiX3N5c3RlbS9mdW5jdGlvbi9jX3N5c3RlbV9wbHVnaW4uYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iemJfdXNlcnMvcGx1Z2luL3BfY29uZmlnLmFzcCIgLS0+DQo8JQ0KDQpDYWxsIFN5c3RlbV9Jbml0aWFsaXplKCkNCg0KJ3BsdWdpbiBub2RlDQpGb3IgRWFjaCBzQWN0aW9uX1BsdWdpbl9WaWV3X0JlZ2luIGluIEFjdGlvbl9QbHVnaW5fVmlld19CZWdpbg0KCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX1ZpZXdfQmVnaW4pIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX1ZpZXdfQmVnaW4pDQpOZXh0DQoNCkRpbSBodG1sDQoNCkRpbSBvYmpSUw0KRGltIEFydGljbGUNClNldCBBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KDQonbnZhcA0KSWYgSXNFbXB0eShSZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJuYXYiKSk9RmFsc2UgVGhlbg0KDQoJSWYgQXJ0aWNsZS5Mb2FkSW5mb0J5SUQoUmVxdWVzdC5RdWVyeVN0cmluZygibmF2IikpIFRoZW4NCgkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFRPUCAxIFtsb2dfRnVsbFVybF0gRlJPTSBbYmxvZ19BcnRpY2xlXSBXSEVSRSAoW2xvZ19JRF09IiYgUmVxdWVzdC5RdWVyeVN0cmluZygibmF2IikgJiIpIikNCgkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KCQkJUmVzcG9uc2UuUmVkaXJlY3QgQXJ0aWNsZS5VcmwNCgkJRWxzZQ0KCQkJUmVzcG9uc2UuUmVkaXJlY3QgQmxvZ0hvc3QNCgkJRW5kIElmDQoJRW5kIElmDQoNCkVuZCBJZg0KDQoNCg0KJ252YXANCklmIElzRW1wdHkoUmVxdWVzdC5RdWVyeVN0cmluZygibmF2cCIpKT1GYWxzZSBUaGVuDQoNCglJZiBBcnRpY2xlLkxvYWRJbmZvQnlJRChSZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJuYXZwIikpIFRoZW4NCgkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFRPUCAxIFtsb2dfSURdIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgKFtsb2dfTGV2ZWxdPjIpIEFORCAoW2xvZ19UeXBlXT0wKSBBTkQgKFtsb2dfUG9zdFRpbWVdPCIgJiBaQ19TUUxfUE9VTkRfS0VZICYgQXJ0aWNsZS5Qb3N0VGltZSAmIFpDX1NRTF9QT1VORF9LRVkgJiIpIE9SREVSIEJZIFtsb2dfUG9zdFRpbWVdIERFU0MiKQ0KCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoJCQlEaW0gYQ0KCQkJU2V0IGE9TmV3IFRBcnRpY2xlDQoJCQlJZiBhLkxvYWRJbmZvQnlJRChvYmpSUygibG9nX0lEIikpIFRoZW4NCgkJCQlSZXNwb25zZS5SZWRpcmVjdCBhLlVybA0KCQkJRWxzZQ0KCQkJCVJlc3BvbnNlLlJlZGlyZWN0IEJsb2dIb3N0DQoJCQlFbmQgSWYNCgkJRWxzZQ0KCQkJUmVzcG9uc2UuUmVkaXJlY3QgQmxvZ0hvc3QNCgkJRW5kIElmDQoJRW5kIElmDQoNCkVuZCBJZg0KDQonbnZhbg0KSWYgSXNFbXB0eShSZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJuYXZuIikpPUZhbHNlIFRoZW4NCg0KCUlmIEFydGljbGUuTG9hZEluZm9CeUlEKFJlcXVlc3QuUXVlcnlTdHJpbmcoIm5hdm4iKSkgVGhlbg0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgVE9QIDEgW2xvZ19JRF0gRlJPTSBbYmxvZ19BcnRpY2xlXSBXSEVSRSAoW2xvZ19MZXZlbF0+MikgQU5EIChbbG9nX1R5cGVdPTApIEFORCAoW2xvZ19Qb3N0VGltZV0+IiAmIFpDX1NRTF9QT1VORF9LRVkgJiBBcnRpY2xlLlBvc3RUaW1lICYgWkNfU1FMX1BPVU5EX0tFWSAmIikgT1JERVIgQlkgW2xvZ19Qb3N0VGltZV0gQVNDIikNCgkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KCQkJRGltIGINCgkJCVNldCBiPU5ldyBUQXJ0aWNsZQ0KCQkJSWYgYi5Mb2FkSW5mb0J5SUQob2JqUlMoImxvZ19JRCIpKSBUaGVuDQoJCQkJUmVzcG9uc2UuUmVkaXJlY3QgYi5VcmwNCgkJCUVsc2UNCgkJCQlSZXNwb25zZS5SZWRpcmVjdCBCbG9nSG9zdA0KCQkJRW5kIElmDQoJCUVsc2UNCgkJCVJlc3BvbnNlLlJlZGlyZWN0IEJsb2dIb3N0DQoJCUVuZCBJZg0KCUVuZCBJZg0KDQpFbmQgSWYNCg0KRGltIGMsZA0KYz1SZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJpZCIpDQoNClNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBbbG9nX0lEXSBGUk9NIFtibG9nX0FydGljbGVdIFdIRVJFIFtsb2dfVXJsXT0nIiZGaWx0ZXJTUUwoYykmIiciKQ0KSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KCWM9b2JqUlMoImxvZ19JRCIpDQpFbHNlDQoNCglJZiBaQ19QT1NUX1NUQVRJQ19NT0RFPSJSRVdSSVRFIiBUaGVuDQoNCgkJRGltIGZzbywgVHh0RmlsZQ0KCQlTZXQgZnNvID0gQ3JlYXRlT2JqZWN0KCJTY3JpcHRpbmcuRmlsZVN5c3RlbU9iamVjdCIpDQoNCgkJSWYgTGVmdChkLDMpPSJ6Yl8iIFRoZW4NCgkJCVJlc3BvbnNlLlN0YXR1cz0iNDA0IE5vdCBGb3VuZCINCgkJCVJlc3BvbnNlLkVuZA0KCQlFbmQgSWYNCgkJZD1jICYgIi4iICYgWkNfU1RBVElDX1RZUEUNCgkJSWYgZnNvLkZpbGVFeGlzdHMoU2VydmVyLk1hcFBhdGgoZCkpIFRoZW4NCgkJCVJlc3BvbnNlLldyaXRlIExvYWRGcm9tRmlsZShCbG9nUGF0aCAmIGQsInV0Zi04IikNCgkJCVJlc3BvbnNlLkVuZA0KCQlFbmQgSWYNCg0KCQlkPWMgJiAiL2RlZmF1bHQuIiAmIFpDX1NUQVRJQ19UWVBFDQoJCUlmIGZzby5GaWxlRXhpc3RzKFNlcnZlci5NYXBQYXRoKGQpKSBUaGVuDQoJCQlSZXNwb25zZS5Xcml0ZSBMb2FkRnJvbUZpbGUoQmxvZ1BhdGggJiBkLCJ1dGYtOCIpDQoJCQlSZXNwb25zZS5FbmQNCgkJRW5kIElmDQoNCgkJZD1jICYgIi9pbmRleC4iICYgWkNfU1RBVElDX1RZUEUNCgkJSWYgZnNvLkZpbGVFeGlzdHMoU2VydmVyLk1hcFBhdGgoZCkpIFRoZW4NCgkJCVJlc3BvbnNlLldyaXRlIExvYWRGcm9tRmlsZShCbG9nUGF0aCAmIGQsInV0Zi04IikNCgkJCVJlc3BvbnNlLkVuZA0KCQlFbmQgSWYNCg0KCUVuZCBJZg0KRW5kIElmDQoNCklmIFRyeVRvTnVtZXJpYyhjKT0wIFRoZW4NCglSZXNwb25zZS5TdGF0dXM9IjQwNCBOb3QgRm91bmQiDQoJUmVzcG9uc2UuRW5kDQpFbmQgSWYNCg0KSWYgQXJ0aWNsZS5Mb2FkSW5mb0J5SUQoYykgVGhlbg0KDQoJSWYgQXJ0aWNsZS5MZXZlbD0xIFRoZW4gQ2FsbCBTaG93RXJyb3IoNjMpDQoJSWYgQXJ0aWNsZS5MZXZlbD0yIFRoZW4NCgkJSWYgQ2hlY2tSaWdodHMoIlJvb3QiKT1GYWxzZSBBbmQgQ2hlY2tSaWdodHMoIkFydGljbGVBbGwiKT1GYWxzZSBUaGVuDQoJCQlJZiAoQXJ0aWNsZS5BdXRob3JJRDw+QmxvZ1VzZXIuSUQpIFRoZW4gQ2FsbCBTaG93RXJyb3IoNikNCgkJRW5kIElmDQoJRW5kIElmDQoNCglJZiBBcnRpY2xlLkV4cG9ydChaQ19ESVNQTEFZX01PREVfQUxMKT0gVHJ1ZSBUaGVuDQoJCUlmIFpDX0hUVFBfTEFTVE1PRElGSUVEPVRydWUgVGhlbg0KCQkJRGltIHN0ckxhc3RNb2RpZmllZA0KCQkJc3RyTGFzdE1vZGlmaWVkPUFydGljbGUuUG9zdFRpbWUNCgkJCVNldCBvYmpScz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBUT1AgMSBbY29tbV9Qb3N0VGltZV0gRlJPTSBbYmxvZ19Db21tZW50XSBXSEVSRSBbY29tbV9pc0NoZWNrXT0wIEFuZCBbbG9nX2lkXT0iICYgQXJ0aWNsZS5JRCkNCgkJCUlmIE5vdChvYmpScy5Fb2YpIEFuZCBOb3Qob2JqUnMuQm9mKSBUaGVuDQoJCQkJSWYgRGF0ZURpZmYoInMiLG9ialJzKCJjb21tX1Bvc3RUaW1lIiksc3RyTGFzdE1vZGlmaWVkKTwwIFRoZW4gc3RyTGFzdE1vZGlmaWVkPW9ialJzKCJjb21tX1Bvc3RUaW1lIikNCgkJCUVuZCBJZg0KCQkJUmVzcG9uc2UuQWRkSGVhZGVyICJMYXN0LU1vZGlmaWVkIixQYXJzZURhdGVGb3JSRkM4MjJHTVQoc3RyTGFzdE1vZGlmaWVkKQ0KCQlFbmQgSWYNCgkJQXJ0aWNsZS5CdWlsZA0KCQlodG1sPUFydGljbGUuaHRtbA0KCQlSZXNwb25zZS5Xcml0ZSBodG1sDQoJRW5kIElmDQpFbHNlDQoJUmVzcG9uc2UuU3RhdHVzPSI0MDQgTm90IEZvdW5kIg0KCVJlc3BvbnNlLkVuZA0KRW5kIElmDQoNCidwbHVnaW4gbm9kZQ0KRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fVmlld19FbmQgaW4gQWN0aW9uX1BsdWdpbl9WaWV3X0VuZA0KCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX1ZpZXdfRW5kKSBUaGVuIENhbGwgRXhlY3V0ZShzQWN0aW9uX1BsdWdpbl9WaWV3X0VuZCkNCk5leHQNCg0KQ2FsbCBTeXN0ZW1fVGVybWluYXRlKCkNCg0KDQoNCkZ1bmN0aW9uIFRyeVRvTnVtZXJpYyhzdHIpDQoJT24gRXJyb3IgUmVzdW1lIE5leHQNCglEaW0gaW50Tg0KCWludE49Q0xuZyhzdHIpDQoJVHJ5VG9OdW1lcmljPUlJZihFcnIuTnVtYmVyPTAsaW50TiwwKSANCglFcnIuQ2xlYXINCkVuZCBGdW5jdGlvbg0KJT4NCjwhLS0gPCU9UnVuVGltZSgpJT5tcyAtLT48JQ0KSWYgRXJyLk51bWJlcjw+MCB0aGVuDQoJJ0NhbGwgU2hvd0Vycm9yKDApDQpFbmQgSWYNCiU+</file>
	<file name='wap.asp' crc32='CFE64530'  dt:dt='bin.base64'>PCVAIENPREVQQUdFPTY1MDAxICU+DQo8JQ0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicvLyAgICAgICAgICAgICAgWi1CbG9nDQonLy8g5L2cICAgIOiAhTogICAgKHp4LmFzZCkmKHNpcG8pJijmnIjkuIrkuYvmnKgpDQonLy8g54mI5p2D5omA5pyJOiAgICBSYWluYm93U29mdCBTdHVkaW8NCicvLyDmioDmnK/mlK/mjIE6ICAgIHJhaW5ib3dzb2Z0QDE2My5jb20NCicvLyDnqIvluo/lkI3np7A6ICAgIA0KJy8vIOeoi+W6j+eJiOacrDogICAgDQonLy8g5Y2V5YWD5ZCN56ewOiAgICB3YXAuYXNwDQonLy8g5byA5aeL5pe26Ze0OiAgICAyMDA2LTMtMTkNCicvLyDmnIDlkI7kv67mlLk6ICAgIDIwMTEtNy0yMw0KJy8vIOWkhyAgICDms6g6ICAgIFdBUOaooeWdlw0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCiU+DQo8JSBPcHRpb24gRXhwbGljaXQgJT4NCjwlIE9uIEVycm9yIFJlc3VtZSBOZXh0ICU+DQo8JSBSZXNwb25zZS5DaGFyc2V0PSJVVEYtOCIgJT4NCjwlIFJlc3BvbnNlLkJ1ZmZlcj1UcnVlICU+DQo8JSBSZXNwb25zZS5DYWNoZUNvbnRyb2w9Im5vLWNhY2hlIiAlPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl91c2Vycy9jX29wdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl9zeXN0ZW0vZnVuY3Rpb24vY19mdW5jdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl9zeXN0ZW0vZnVuY3Rpb24vY19zeXN0ZW1fbGliLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9InpiX3N5c3RlbS9mdW5jdGlvbi9jX3N5c3RlbV9iYXNlLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9InpiX3N5c3RlbS9mdW5jdGlvbi9jX3N5c3RlbV9ldmVudC5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl9zeXN0ZW0vd2FwL2Nfc3lzdGVtX3dhcC5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSJ6Yl9zeXN0ZW0vZnVuY3Rpb24vY19zeXN0ZW1fcGx1Z2luLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9InpiX3VzZXJzL3BsdWdpbi9wX2NvbmZpZy5hc3AiIC0tPg0KPCUNCiBaQ19JU1dBUD1UcnVlDQogSWYgWkNfRElTUExBWV9DT1VOVF9XQVA9MCBUaGVuIFJlc3BvbnNlLlJlZGlyZWN0IFpDX0JMT0dfSE9TVA0KIFNob3dFcnJvcl9DdXN0b209IkNhbGwgU2hvd0Vycm9yX1dBUChpZCkiDQogUmVzcG9uc2UuQ29va2llcygiQ2hlY2tNb2JpbGUiKT0idHJ1ZSINCiU+PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4gDQo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1dBUEZPUlVNLy9EVEQgWEhUTUwgTW9iaWxlIDEuMC8vRU4iICJodHRwOi8vd3d3LndhcGZvcnVtLm9yZy9EVEQveGh0bWwtbW9iaWxlMTAuZHRkIj4gDQo8aHRtbCB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+DQo8aGVhZD4NCjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iPCU9QmxvZ0hvc3QlPnpiX3N5c3RlbS93YXAvc3R5bGUvd2FwLmNzcyIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4iIGNoYXJzZXQ9InV0Zi04IiAvPg0KPCUNCkNhbGwgU3lzdGVtX0luaXRpYWxpemUoKQ0KDQpJZiBUZW1wbGF0ZURpYy5FeGlzdHMoIlRFTVBMQVRFX1dBUF9BUlRJQ0xFX0NPTU1FTlQiKT1GYWxzZSBUaGVuIENhbGwgVGVtcGxhdGVEaWMuYWRkKCJURU1QTEFURV9XQVBfQVJUSUNMRV9DT01NRU5UIixMb2FkRnJvbUZpbGUoQmxvZ1BhdGggJiJ6Yl9zeXN0ZW1cd2FwXHRlbXBsYXRlXHdhcF9hcnRpY2xlX2NvbW1lbnQuaHRtbCIsInV0Zi04IikpDQpJZiBUZW1wbGF0ZURpYy5FeGlzdHMoIlRFTVBMQVRFX1dBUF9BUlRJQ0xFLU1VTFRJIik9RmFsc2UgVGhlbiBDYWxsIFRlbXBsYXRlRGljLmFkZCgiVEVNUExBVEVfV0FQX0FSVElDTEUtTVVMVEkiLExvYWRGcm9tRmlsZShCbG9nUGF0aCAmInpiX3N5c3RlbVx3YXBcdGVtcGxhdGVcd2FwX2FydGljbGUtbXVsdGkuaHRtbCIsInV0Zi04IikpDQpJZiBUZW1wbGF0ZURpYy5FeGlzdHMoIlRFTVBMQVRFX1dBUF9BUlRJQ0xFLU1VTFRJLUlTVE9QIik9RmFsc2UgVGhlbiBDYWxsIFRlbXBsYXRlRGljLmFkZCgiVEVNUExBVEVfV0FQX0FSVElDTEUtTVVMVEktSVNUT1AiLExvYWRGcm9tRmlsZShCbG9nUGF0aCAmInpiX3N5c3RlbVx3YXBcdGVtcGxhdGVcd2FwX2FydGljbGUtbXVsdGktaXN0b3AuaHRtbCIsInV0Zi04IikpDQpJZiBUZW1wbGF0ZURpYy5FeGlzdHMoIlRFTVBMQVRFX1dBUF9TSU5HTEUiKT1GYWxzZSBUaGVuIENhbGwgVGVtcGxhdGVEaWMuYWRkKCJURU1QTEFURV9XQVBfU0lOR0xFIixMb2FkRnJvbUZpbGUoQmxvZ1BhdGggJiJ6Yl9zeXN0ZW1cd2FwXHRlbXBsYXRlXHdhcF9zaW5nbGUuaHRtbCIsInV0Zi04IikpDQpJZiBUZW1wbGF0ZURpYy5FeGlzdHMoIlRFTVBMQVRFX1dBUF9BUlRJQ0xFX01VVFVBTElUWSIpPUZhbHNlIFRoZW4gQ2FsbCBUZW1wbGF0ZURpYy5hZGQoIlRFTVBMQVRFX1dBUF9BUlRJQ0xFX01VVFVBTElUWSIsTG9hZEZyb21GaWxlKEJsb2dQYXRoICYiemJfc3lzdGVtXHdhcFx0ZW1wbGF0ZVx3YXBfYXJ0aWNsZV9tdXR1YWxpdHkuaHRtbCIsInV0Zi04IikpDQoNClB1YkxpYyBpbnRQYWdlQ291bnQNCglTZWxlY3QgQ2FzZSBSZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJhY3QiKQ0KCQlDYXNlICJWaWV3Ig0KCQkJQ2FsbCBXYXBWaWV3KCkNCgkJQ2FzZSAiQ29tIg0KCQkJQ2FsbCBXYXBDb20oKQ0KCQlDYXNlICJNYWluIg0KCQkJQ2FsbCBXYXBNYWluKCkNCgkJQ2FzZSAiU2VhcmNoIg0KCQkJQ2FsbCBXYXBTZWFyY2goKQ0KCQlDYXNlICJMb2dpbiINCgkJCUNhbGwgV2FwTG9naW4oKQ0KCQlDYXNlICJFcnIiDQoJCQlDYWxsIFdhcEVycm9yKCkNCgkJQ2FzZSAiQ2F0ZSINCgkJCUNhbGwgV2FwQ2F0ZSgpDQoJCUNhc2UgIlN0YXQiDQoJCQlDYWxsIFdhcFN0YXQoKQ0KCQlDYXNlICJQcmV2Ig0KCQkJQ2FsbCBXYXBQcmV2KCkJCQkNCgkJQ2FzZSAiQWRkQ29tIgkJDQoJCQlDYWxsIFdhcEFkZENvbSgwKQ0KCQlDYXNlICJQb3N0Q29tIg0KCQkJQ2FsbCBXYXBQb3N0Q29tKCkNCgkJQ2FzZSAiRGVsQ29tIg0KCQkJQ2FsbCBXYXBEZWxDb20oKQ0KCQlDYXNlICJBZGRBcnQiDQoJCSAgICBDYWxsIFdhcEVkdEFydCgpDQoJCUNhc2UgIkVkdEFydCINCgkJICAgIENhbGwgV2FwRWR0QXJ0KCkJCQ0KCQlDYXNlICJQb3N0QXJ0Ig0KCQkgICAgQ2FsbCBXYXBQb3N0QXJ0KCkNCgkJQ2FzZSAiRGVsQXJ0Ig0KCQkJQ2FsbCBXYXBEZWxBcnQoKQ0KCQlDYXNlICJMb2dvdXQiDQoJCQlDYWxsIFdhcExvZ291dCgpDQoJCUNhc2UgRWxzZQ0KCQkJQ2FsbCBXYXBNYWluKCkJCQkNCglFbmQgU2VsZWN0DQoNCkNhbGwgU3lzdGVtX1Rlcm1pbmF0ZSgpDQoNCklmIEVyci5OdW1iZXI8PjAgdGhlbg0KCUNhbGwgU2hvd0Vycm9yKDApDQpFbmQgSWYNCiU+DQo8ZGl2IGlkPSJmdCI+UG93ZXJlZCBCeSA8YSBocmVmPSJodHRwOi8vYmJzLnpibG9nY24uY29tIj5aLUJsb2c8L2E+PC9kaXY+DQo8L2JvZHk+DQo8L2h0bWw+</file>
	<file name='zb_system\cmd.asp' crc32='705E03BF'  dt:dt='bin.base64'></file>
	<file name='zb_system\ADMIN\admin.asp' crc32='DC00ABF8'  dt:dt='bin.base64'>77u/PCVAIENPREVQQUdFPTY1MDAxICU+DQo8JQ0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicvLyAgICAgICAgICAgICAgWi1CbG9nDQonLy8g5L2cICAgIOiAhTogICAg5pyx54WKKHp4LmFzZCkNCicvLyDniYjmnYPmiYDmnIk6ICAgIFJhaW5ib3dTb2Z0IFN0dWRpbw0KJy8vIOaKgOacr+aUr+aMgTogICAgcmFpbmJvd3NvZnRAMTYzLmNvbQ0KJy8vIOeoi+W6j+WQjeensDogICAgDQonLy8g56iL5bqP54mI5pysOiAgICANCicvLyDljZXlhYPlkI3np7A6ICAgIGFkbWluLmFzcA0KJy8vIOW8gOWni+aXtumXtDogICAgMjAwNC4wNy4zMA0KJy8vIOacgOWQjuS/ruaUuTogICAgDQonLy8g5aSHICAgIOazqDogICAg566h55CG6aG1DQonLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KJT4NCjwlIE9wdGlvbiBFeHBsaWNpdCAlPg0KPCUgT24gRXJyb3IgUmVzdW1lIE5leHQgJT4NCjwlIFJlc3BvbnNlLkNoYXJzZXQ9IlVURi04IiAlPg0KPCUgUmVzcG9uc2UuQnVmZmVyPVRydWUgJT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vLi4vemJfdXNlcnMvY19vcHRpb24uYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vZnVuY3Rpb24vY19mdW5jdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSIuLi9mdW5jdGlvbi9jX3N5c3RlbV9saWIuYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vZnVuY3Rpb24vY19zeXN0ZW1fYmFzZS5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSIuLi9mdW5jdGlvbi9jX3N5c3RlbV9ldmVudC5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSIuLi9mdW5jdGlvbi9jX3N5c3RlbV9tYW5hZ2UuYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vZnVuY3Rpb24vY19zeXN0ZW1fcGx1Z2luLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9Ii4uLy4uL3piX3VzZXJzL3BsdWdpbi9wX2NvbmZpZy5hc3AiIC0tPg0KPCUNCkNhbGwgU3lzdGVtX0luaXRpYWxpemUoKQ0KDQon5qOA5p+l5qih5p2/55qE5pu05pawLOWmguacieabtOaWsOimgemHjeaWsOWKoOi9vQ0KRGltIHN0clRlbXBsYXRlTW9kaWZpZWQNCkFwcGxpY2F0aW9uLkxvY2sNCnN0clRlbXBsYXRlTW9kaWZpZWQ9QXBwbGljYXRpb24oWkNfQkxPR19DTFNJRCAmICJURU1QTEFURU1PRElGSUVEIikNCkFwcGxpY2F0aW9uLlVuTG9jaw0KSWYgSXNFbXB0eShzdHJUZW1wbGF0ZU1vZGlmaWVkKT1GYWxzZSBUaGVuDQoJSWYgTENhc2UoQ1N0cihzdHJUZW1wbGF0ZU1vZGlmaWVkKSk8PkxDYXNlKENTdHIoQ2hlY2tUZW1wbGF0ZU1vZGlmaWVkKSkgVGhlbg0KCQlDYWxsIEJsb2dSZUJ1aWxkX0RlZmF1bHQoKQ0KCUVuZCBJZg0KRW5kIElmDQoNCidwbHVnaW4gbm9kZQ0KRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fQWRtaW5fQmVnaW4gaW4gQWN0aW9uX1BsdWdpbl9BZG1pbl9CZWdpbg0KCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX0FkbWluX0JlZ2luKSBUaGVuIENhbGwgRXhlY3V0ZShzQWN0aW9uX1BsdWdpbl9BZG1pbl9CZWdpbikNCk5leHQNCg0KJ+ajgOafpeadg+mZkA0KSWYgTm90IENoZWNrUmlnaHRzKFJlcXVlc3QuUXVlcnlTdHJpbmcoImFjdCIpKSBUaGVuIENhbGwgU2hvd0Vycm9yKDYpDQoNCkJsb2dUaXRsZT1aQ19NU0cwMjINCg0KJT4NCjwhLS0jaW5jbHVkZSBmaWxlPSJhZG1pbl9oZWFkZXIuYXNwIi0tPg0KPCEtLSNpbmNsdWRlIGZpbGU9ImFkbWluX3RvcC5hc3AiLS0+DQogICAgPGRpdiBpZD0iZGl2TWFpbiI+DQo8JQlDYWxsIEdldEJsb2dIaW50KCkJJT4NCiAgICAgIDwlDQoJU2VsZWN0IENhc2UgUmVxdWVzdC5RdWVyeVN0cmluZygiYWN0IikNCgkJQ2FzZSAiQXJ0aWNsZU1uZyINCgkJCUlmIFJlcXVlc3QuUXVlcnlTdHJpbmcoInR5cGUiKT0iUGFnZSIgVGhlbg0KCQkJQ2FsbCBFeHBvcnRQYWdlTGlzdChSZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJwYWdlIiksUmVxdWVzdCgiY2F0ZSIpLFJlcXVlc3QoImxldmVsIiksRXNjYXBlKFJlcXVlc3QoInRpdGxlIikpKQ0KCQkJRWxzZQ0KCQkJQ2FsbCBFeHBvcnRBcnRpY2xlTGlzdChSZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJwYWdlIiksUmVxdWVzdCgiY2F0ZSIpLFJlcXVlc3QoImxldmVsIiksUmVxdWVzdCgiaXN0b3AiKSxFc2NhcGUoUmVxdWVzdCgidGl0bGUiKSkpDQoJCQlFbmQgSWYNCgkJQ2FzZSAiQ2F0ZWdvcnlNbmciIENhbGwgRXhwb3J0Q2F0ZWdvcnlMaXN0KFJlcXVlc3QuUXVlcnlTdHJpbmcoInBhZ2UiKSkNCgkJQ2FzZSAiQ29tbWVudE1uZyIgQ2FsbCBFeHBvcnRDb21tZW50TGlzdChSZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJwYWdlIiksUmVxdWVzdCgiaW50Q29udGVudCIpLFJlcXVlc3QoImlzQ2hlY2siKSkNCgkJQ2FzZSAiVHJhY2tCYWNrTW5nIiBDYWxsIEV4cG9ydFRyYWNrQmFja0xpc3QoUmVxdWVzdC5RdWVyeVN0cmluZygicGFnZSIpKQ0KCQlDYXNlICJVc2VyTW5nIiBDYWxsIEV4cG9ydFVzZXJMaXN0KFJlcXVlc3QuUXVlcnlTdHJpbmcoInBhZ2UiKSkNCgkJQ2FzZSAiRmlsZU1uZyIgQ2FsbCBFeHBvcnRGaWxlTGlzdChSZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJwYWdlIikpDQoJCUNhc2UgIlRhZ01uZyIgQ2FsbCBFeHBvcnRUYWdMaXN0KFJlcXVlc3QuUXVlcnlTdHJpbmcoInBhZ2UiKSkNCgkJQ2FzZSAiUGx1Z0luTW5nIiBDYWxsIEV4cG9ydFBsdWdpbk1uZygpDQoJCUNhc2UgIlNpdGVJbmZvIiBDYWxsIEV4cG9ydFNpdGVJbmZvKCkNCgkJQ2FzZSAiQXNrRmlsZVJlQnVpbGQiIENhbGwgRXhwb3J0RmlsZVJlQnVpbGRBc2soKQ0KCQlDYXNlICJUaGVtZU1uZyIgQ2FsbCBFeHBvcnRUaGVtZU1uZygpDQoJCUNhc2UgIkZ1bmN0aW9uTW5nIiBDYWxsIEV4cG9ydEZ1bmN0aW9uTGlzdCgpDQoJRW5kIFNlbGVjdA0KDQoJJ0NhbGwgKCkNCg0KJT4NCiAgICA8L2Rpdj4NCjwhLS0jaW5jbHVkZSBmaWxlPSJhZG1pbl9mb290ZXIuYXNwIi0tPg0KPCUNCidwbHVnaW4gbm9kZQ0KRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fQWRtaW5fRW5kIGluIEFjdGlvbl9QbHVnaW5fQWRtaW5fRW5kDQoJSWYgTm90IElzRW1wdHkoc0FjdGlvbl9QbHVnaW5fQWRtaW5fRW5kKSBUaGVuIENhbGwgRXhlY3V0ZShzQWN0aW9uX1BsdWdpbl9BZG1pbl9FbmQpDQpOZXh0DQoNCkNhbGwgU3lzdGVtX1Rlcm1pbmF0ZSgpDQoNCklmIEVyci5OdW1iZXI8PjAgdGhlbg0KCUNhbGwgU2hvd0Vycm9yKDApDQpFbmQgSWYNCiU+DQo8IS0tIDwlPVJ1blRpbWUoKSU+bXMgLS0+</file>
	<file name='zb_system\ADMIN\admin_footer.asp' crc32='EAF11136'  dt:dt='bin.base64'>77u/ICAgIDwvZGl2Pg0KICA8L2Rpdj4NCjwvZGl2Pg0KDQoJCQk8L2Rpdj4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCi8vIDwhW0NEQVRBWw0KJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXsgDQoNCgkkKCIjYXZhdGFyIikuYXR0cigic3JjIiwiPCU9QmxvZ1VzZXIuQXZhdGFyJT4iKTsNCgkkKCJpbWdbd2lkdGg9JzE2J10iKS5lYWNoKGZ1bmN0aW9uKCl7aWYoJCh0aGlzKS5wYXJlbnQoKS5pcygiYSIpKXskKHRoaXMpLnBhcmVudCgpLmFkZENsYXNzKCJidXR0b24iKX19KTsNCg0KCWlmKCQoInAuaGludF9ncmVlbjp2aXNpYmxlIikubGVuZ3RoPjApew0KCQkkKCJwLmhpbnRfZ3JlZW46dmlzaWJsZSIpLmVxKDApLmRlbGF5KDE1MDApLmhpZGUoMTUwMCxmdW5jdGlvbigpe30pOw0KCX0NCn0pOw0KLy8gXV0+DQo8L3NjcmlwdD4NCjwlPVJlc3BvbnNlX1BsdWdpbl9BZG1pbl9Gb290ZXIlPg0KPC9ib2R5Pg0KPC9odG1sPg==</file>
	<file name='zb_system\ADMIN\admin_header.asp' crc32='63CD6473'  dt:dt='bin.base64'>77u/PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPgo8aHRtbCB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCIgeG1sOmxhbmc9IjwlPVpDX0JMT0dfTEFOR1VBR0UlPiIgbGFuZz0iPCU9WkNfQkxPR19MQU5HVUFHRSU+Ij4KPGhlYWQ+CjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04IiAvPgo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LUxhbmd1YWdlIiBjb250ZW50PSI8JT1aQ19CTE9HX0xBTkdVQUdFJT4iIC8+CjxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9RURHRSIgLz4KPG1ldGEgbmFtZT0iZ2VuZXJhdG9yIiBjb250ZW50PSJaLUJsb2cgPCU9WkNfQkxPR19WRVJTSU9OJT4iIC8+CjxtZXRhIG5hbWU9InJvYm90cyIgY29udGVudD0ibm9mb2xsb3ciIC8+Cjx0aXRsZT48JT1aQ19CTE9HX1RJVExFICYgWkNfTVNHMDQ0ICYgQmxvZ1RpdGxlJT48L3RpdGxlPgo8bGluayBocmVmPSI8JT1CbG9nSG9zdCU+WkJfU1lTVEVNL0NTUy9hZG1pbjIuY3NzIiByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAvPgo8c2NyaXB0IHNyYz0iPCU9QmxvZ0hvc3QlPlpCX1NZU1RFTS9zY3JpcHQvY29tbW9uLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iPCU9QmxvZ0hvc3QlPlpCX1NZU1RFTS9mdW5jdGlvbi9jX2FkbWluX2pzX2FkZC5hc3AiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iPCU9QmxvZ0hvc3QlPlpCX1NZU1RFTS9DU1MvanF1ZXJ5LmJldHRlcnRpcC5jc3MiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0ic2NyZWVuIiAvPgo8c2NyaXB0IHNyYz0iPCU9QmxvZ0hvc3QlPlpCX1NZU1RFTS9zY3JpcHQvanF1ZXJ5LmJldHRlcnRpcC5wYWNrLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iPCU9QmxvZ0hvc3QlPlpCX1NZU1RFTS9zY3JpcHQvanF1ZXJ5LXVpLmN1c3RvbS5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9IjwlPUJsb2dIb3N0JT5aQl9TWVNURU0vQ1NTL2pxdWVyeS11aS5jdXN0b20uY3NzIi8+CjwlPVJlc3BvbnNlX1BsdWdpbl9BZG1pbl9IZWFkZXIlPg==</file>
	<file name='zb_system\ADMIN\c_statistic.asp' crc32='9BF8959D'  dt:dt='bin.base64'></file>
	<file name='zb_system\ADMIN\c_updateinfo.asp' crc32='5E46F989'  dt:dt='bin.base64'>77u/PCVAIENPREVQQUdFPTY1MDAxICU+DQo8JQ0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicvLyAgICAgICAgICAgICAgWi1CbG9nDQonLy8g5L2cICAgIOiAhTogICAg5pyx54WKKHp4LmFzZCkmKHNpcG8pDQonLy8g54mI5p2D5omA5pyJOiAgICBSYWluYm93U29mdCBTdHVkaW8NCicvLyDmioDmnK/mlK/mjIE6ICAgIHJhaW5ib3dzb2Z0QDE2My5jb20NCicvLyDnqIvluo/lkI3np7A6ICAgIA0KJy8vIOeoi+W6j+eJiOacrDogICAgDQonLy8g5Y2V5YWD5ZCN56ewOiAgICBjX3VwZGF0ZWluZm8uYXNwDQonLy8g5byA5aeL5pe26Ze0OiAgICAyMDA3LTEtMjYNCicvLyDmnIDlkI7kv67mlLk6ICAgIA0KJy8vIOWkhyAgICDms6g6ICAgIA0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCiU+DQo8JSBPcHRpb24gRXhwbGljaXQgJT4NCjwlIE9uIEVycm9yIFJlc3VtZSBOZXh0ICU+DQo8JSBSZXNwb25zZS5DaGFyc2V0PSJVVEYtOCIgJT4NCjwlIFJlc3BvbnNlLkJ1ZmZlcj1UcnVlICU+DQo8IS0tICNpbmNsdWRlIGZpbGU9Ii4uLy4uL3piX3VzZXJzL2Nfb3B0aW9uLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9Ii4uL2Z1bmN0aW9uL2NfZnVuY3Rpb24uYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vZnVuY3Rpb24vY19zeXN0ZW1fYmFzZS5hc3AiIC0tPg0KPCUNCg0KUmVzcG9uc2UuRXhwaXJlc0Fic29sdXRlICAgPSAgIE5vdygpICAgLSAgIDEgICAgICAgICAgIA0KUmVzcG9uc2UuRXhwaXJlcyAgID0gICAwICAgDQpSZXNwb25zZS5DYWNoZUNvbnRyb2wgICA9ICAgIm5vLWNhY2hlIg0KDQpJZiBMZW4oWkNfVVBEQVRFX0lORk9fVVJMKT4wIFRoZW4NCg0KCURpbSBzdHJQaW5nVGltZQ0KCURpbSBzdHJQaW5nQ29udGVudA0KDQoJRGltIGIsaA0KCWI9RmFsc2UNCgloPU5vdw0KCURpbSBmc28sZg0KCVNldCBmc28gPSBDcmVhdGVPYmplY3QoIlNjcmlwdGluZy5GaWxlU3lzdGVtT2JqZWN0IikNCglJZiBmc28uRmlsZUV4aXN0cyhCbG9nUGF0aCAmICJ6Yl91c2Vyc1xDQUNIRVx1cGRhdGVpbmZvLnR4dCIpPVRydWUgVGhlbg0KCQlTZXQgZiA9IGZzby5HZXRGaWxlKEJsb2dQYXRoICYgInpiX3VzZXJzXENBQ0hFXHVwZGF0ZWluZm8udHh0IikNCg0KCQlzdHJQaW5nQ29udGVudD1Mb2FkRnJvbUZpbGUoQmxvZ1BhdGggJiAiemJfdXNlcnNcQ0FDSEVcdXBkYXRlaW5mby50eHQiLCJ1dGYtOCIpDQoJCUlmIERhdGVEaWZmKCJoIixmLkRhdGVMYXN0TW9kaWZpZWQsTm93KT4yNCBUaGVuDQoJCQliPVRydWUNCgkJRWxzZQ0KCQkJaD1mLkRhdGVMYXN0TW9kaWZpZWQNCgkJRW5kIElmDQoJRWxzZQ0KCQliPVRydWUNCglFbmQgSWYNCg0KCUlmIElzRW1wdHkoUmVxdWVzdC5RdWVyeVN0cmluZygicmVsb2FkIikpPUZhbHNlIFRoZW4NCgkJYj1UcnVlDQoJRW5kIElmDQoNCg0KCUlmIGI9VHJ1ZSBUaGVuDQoJCURpbSBzdHJTZW5kVEINCgkJc3RyU2VuZFRCID0gImlucEhvc3Q9IiAmIFNlcnZlci5VUkxFbmNvZGUoQmxvZ0hvc3QpICYgIiZpbnBUaW1lem9uZT0iICYgU2VydmVyLlVSTEVuY29kZShaQ19USU1FX1pPTkUpICYgIiZpbnBWZXJzaW9uPSIgJiBTZXJ2ZXIuVVJMRW5jb2RlKFpDX0JMT0dfVkVSU0lPTikgJiAiJmlucExhbmd1YWdlPSIgJiBTZXJ2ZXIuVVJMRW5jb2RlKFpDX0JMT0dfTEFOR1VBR0UpICYgIiZpbnBJUD0iICYgU2VydmVyLlVSTEVuY29kZShSZXF1ZXN0LlNlcnZlclZhcmlhYmxlcygiTE9DQUxfQUREUiIpKQ0KDQoJCURpbSBvYmpQaW5nDQoJCVNldCBvYmpQaW5nID0gU2VydmVyLkNyZWF0ZU9iamVjdCgiTVNYTUwyLlNlcnZlclhNTEhUVFAiKQ0KDQoJCW9ialBpbmcub3BlbiAiUE9TVCIsWkNfVVBEQVRFX0lORk9fVVJMLEZhbHNlDQoNCgkJb2JqUGluZy5zZXRSZXF1ZXN0SGVhZGVyICJDb250ZW50LVR5cGUiLCAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIg0KCQlvYmpQaW5nLnNlbmQgc3RyU2VuZFRCDQoNCgkJSWYgb2JqUGluZy5SZWFkeVN0YXRlPTQgVGhlbg0KCQkJSWYgb2JqUGluZy5TdGF0dXM9MjAwIFRoZW4NCgkJCQlzdHJQaW5nQ29udGVudD1vYmpQaW5nLnJlc3BvbnNlVGV4dA0KCQkJRW5kIElmDQoJCUVuZCBJZg0KDQoJCURpbSBvYmpSZWdFeHANCgkJU2V0IG9ialJlZ0V4cD1OZXcgUmVnRXhwDQoJCW9ialJlZ0V4cC5JZ25vcmVDYXNlID1UcnVlDQoJCW9ialJlZ0V4cC5HbG9iYWw9VHJ1ZQ0KCQlvYmpSZWdFeHAuUGF0dGVybj0iPHNjcmlwdC4qLyo+fDwvc2NyaXB0Pnw8W2EtekEtWl1bXj5dKj1bJyIiXStqYXZhc2NyaXB0Olx3Ky4qWyciIl0rPnw8XHcrW14+XSpcc29uXHcrPS4qWyAvXSo+Ig0KCQlzdHJQaW5nQ29udGVudD0gb2JqUmVnRXhwLlJlcGxhY2Uoc3RyUGluZ0NvbnRlbnQsIiIpDQoNCgkJU2V0IG9ialBpbmcgPSBOb3RoaW5nDQoNCgkJQ2FsbCBTYXZlVG9GaWxlKEJsb2dQYXRoICYgInpiX3VzZXJzXENBQ0hFXHVwZGF0ZWluZm8udHh0IixzdHJQaW5nQ29udGVudCwidXRmLTgiLEZhbHNlKQ0KDQoJRW5kIElmDQoJJ1Jlc3BvbnNlLkFkZEhlYWRlciAiTGFzdC1Nb2RpZmllZCIsUGFyc2VEYXRlRm9yUkZDODIyR01UKGgpDQoJUmVzcG9uc2UuV3JpdGUgc3RyUGluZ0NvbnRlbnQNCg0KRW5kIElmDQolPg==</file>
	<file name='zb_system\ADMIN\edit_catalog.asp' crc32='AFCEBA2B'  dt:dt='bin.base64'></file>
	<file name='zb_system\ADMIN\edit_function.asp' crc32='E37F0739'  dt:dt='bin.base64'></file>
	<file name='zb_system\ADMIN\edit_setting.asp' crc32='91EA4A97'  dt:dt='bin.base64'>77u/PCVAIENPREVQQUdFPTY1MDAxICU+DQo8JQ0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicvLyAgICAgICAgICAgICAgWi1CbG9nIOW9qeiZuee9keW/l+S4quS6uueJiA0KJy8vIOS9nCAgICDogIU6ICAgIOacseeFiih6eC5hc2QpDQonLy8g54mI5p2D5omA5pyJOiAgICBSYWluYm93U29mdCBTdHVkaW8NCicvLyDmioDmnK/mlK/mjIE6ICAgIHJhaW5ib3dzb2Z0QDE2My5jb20NCicvLyDnqIvluo/lkI3np7A6ICAgIA0KJy8vIOeoi+W6j+eJiOacrDogICAgDQonLy8g5Y2V5YWD5ZCN56ewOiAgICBlZGl0X3NldHRpbmcuYXNwDQonLy8g5byA5aeL5pe26Ze0OiAgICAyMDA1LjAzLjE2DQonLy8g5pyA5ZCO5L+u5pS5OiAgICANCicvLyDlpIcgICAg5rOoOiAgICDnvJbovpHorr7nva7pobUNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQolPg0KPCUgT3B0aW9uIEV4cGxpY2l0ICU+DQo8JSBPbiBFcnJvciBSZXN1bWUgTmV4dCAlPg0KPCUgUmVzcG9uc2UuQ2hhcnNldD0iVVRGLTgiICU+DQo8JSBSZXNwb25zZS5CdWZmZXI9VHJ1ZSAlPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSIuLi8uLi96Yl91c2Vycy9jX29wdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSIuLi9mdW5jdGlvbi9jX2Z1bmN0aW9uLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9Ii4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2xpYi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSIuLi9mdW5jdGlvbi9jX3N5c3RlbV9iYXNlLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9Ii4uL2Z1bmN0aW9uL2Nfc3lzdGVtX3BsdWdpbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSIuLi8uLi96Yl91c2Vycy9wbHVnaW4vcF9jb25maWcuYXNwIiAtLT4NCjwlDQoNCkNhbGwgU3lzdGVtX0luaXRpYWxpemUoKQ0KDQoncGx1Z2luIG5vZGUNCkZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX0VkaXRfU2V0dGluZ19CZWdpbiBpbiBBY3Rpb25fUGx1Z2luX0VkaXRfU2V0dGluZ19CZWdpbg0KCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX0VkaXRfU2V0dGluZ19CZWdpbikgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fRWRpdF9TZXR0aW5nX0JlZ2luKQ0KTmV4dA0KDQon5qOA5p+l6Z2e5rOV6ZO+5o6lDQpDYWxsIENoZWNrUmVmZXJlbmNlKCIiKQ0KDQon5qOA5p+l5p2D6ZmQDQpJZiBOb3QgQ2hlY2tSaWdodHMoIlNldHRpbmdNbmciKSBUaGVuIENhbGwgU2hvd0Vycm9yKDYpDQoNCkRpbSBFZGl0QXJ0aWNsZQ0KDQpCbG9nVGl0bGU9WkNfTVNHMjQ3DQoNCiU+DQo8IS0tI2luY2x1ZGUgZmlsZT0iYWRtaW5faGVhZGVyLmFzcCItLT4NCjwhLS0jaW5jbHVkZSBmaWxlPSJhZG1pbl90b3AuYXNwIi0tPg0KCQkJPGRpdiBpZD0iZGl2TWFpbiI+DQo8JSBDYWxsIEdldEJsb2dIaW50KCkgJT4NCjxkaXYgY2xhc3M9ImRpdkhlYWRlciI+PCU9QmxvZ1RpdGxlJT48L2Rpdj4NCjwlDQoJUmVzcG9uc2UuV3JpdGUgIjxkaXYgY2xhc3M9IiJTdWJNZW51IiI+IiAmIFJlc3BvbnNlX1BsdWdpbl9TZXR0aW5nTW5nX1N1Yk1lbnUgJiAiPC9kaXY+Ig0KJT4NCjxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSIuLi9jbWQuYXNwP2FjdD1TZXR0aW5nU2F2Ij4NCjxkaXYgaWQ9ImRpdk1haW4yIj4NCg0KCQkJPGRpdiBjbGFzcz0iY29udGVudC1ib3giPjwhLS0gU3RhcnQgQ29udGVudCBCb3ggLS0+DQoJCQkJDQoJCQkJPGRpdiBjbGFzcz0iY29udGVudC1ib3gtaGVhZGVyIj4NCgkJCQ0KCQkJCQk8dWwgY2xhc3M9ImNvbnRlbnQtYm94LXRhYnMiPg0KDQoJPGxpPjxhIGhyZWY9IiN0YWIxIiBjbGFzcz0iZGVmYXVsdC10YWIiPjxzcGFuPjwlPVpDX01TRzEwNSU+PC9zcGFuPjwvYT48L2xpPg0KCTxsaT48YSBocmVmPSIjdGFiMiI+PHNwYW4+PCU9WkNfTVNHMTczJT48L3NwYW4+PC9hPjwvbGk+DQoJPGxpPjxhIGhyZWY9IiN0YWIzIj48c3Bhbj48JT1aQ19NU0cxODYlPjwvc3Bhbj48L2E+PC9saT4NCgk8bGkgPCU9SUlGKFpDX1BPU1RfU1RBVElDX01PREU8PiJTVEFUSUMiLCJzdHlsZT0nZGlzcGxheTpub25lOyciLCIiKSU+PjxhIGhyZWY9IiN0YWI0Ij48c3Bhbj48JT1aQ19NU0cyNTUlPjwvc3Bhbj48L2E+PC9saT4NCgk8bGk+PGEgaHJlZj0iI3RhYjUiPjxzcGFuPjwlPVpDX01TRzIxNSU+PC9zcGFuPjwvYT48L2xpPg0KCQkJCQk8L3VsPg0KCQkJCQkNCgkJCQkJPGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2Pg0KCQkJCQkNCgkJCQk8L2Rpdj4gPCEtLSBFbmQgLmNvbnRlbnQtYm94LWhlYWRlciAtLT4NCgkJCQkNCgkJCQk8ZGl2IGNsYXNzPSJjb250ZW50LWJveC1jb250ZW50Ij4NCg0KPCUNCg0KCUZ1bmN0aW9uIFNwbGl0TmFtZUFuZE5vdGUocykNCg0KCQlEaW0gaSxqDQoNCgkJaT1JblN0cihzLCIoIikNCgkJaj1JblN0cihzLCIpIikNCg0KCQlJZiBpPjAgQW5kIGo+MCBUaGVuIA0KCQkJU3BsaXROYW1lQW5kTm90ZT0iPHAgIGFsaWduPSdsZWZ0Jz48Yj7CtyAiICYgTGVmdChzLGktMSkgJiAiPC9iPiINCgkJCVNwbGl0TmFtZUFuZE5vdGU9U3BsaXROYW1lQW5kTm90ZSAmICI8YnIvPjxzcGFuIGNsYXNzPSdub3RlJz4mbmJzcDsmbmJzcDsiICYgTWlkKHMsaSsxLExlbihzKS1pKzEtMikgJiAiPC9zcGFuPjwvcD4iDQoJCUVsc2UNCgkJCVNwbGl0TmFtZUFuZE5vdGU9IjxwICBhbGlnbj0nbGVmdCc+PGI+wrcgIiAmIHMgJiAiPC9iPjwvcD4iDQoJCUVuZCBJZg0KCQkNCglFbmQgRnVuY3Rpb24NCg0KDQoJRGltIGksag0KCURpbSB0bXBTbmcNCg0KCXRtcFNuZz1Mb2FkRnJvbUZpbGUoQmxvZ1BhdGggJiAiemJfdXNlcnMvY19jdXN0b20uYXNwIiwidXRmLTgiKQ0KDQoJRGltIHN0clpDX0JMT0dfSE9TVA0KCURpbSBzdHJaQ19CTE9HX1RJVExFDQoJRGltIHN0clpDX0JMT0dfU1VCVElUTEUNCglEaW0gc3RyWkNfQkxPR19OQU1FDQoJRGltIHN0clpDX0JMT0dfU1VCX05BTUUNCglEaW0gc3RyWkNfQkxPR19DT1BZUklHSFQNCglEaW0gc3RyWkNfQkxPR19NQVNURVINCglEaW0gc3RyWkNfUEVSTUFORU5UX0RPTUFJTl9FTkFCTEUNCg0KCXN0clpDX0JMT0dfSE9TVD1UcmFuc2ZlckhUTUwoWkNfQkxPR19IT1NULCJbaHRtbC1mb3JtYXRdIikNCglzdHJaQ19CTE9HX1RJVExFPVRyYW5zZmVySFRNTChaQ19CTE9HX1RJVExFLCJbaHRtbC1mb3JtYXRdIikNCglzdHJaQ19CTE9HX1NVQlRJVExFPVRyYW5zZmVySFRNTChaQ19CTE9HX1NVQlRJVExFLCJbaHRtbC1mb3JtYXRdIikNCglzdHJaQ19CTE9HX05BTUU9VHJhbnNmZXJIVE1MKFpDX0JMT0dfTkFNRSwiW2h0bWwtZm9ybWF0XSIpDQoJc3RyWkNfQkxPR19TVUJfTkFNRT1UcmFuc2ZlckhUTUwoWkNfQkxPR19TVUJfTkFNRSwiW2h0bWwtZm9ybWF0XSIpDQoJc3RyWkNfQkxPR19DT1BZUklHSFQ9VHJhbnNmZXJIVE1MKFpDX0JMT0dfQ09QWVJJR0hULCJbaHRtbC1mb3JtYXRdIikNCglzdHJaQ19CTE9HX01BU1RFUj1UcmFuc2ZlckhUTUwoWkNfQkxPR19NQVNURVIsIltodG1sLWZvcm1hdF0iKQ0KCXN0clpDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFPVRyYW5zZmVySFRNTChaQ19QRVJNQU5FTlRfRE9NQUlOX0VOQUJMRSwiW2h0bWwtZm9ybWF0XSIpDQoNCg0KCVJlc3BvbnNlLldyaXRlICI8ZGl2IGNsYXNzPSIidGFiLWNvbnRlbnQgZGVmYXVsdC10YWIiIiBzdHlsZT0nYm9yZGVyOm5vbmU7cGFkZGluZzowcHg7bWFyZ2luOjA7JyBpZD0iInRhYjEiIj4iDQoJUmVzcG9uc2UuV3JpdGUgIjxpbnB1dCBpZD0iImVkdFpDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFIiIgbmFtZT0iImVkdFpDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFIiIgdHlwZT0iImhpZGRlbiIiIHZhbHVlPSIiIiAmIHN0clpDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFICYgIiIiIC8+Ig0KCVJlc3BvbnNlLldyaXRlICI8dGFibGUgd2lkdGg9JzEwMCUnIHN0eWxlPSdwYWRkaW5nOjBweDttYXJnaW46MHB4OycgY2VsbHNwYWNpbmc9JzAnIGNlbGxwYWRkaW5nPScwJz4iDQoJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQgd2lkdGg9JzMwJSc+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMTI2KSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19CTE9HX0hPU1QiIiBuYW1lPSIiZWR0WkNfQkxPR19IT1NUIiIgc3R5bGU9IiJ3aWR0aDo2MDBweDsiIiB0eXBlPSIidGV4dCIiICImSUlGKENCb29sKFpDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFKSwiIiwicmVhZG9ubHk9IiJyZWFkb25seSIiIikmIiB2YWx1ZT0iIiIgJiBzdHJaQ19CTE9HX0hPU1QgJiAiIiIgLz48YnIvPjxsYWJlbD48aW5wdXQgdHlwZT0ncmFkaW8nIG5hbWU9J1pDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFJyAiJklJRihDQm9vbChaQ19QRVJNQU5FTlRfRE9NQUlOX0VOQUJMRSk9VHJ1ZSwiIiwiY2hlY2tlZD0iImNoZWNrZWQiIiIpJiIgdmFsdWU9J0ZhbHNlJyBvbmNoYW5nZT0iIiQoJyNlZHRaQ19QRVJNQU5FTlRfRE9NQUlOX0VOQUJMRScpLnZhbCgnRmFsc2UnKTskKCcjZWR0WkNfQkxPR19IT1NUJykucHJvcCgncmVhZG9ubHknLCB0cnVlKTsiIiAvPiImWkNfTVNHMjk3JiI8L2xhYmVsPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOzxsYWJlbD48aW5wdXQgdHlwZT0ncmFkaW8nIG5hbWU9J1pDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFJyAiJklJRihDQm9vbChaQ19QRVJNQU5FTlRfRE9NQUlOX0VOQUJMRSk9RmFsc2UsIiIsImNoZWNrZWQ9IiJjaGVja2VkIiIiKSYiIHZhbHVlPSdUcnVlJyAgIG9uY2hhbmdlPSIiJCgnI2VkdFpDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFJykudmFsKCdUcnVlJyk7JCgnI2VkdFpDX0JMT0dfSE9TVCcpLnByb3AoJ3JlYWRvbmx5JywgZmFsc2UpOyIiIC8+IiZaQ19NU0cyOTYmIjwvbGFiZWw+PC9wPjwvdGQ+PC90cj4iDQoJJ1Jlc3BvbnNlLldyaXRlICI8dHI+PHRkIHdpZHRoPSczMCUnPiIgJiBTcGxpdE5hbWVBbmROb3RlKFpDX01TRzA5MSkgJiAiPC90ZD48dGQ+PHA+PGlucHV0IGlkPSIiZWR0WkNfQkxPR19OQU1FIiIgbmFtZT0iImVkdFpDX0JMT0dfTkFNRSIiIHN0eWxlPSIid2lkdGg6NjAwcHg7IiIgdHlwZT0iInRleHQiIiB2YWx1ZT0iIiIgJiBzdHJaQ19CTE9HX05BTUUgJiAiIiIgLz48L3A+PC90ZD48L3RyPiINCgknUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQ+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMDkyKSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19CTE9HX1NVQl9OQU1FIiIgbmFtZT0iImVkdFpDX0JMT0dfU1VCX05BTUUiIiBzdHlsZT0iIndpZHRoOjYwMHB4OyIiICB0eXBlPSIidGV4dCIiIHZhbHVlPSIiIiAmIHN0clpDX0JMT0dfU1VCX05BTUUgJiAiIiIgLz48L3A+PC90ZD48L3RyPiINCglSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cwOTMpICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX0JMT0dfVElUTEUiIiBuYW1lPSIiZWR0WkNfQkxPR19USVRMRSIiIHN0eWxlPSIid2lkdGg6NjAwcHg7IiIgIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgc3RyWkNfQkxPR19USVRMRSAmIiIiIC8+PC9wPjwvdGQ+PC90cj4iDQoJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQ+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMDk0KSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19CTE9HX1NVQlRJVExFIiIgbmFtZT0iImVkdFpDX0JMT0dfU1VCVElUTEUiIiBzdHlsZT0iIndpZHRoOjYwMHB4OyIiICB0eXBlPSIidGV4dCIiIHZhbHVlPSIiIiAmIHN0clpDX0JMT0dfU1VCVElUTEUgJiAiIiIgLz48L3A+PC90ZD48L3RyPiINCglSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cwOTYpICYgIjwvdGQ+PHRkPjxwPjx0ZXh0YXJlYSBjb2xzPSIiMyIiIHJvd3M9IiI2IiIgaWQ9IiJlZHRaQ19CTE9HX0NPUFlSSUdIVCIiIG5hbWU9IiJlZHRaQ19CTE9HX0NPUFlSSUdIVCIiIHN0eWxlPSIid2lkdGg6NjAwcHg7IiI+IiAmIHN0clpDX0JMT0dfQ09QWVJJR0hUICYgIjwvdGV4dGFyZWE+PC9wPjwvdGQ+PC90cj4iDQoNCg0KCVJlc3BvbnNlLldyaXRlICI8L3RhYmxlPiINCglSZXNwb25zZS5Xcml0ZSAiPC9kaXY+Ig0KDQoNCg0KCVJlc3BvbnNlLldyaXRlICI8ZGl2IGNsYXNzPSIidGFiLWNvbnRlbnQiIiBzdHlsZT0nYm9yZGVyOm5vbmU7cGFkZGluZzowcHg7bWFyZ2luOjA7JyBpZD0iInRhYjIiIj4iDQoJUmVzcG9uc2UuV3JpdGUgIjx0YWJsZSB3aWR0aD0nMTAwJScgc3R5bGU9J3BhZGRpbmc6MHB4O21hcmdpbjowcHg7JyBjZWxsc3BhY2luZz0nMCcgY2VsbHBhZGRpbmc9JzAnPiINCgl0bXBTbmc9TG9hZEZyb21GaWxlKEJsb2dQYXRoICYgInpiX3VzZXJzL2Nfb3B0aW9uLmFzcCIsInV0Zi04IikNCg0KDQoNCgkJJ1pDX0JMT0dfQ0xTSUQ9VHJhbnNmZXJIVE1MKFpDX0JMT0dfQ0xTSUQsIltodG1sLWZvcm1hdF0iKQ0KCQknUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQgd2lkdGg9JzMwJSc+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMTc0KSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19CTE9HX0NMU0lEIiIgbmFtZT0iImVkdFpDX0JMT0dfQ0xTSUQiIiBzdHlsZT0iIndpZHRoOjYwMHB4OyIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfQkxPR19DTFNJRCAmICIiIiAvPjwvcD48L3RkPjwvdHI+Ig0KDQoNCgkJWkNfVElNRV9aT05FPVRyYW5zZmVySFRNTChaQ19USU1FX1pPTkUsIltodG1sLWZvcm1hdF0iKQ0KCQlSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZCB3aWR0aD0nMzAlJz4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cxNzUpICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX1RJTUVfWk9ORSIiIG5hbWU9IiJlZHRaQ19USU1FX1pPTkUiIiBzdHlsZT0iIndpZHRoOjYwMHB4OyIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfVElNRV9aT05FICYgIiIiIC8+PC9wPjwvdGQ+PC90cj4iDQoNCg0KDQoNCgkJWkNfSE9TVF9USU1FX1pPTkU9VHJhbnNmZXJIVE1MKFpDX0hPU1RfVElNRV9aT05FLCJbaHRtbC1mb3JtYXRdIikNCgkJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQ+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMjA2KSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19IT1NUX1RJTUVfWk9ORSIiIG5hbWU9IiJlZHRaQ19IT1NUX1RJTUVfWk9ORSIiIHN0eWxlPSIid2lkdGg6NjAwcHg7IiIgdHlwZT0iInRleHQiIiB2YWx1ZT0iIiIgJiBaQ19IT1NUX1RJTUVfWk9ORSAmICIiIiAvPjwvcD48L3RkPjwvdHI+Ig0KDQoNCgkJWkNfQkxPR19MQU5HVUFHRT1UcmFuc2ZlckhUTUwoWkNfQkxPR19MQU5HVUFHRSwiW2h0bWwtZm9ybWF0XSIpDQoJCVJlc3BvbnNlLldyaXRlICI8dHI+PHRkPiIgJiBTcGxpdE5hbWVBbmROb3RlKFpDX01TRzE3NikgJiAiPC90ZD48dGQ+PHA+PGlucHV0IGlkPSIiZWR0WkNfQkxPR19MQU5HVUFHRSIiIG5hbWU9IiJlZHRaQ19CTE9HX0xBTkdVQUdFIiIgc3R5bGU9IiJ3aWR0aDo2MDBweDsiIiB0eXBlPSIidGV4dCIiIHZhbHVlPSIiIiAmIFpDX0JMT0dfTEFOR1VBR0UgJiAiIiIgLz48L3A+PC90ZD48L3RyPiINCg0KDQoNCgkJWkNfVVBMT0FEX0ZJTEVUWVBFPVRyYW5zZmVySFRNTChaQ19VUExPQURfRklMRVRZUEUsIltodG1sLWZvcm1hdF0iKQ0KCQlSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cxODMpICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX1VQTE9BRF9GSUxFVFlQRSIiIG5hbWU9IiJlZHRaQ19VUExPQURfRklMRVRZUEUiIiBzdHlsZT0iIndpZHRoOjYwMHB4OyIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfVVBMT0FEX0ZJTEVUWVBFICYgIiIiIC8+PC9wPjwvdGQ+PC90cj4iDQoNCg0KCQlaQ19VUExPQURfRklMRVNJWkU9VHJhbnNmZXJIVE1MKFpDX1VQTE9BRF9GSUxFU0laRSwiW2h0bWwtZm9ybWF0XSIpDQoJCVJlc3BvbnNlLldyaXRlICI8dHI+PHRkPiIgJiBTcGxpdE5hbWVBbmROb3RlKFpDX01TRzE4NCkgJiAiPC90ZD48dGQ+PHA+PGlucHV0IGlkPSIiZWR0WkNfVVBMT0FEX0ZJTEVTSVpFIiIgbmFtZT0iImVkdFpDX1VQTE9BRF9GSUxFU0laRSIiIHN0eWxlPSIid2lkdGg6NjAwcHg7IiIgdHlwZT0iInRleHQiIiB2YWx1ZT0iIiIgJiBaQ19VUExPQURfRklMRVNJWkUgJiAiIiIgLz48L3A+PC90ZD48L3RyPiINCg0KDQoJCVpDX1JTU19FWFBPUlRfV0hPTEU9VHJhbnNmZXJIVE1MKFpDX1JTU19FWFBPUlRfV0hPTEUsIltodG1sLWZvcm1hdF0iKQ0KCQlSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cyMjYpICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX1JTU19FWFBPUlRfV0hPTEUiIiBuYW1lPSIiZWR0WkNfUlNTX0VYUE9SVF9XSE9MRSIiIHN0eWxlPSIiIiIgdHlwZT0iInRleHQiIiB2YWx1ZT0iIiIgJiBaQ19SU1NfRVhQT1JUX1dIT0xFICYgIiIiIGNsYXNzPSIiY2hlY2tib3giIi8+PC9wPjwvdGQ+PC90cj4iDQoNCg0KDQoJUmVzcG9uc2UuV3JpdGUgIjwvdGFibGU+Ig0KCVJlc3BvbnNlLldyaXRlICI8L2Rpdj4iDQoJUmVzcG9uc2UuV3JpdGUgIjxkaXYgY2xhc3M9IiJ0YWItY29udGVudCIiIHN0eWxlPSdib3JkZXI6bm9uZTtwYWRkaW5nOjBweDttYXJnaW46MDsnIGlkPSIidGFiMyIiPiINCglSZXNwb25zZS5Xcml0ZSAiPHRhYmxlIHdpZHRoPScxMDAlJyBzdHlsZT0ncGFkZGluZzowcHg7bWFyZ2luOjBweDsnIGNlbGxzcGFjaW5nPScwJyBjZWxscGFkZGluZz0nMCc+Ig0KDQoNCgkJWkNfRElTUExBWV9DT1VOVD1UcmFuc2ZlckhUTUwoWkNfRElTUExBWV9DT1VOVCwiW2h0bWwtZm9ybWF0XSIpDQoJCVJlc3BvbnNlLldyaXRlICI8dHI+PHRkIHdpZHRoPSczMCUnPiIgJiBTcGxpdE5hbWVBbmROb3RlKFpDX01TRzE5MCkgJiAiPC90ZD48dGQ+PHA+PGlucHV0IGlkPSIiZWR0WkNfRElTUExBWV9DT1VOVCIiIG5hbWU9IiJlZHRaQ19ESVNQTEFZX0NPVU5UIiIgc3R5bGU9IiJ3aWR0aDo2MDBweDsiIiB0eXBlPSIidGV4dCIiIHZhbHVlPSIiIiAmIFpDX0RJU1BMQVlfQ09VTlQgJiAiIiIgLz48L3A+PC90ZD48L3RyPiINCg0KDQoJCVpDX1NFQVJDSF9DT1VOVD1UcmFuc2ZlckhUTUwoWkNfU0VBUkNIX0NPVU5ULCJbaHRtbC1mb3JtYXRdIikNCgkJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQ+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMjc0KSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19TRUFSQ0hfQ09VTlQiIiBuYW1lPSIiZWR0WkNfU0VBUkNIX0NPVU5UIiIgc3R5bGU9IiJ3aWR0aDo2MDBweDsiIiB0eXBlPSIidGV4dCIiIHZhbHVlPSIiIiAmIFpDX1NFQVJDSF9DT1VOVCAmICIiIiAvPjwvcD48L3RkPjwvdHI+Ig0KDQoNCgkJWkNfVVNFX05BVklHQVRFX0FSVElDTEU9VHJhbnNmZXJIVE1MKFpDX1VTRV9OQVZJR0FURV9BUlRJQ0xFLCJbaHRtbC1mb3JtYXRdIikNCgkJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQ+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMjA5KSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19VU0VfTkFWSUdBVEVfQVJUSUNMRSIiIG5hbWU9IiJlZHRaQ19VU0VfTkFWSUdBVEVfQVJUSUNMRSIiIHN0eWxlPSIiIiIgdHlwZT0iInRleHQiIiB2YWx1ZT0iIiIgJiBaQ19VU0VfTkFWSUdBVEVfQVJUSUNMRSAmICIiIiBjbGFzcz0iImNoZWNrYm94IiIvPjwvcD48L3RkPjwvdHI+Ig0KDQoNCgkJWkNfTVVUVUFMSVRZX0NPVU5UPVRyYW5zZmVySFRNTChaQ19NVVRVQUxJVFlfQ09VTlQsIltodG1sLWZvcm1hdF0iKQ0KCQlSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cyMzApICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX01VVFVBTElUWV9DT1VOVCIiIG5hbWU9IiJlZHRaQ19NVVRVQUxJVFlfQ09VTlQiIiBzdHlsZT0iIndpZHRoOjYwMHB4OyIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfTVVUVUFMSVRZX0NPVU5UICYgIiIiIC8+PC9wPjwvdGQ+PC90cj4iDQoNCgkJWkNfQ09NTUVOVF9UVVJOT0ZGPVRyYW5zZmVySFRNTChaQ19DT01NRU5UX1RVUk5PRkYsIltodG1sLWZvcm1hdF0iKQ0KCQlSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cyNjIpICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX0NPTU1FTlRfVFVSTk9GRiIiIG5hbWU9IiJlZHRaQ19DT01NRU5UX1RVUk5PRkYiIiBzdHlsZT0iIiIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfQ09NTUVOVF9UVVJOT0ZGICYgIiIiIGNsYXNzPSIiY2hlY2tib3giIi8+PC9wPjwvdGQ+PC90cj4iDQoNCg0KCQlaQ19DT01NRU5UU19ESVNQTEFZX0NPVU5UPVRyYW5zZmVySFRNTChaQ19DT01NRU5UU19ESVNQTEFZX0NPVU5ULCJbaHRtbC1mb3JtYXRdIikNCgkJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQ+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMTcxKSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19DT01NRU5UU19ESVNQTEFZX0NPVU5UIiIgbmFtZT0iImVkdFpDX0NPTU1FTlRTX0RJU1BMQVlfQ09VTlQiIiBzdHlsZT0iIndpZHRoOjYwMHB4OyIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfQ09NTUVOVFNfRElTUExBWV9DT1VOVCAmICIiIi8+PC9wPjwvdGQ+PC90cj4iDQoNCg0KCQlaQ19DT01NRU5UX1JFVkVSU0VfT1JERVJfRVhQT1JUPVRyYW5zZmVySFRNTChaQ19DT01NRU5UX1JFVkVSU0VfT1JERVJfRVhQT1JULCJbaHRtbC1mb3JtYXRdIikNCgkJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQ+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMjcxKSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19DT01NRU5UX1JFVkVSU0VfT1JERVJfRVhQT1JUIiIgbmFtZT0iImVkdFpDX0NPTU1FTlRfUkVWRVJTRV9PUkRFUl9FWFBPUlQiIiBzdHlsZT0iIiIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfQ09NTUVOVF9SRVZFUlNFX09SREVSX0VYUE9SVCAmICIiIiBjbGFzcz0iImNoZWNrYm94IiIvPjwvcD48L3RkPjwvdHI+Ig0KDQoNCgkJWkNfQ09NTUVOVF9WRVJJRllfRU5BQkxFPVRyYW5zZmVySFRNTChaQ19DT01NRU5UX1ZFUklGWV9FTkFCTEUsIltodG1sLWZvcm1hdF0iKQ0KCQlSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cxODUpICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX0NPTU1FTlRfVkVSSUZZX0VOQUJMRSIiIG5hbWU9IiJlZHRaQ19DT01NRU5UX1ZFUklGWV9FTkFCTEUiIiBzdHlsZT0iIiIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfQ09NTUVOVF9WRVJJRllfRU5BQkxFICYgIiIiIGNsYXNzPSIiY2hlY2tib3giIi8+PC9wPjwvdGQ+PC90cj4iDQoNCg0KDQoNCglSZXNwb25zZS5Xcml0ZSAiPC90YWJsZT4iDQoJUmVzcG9uc2UuV3JpdGUgIjwvZGl2PiINCglSZXNwb25zZS5Xcml0ZSAiPGRpdiBjbGFzcz0iInRhYi1jb250ZW50IiIgc3R5bGU9J2JvcmRlcjpub25lO3BhZGRpbmc6MHB4O21hcmdpbjowOycgaWQ9IiJ0YWI0IiI+Ig0KCVJlc3BvbnNlLldyaXRlICI8dGFibGUgd2lkdGg9JzEwMCUnIHN0eWxlPSdwYWRkaW5nOjBweDttYXJnaW46MHB4OycgY2VsbHNwYWNpbmc9JzAnIGNlbGxwYWRkaW5nPScwJz4iDQoNCg0KCQlaQ19TVEFUSUNfRElSRUNUT1JZPVRyYW5zZmVySFRNTChaQ19TVEFUSUNfRElSRUNUT1JZLCJbaHRtbC1mb3JtYXRdIikNCgkJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQgd2lkdGg9JzMwJSc+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMTc4KSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19TVEFUSUNfRElSRUNUT1JZIiIgbmFtZT0iImVkdFpDX1NUQVRJQ19ESVJFQ1RPUlkiIiBzdHlsZT0iIndpZHRoOjYwMHB4OyIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfU1RBVElDX0RJUkVDVE9SWSAmICIiIiAvPjwvcD48L3RkPjwvdHI+Ig0KDQoNCgkJWkNfUkVCVUlMRF9GSUxFX0NPVU5UPVRyYW5zZmVySFRNTChaQ19SRUJVSUxEX0ZJTEVfQ09VTlQsIltodG1sLWZvcm1hdF0iKQ0KCQlSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cxODEpICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX1JFQlVJTERfRklMRV9DT1VOVCIiIG5hbWU9IiJlZHRaQ19SRUJVSUxEX0ZJTEVfQ09VTlQiIiBzdHlsZT0iIndpZHRoOjYwMHB4OyIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfUkVCVUlMRF9GSUxFX0NPVU5UICYgIiIiIC8+PC9wPjwvdGQ+PC90cj4iDQoNCg0KDQoJCVpDX1JFQlVJTERfRklMRV9JTlRFUlZBTD1UcmFuc2ZlckhUTUwoWkNfUkVCVUlMRF9GSUxFX0lOVEVSVkFMLCJbaHRtbC1mb3JtYXRdIikNCgkJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQ+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMTgyKSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19SRUJVSUxEX0ZJTEVfSU5URVJWQUwiIiBuYW1lPSIiZWR0WkNfUkVCVUlMRF9GSUxFX0lOVEVSVkFMIiIgc3R5bGU9IiJ3aWR0aDo2MDBweDsiIiB0eXBlPSIidGV4dCIiIHZhbHVlPSIiIiAmIFpDX1JFQlVJTERfRklMRV9JTlRFUlZBTCAmICIiIiAvPjwvcD48L3RkPjwvdHI+Ig0KDQoNCglSZXNwb25zZS5Xcml0ZSAiPC90YWJsZT4iDQoJUmVzcG9uc2UuV3JpdGUgIjwvZGl2PiINCglSZXNwb25zZS5Xcml0ZSAiPGRpdiBjbGFzcz0iInRhYi1jb250ZW50IiIgc3R5bGU9J2JvcmRlcjpub25lO3BhZGRpbmc6MHB4O21hcmdpbjowOycgaWQ9IiJ0YWI1IiI+Ig0KCVJlc3BvbnNlLldyaXRlICI8dGFibGUgd2lkdGg9JzEwMCUnIHN0eWxlPSdwYWRkaW5nOjBweDttYXJnaW46MHB4OycgY2VsbHNwYWNpbmc9JzAnIGNlbGxwYWRkaW5nPScwJz4iDQoNCg0KDQoNCgkJWkNfRElTUExBWV9DT1VOVF9XQVA9VHJhbnNmZXJIVE1MKFpDX0RJU1BMQVlfQ09VTlRfV0FQLCJbaHRtbC1mb3JtYXRdIikNCgkJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQgd2lkdGg9JzMwJSc+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMjE3KSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19ESVNQTEFZX0NPVU5UX1dBUCIiIG5hbWU9IiJlZHRaQ19ESVNQTEFZX0NPVU5UX1dBUCIiIHN0eWxlPSIid2lkdGg6NjAwcHg7IiIgdHlwZT0iInRleHQiIiB2YWx1ZT0iIiIgJiBaQ19ESVNQTEFZX0NPVU5UX1dBUCAmICIiIiAvPjwvcD48L3RkPjwvdHI+Ig0KDQoNCg0KCQlaQ19XQVBDT01NRU5UX0VOQUJMRT1UcmFuc2ZlckhUTUwoWkNfV0FQQ09NTUVOVF9FTkFCTEUsIltodG1sLWZvcm1hdF0iKQ0KCQlSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cyMDUpICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX1dBUENPTU1FTlRfRU5BQkxFIiIgbmFtZT0iImVkdFpDX1dBUENPTU1FTlRfRU5BQkxFIiIgc3R5bGU9IiIiIiB0eXBlPSIidGV4dCIiIHZhbHVlPSIiIiAmIFpDX1dBUENPTU1FTlRfRU5BQkxFICYgIiIiIGNsYXNzPSIiY2hlY2tib3giIi8+PC9wPjwvdGQ+PC90cj4iDQoNCg0KCQlaQ19DT01NRU5UX0NPVU5UX1dBUD1UcmFuc2ZlckhUTUwoWkNfQ09NTUVOVF9DT1VOVF9XQVAsIltodG1sLWZvcm1hdF0iKQ0KCQlSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cyMTgpICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX0NPTU1FTlRfQ09VTlRfV0FQIiIgbmFtZT0iImVkdFpDX0NPTU1FTlRfQ09VTlRfV0FQIiIgc3R5bGU9IiJ3aWR0aDo2MDBweDsiIiB0eXBlPSIidGV4dCIiIHZhbHVlPSIiIiAmIFpDX0NPTU1FTlRfQ09VTlRfV0FQICYgIiIiIC8+PC9wPjwvdGQ+PC90cj4iDQoNCg0KDQoJCVpDX0RJU1BMQVlfUEFHRUJBUl9BTExfV0FQPVRyYW5zZmVySFRNTChaQ19ESVNQTEFZX1BBR0VCQVJfQUxMX1dBUCwiW2h0bWwtZm9ybWF0XSIpDQoJCVJlc3BvbnNlLldyaXRlICI8dHI+PHRkPiIgJiBTcGxpdE5hbWVBbmROb3RlKFpDX01TRzEzMikgJiAiPC90ZD48dGQ+PHA+PGlucHV0IGlkPSIiZWR0WkNfRElTUExBWV9QQUdFQkFSX0FMTF9XQVAiIiBuYW1lPSIiZWR0WkNfRElTUExBWV9QQUdFQkFSX0FMTF9XQVAiIiBzdHlsZT0iIiIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfRElTUExBWV9QQUdFQkFSX0FMTF9XQVAgJiAiIiIgY2xhc3M9IiJjaGVja2JveCIiLz48L3A+PC90ZD48L3RyPiINCg0KDQoNCgkJWkNfUEFHRUJBUl9DT1VOVF9XQVA9VHJhbnNmZXJIVE1MKFpDX1BBR0VCQVJfQ09VTlRfV0FQLCJbaHRtbC1mb3JtYXRdIikNCgkJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQ+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMjE5KSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19QQUdFQkFSX0NPVU5UX1dBUCIiIG5hbWU9IiJlZHRaQ19QQUdFQkFSX0NPVU5UX1dBUCIiIHN0eWxlPSIid2lkdGg6NjAwcHg7IiIgdHlwZT0iInRleHQiIiB2YWx1ZT0iIiIgJiBaQ19QQUdFQkFSX0NPVU5UX1dBUCAmICIiIiAvPjwvcD48L3RkPjwvdHI+Ig0KDQoNCg0KCQlaQ19ESVNQTEFZX01PREVfQUxMX1dBUD1UcmFuc2ZlckhUTUwoWkNfRElTUExBWV9NT0RFX0FMTF9XQVAsIltodG1sLWZvcm1hdF0iKQ0KCQlSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cxMTcpICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX0RJU1BMQVlfTU9ERV9BTExfV0FQIiIgbmFtZT0iImVkdFpDX0RJU1BMQVlfTU9ERV9BTExfV0FQIiIgc3R5bGU9IiIiIiB0eXBlPSIidGV4dCIiIHZhbHVlPSIiIiAmIFpDX0RJU1BMQVlfTU9ERV9BTExfV0FQICYgIiIiIGNsYXNzPSIiY2hlY2tib3giIi8+PC9wPjwvdGQ+PC90cj4iDQoNCg0KCQlaQ19ESVNQTEFZX0NBVEVfQUxMX1dBUD1UcmFuc2ZlckhUTUwoWkNfRElTUExBWV9DQVRFX0FMTF9XQVAsIltodG1sLWZvcm1hdF0iKQ0KCQlSZXNwb25zZS5Xcml0ZSAiPHRyPjx0ZD4iICYgU3BsaXROYW1lQW5kTm90ZShaQ19NU0cxMzMpICYgIjwvdGQ+PHRkPjxwPjxpbnB1dCBpZD0iImVkdFpDX0RJU1BMQVlfQ0FURV9BTExfV0FQIiIgbmFtZT0iImVkdFpDX0RJU1BMQVlfQ0FURV9BTExfV0FQIiIgc3R5bGU9IiIiIiB0eXBlPSIidGV4dCIiIHZhbHVlPSIiIiAmIFpDX0RJU1BMQVlfQ0FURV9BTExfV0FQICYgIiIiIGNsYXNzPSIiY2hlY2tib3giIi8+PC9wPjwvdGQ+PC90cj4iDQoNCg0KCQlaQ19XQVBfTVVUVUFMSVRZX0xJTUlUPVRyYW5zZmVySFRNTChaQ19XQVBfTVVUVUFMSVRZX0xJTUlULCJbaHRtbC1mb3JtYXRdIikNCgkJUmVzcG9uc2UuV3JpdGUgIjx0cj48dGQ+IiAmIFNwbGl0TmFtZUFuZE5vdGUoWkNfTVNHMTAyKSAmICI8L3RkPjx0ZD48cD48aW5wdXQgaWQ9IiJlZHRaQ19XQVBfTVVUVUFMSVRZX0xJTUlUIiIgbmFtZT0iImVkdFpDX1dBUF9NVVRVQUxJVFlfTElNSVQiIiBzdHlsZT0iIndpZHRoOjYwMHB4OyIiIHR5cGU9IiJ0ZXh0IiIgdmFsdWU9IiIiICYgWkNfV0FQX01VVFVBTElUWV9MSU1JVCAmICIiIiAvPjwvcD48L3RkPjwvdHI+Ig0KDQoNCglSZXNwb25zZS5Xcml0ZSAiPC90YWJsZT4iDQoJUmVzcG9uc2UuV3JpdGUgIjwvZGl2PiINCg0KJT4NCg0KCQkJCTwvZGl2PiA8IS0tIEVuZCAuY29udGVudC1ib3gtY29udGVudCAtLT4NCgkJCQkNCgkJCTwvZGl2PiA8IS0tIEVuZCAuY29udGVudC1ib3ggLS0+DQo8JQ0KDQoNCg0KCVJlc3BvbnNlLldyaXRlICI8cD48YnIvPjxpbnB1dCB0eXBlPSIic3VibWl0IiIgY2xhc3M9IiJidXR0b24iIiB2YWx1ZT0iIiImIFpDX01TRzA4NyAmIiIiIGlkPSIiYnRuUG9zdCIiIG9uY2xpY2s9JycgLz48L3A+Ig0KDQolPg0KDQoNCgkJCTwvZGl2PjwvZm9ybT48L2Rpdj4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCg0KQWN0aXZlVG9wTWVudSgndG9wbWVudTInKTsNCg0KPC9zY3JpcHQ+DQo8IS0tI2luY2x1ZGUgZmlsZT0iYWRtaW5fZm9vdGVyLmFzcCItLT4NCjwlIA0KQ2FsbCBTeXN0ZW1fVGVybWluYXRlKCkNCg0KSWYgRXJyLk51bWJlcjw+MCB0aGVuDQoJQ2FsbCBTaG93RXJyb3IoMCkNCkVuZCBJZg0KJT4=</file>
	<file name='zb_system\ADMIN\edit_ueditor.asp' crc32='1A97D934'  dt:dt='bin.base64'></file>
	<file name='zb_system\ADMIN\edit_user.asp' crc32='F0958CDF'  dt:dt='bin.base64'></file>
	<file name='zb_system\ADMIN\ueditor\editor_all.pack.js' crc32='F81F1B4B'  dt:dt='bin.base64'></file>
	<file name='zb_system\ADMIN\ueditor\editor_config.asp' crc32='E3DE0658'  dt:dt='bin.base64'>77u/PCVAIENPREVQQUdFPTY1MDAxICU+DQo8IS0tICNpbmNsdWRlIGZpbGU9Ii4uLy4uLy4uL3piX3VzZXJzL2Nfb3B0aW9uLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9Ii4uLy4uL2Z1bmN0aW9uL2NfZnVuY3Rpb24uYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vLi4vZnVuY3Rpb24vY19zeXN0ZW1fbGliLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9Ii4uLy4uL2Z1bmN0aW9uL2Nfc3lzdGVtX2Jhc2UuYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vLi4vZnVuY3Rpb24vY19zeXN0ZW1fcGx1Z2luLmFzcCIgLS0+DQo8IS0tICNpbmNsdWRlIGZpbGU9Ii4uLy4uLy4uL3piX3VzZXJzL3BsdWdpbi9wX2NvbmZpZy5hc3AiIC0tPg0KPCUNClJlc3BvbnNlLkNvbnRlbnRUeXBlPSJhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQiDQolPg0KPCUNCkNhbGwgQWN0aXZlUGx1Z2luKCkNCkZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX1VFZGl0b3JfQ29uZmlnX0JlZ2luIGluIEFjdGlvbl9QbHVnaW5fVUVkaXRvcl9Db25maWdfQmVnaW4NCglJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9VRWRpdG9yX0NvbmZpZ19CZWdpbikgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fVUVkaXRvcl9Db25maWdfQmVnaW4pDQpOZXh0DQoNCiAgICAgICAgDQoJRGltIHN0clVQTE9BRERJUg0KDQoJc3RyVVBMT0FERElSID0gUmVwbGFjZShaQ19VUExPQURfRElSRUNUT1JZJiIvIiZZZWFyKEdldFRpbWUoTm93KCkpKSYiLyImTW9udGgoR2V0VGltZShOb3coKSkpLCJcIiwiLyIpDQoNCglEaW0gUGF0aA0KCVBhdGg9QmxvZ0hvc3QgJiAiIiYgc3RyVVBMT0FERElSICYiLyINCglkaW0gc3RySlNDb250ZW50DQoJc3RySlNDb250ZW50PSIoZnVuY3Rpb24oKXt2YXIgVVJMO1VSTCA9ICciJkJsb2dIb3N0JiJ6Yl9zeXN0ZW0vYWRtaW4vdWVkaXRvci8nO3dpbmRvdy5VRURJVE9SX0NPTkZJRyA9IHsiDQoJRGltIG9EaWMNCglTZXQgb0RpYyA9IFNlcnZlci5DcmVhdGVPYmplY3QoIlNjcmlwdGluZy5EaWN0aW9uYXJ5IikNCglvRGljLkFkZCAiVUVESVRPUl9IT01FX1VSTCIsIlVSTCINCiAgICBvRGljLkFkZCAiaW1hZ2VVcmwiLCIgVVJMKyIiYXNwL2ltYWdlVXAuYXNwIiIiDQogICAgb0RpYy5BZGQgImltYWdlUGF0aCIsIiIiIiZQYXRoJiIiIiINCiAgICBvRGljLkFkZCAiaW1hZ2VGaWVsZE5hbWUiLCIgIiJlZHRGaWxlTG9hZCIiIg0KICAgIG9EaWMuQWRkICJmaWxlVXJsIiwiIFVSTCsiImFzcC9maWxlVXAuYXNwIiIiDQogICAgb0RpYy5BZGQgImZpbGVQYXRoIiwiIiIiJlBhdGgmIiIiIg0KICAgIG9EaWMuQWRkICJmaWxlRmllbGROYW1lIiwiICIiZWR0RmlsZUxvYWQiIiINCiAgICBvRGljLkFkZCAiY2F0Y2hSZW1vdGVJbWFnZUVuYWJsZSIsIiBmYWxzZSINCiAgICBvRGljLkFkZCAiaW1hZ2VNYW5hZ2VyVXJsIiwiVVJMKyIiYXNwL2ltYWdlTWFuYWdlci5hc3AiIiINCiAgICBvRGljLkFkZCAiaW1hZ2VNYW5hZ2VyUGF0aCIsIiIiIiZCbG9nSG9zdCYiIiIiDQogICAgb0RpYy5BZGQgIndvcmRJbWFnZVVybCIsIiBVUkwrIiJhc3AvaW1hZ2VVcC5hc3AiIiINCiAgICBvRGljLkFkZCAid29yZEltYWdlUGF0aCIsIiIiIiZQYXRoJiIiIiINCiAgICBvRGljLkFkZCAid29yZEltYWdlRmllbGROYW1lIiwiIiJlZHRGaWxlTG9hZCIiIg0KICAgIG9EaWMuQWRkICJnZXRNb3ZpZVVybCIsIlVSTCsiImFzcC9nZXRNb3ZpZS5hc3AiIiINCglvRGljLkFkZCAidG9vbGJhcnMiLCJbIFsgJ3NvdXJjZScsICd8JywgJ3VuZG8nLCAncmVkbycsICd8JywgJ2JvbGQnLCAnaXRhbGljJywgJ3VuZGVybGluZScsICdzdHJpa2V0aHJvdWdoJywgJ3N1cGVyc2NyaXB0JywgJ3N1YnNjcmlwdCcsJ2ZvcmVjb2xvcicsICdiYWNrY29sb3InLCAnfCcsICdpbnNlcnRvcmRlcmVkbGlzdCcsICdpbnNlcnR1bm9yZGVyZWRsaXN0JywnaW5kZW50JywgJ2p1c3RpZnlsZWZ0JywgJ2p1c3RpZnljZW50ZXInLCAnanVzdGlmeXJpZ2h0JywnfCcsICdyZW1vdmVmb3JtYXQnLCdmb3JtYXRtYXRjaCcsJ2F1dG90eXBlc2V0JywgJ3NlYXJjaHJlcGxhY2UnXSxbICdmb250ZmFtaWx5JywgJ2ZvbnRzaXplJywnfCcsICdlbW90aW9uJywnbGluaycsJ211c2ljJywnaW5zZXJ0aW1hZ2UnLCwnaW5zZXJ0dmlkZW8nLCAnYXR0YWNobWVudCcsJ3NwZWNoYXJzJywnfCcsICdtYXAnLCAnZ21hcCcsJ3wnLCAiJklJZihaQ19TWU5UQVhISUdITElHSFRFUl9FTkFCTEUsIidoaWdobGlnaHRjb2RlJywiLCIiKSYiJ2Jsb2NrcXVvdGUnLCAncGFzdGVwbGFpbicsJ3dvcmRpbWFnZScsJ2luc2VydHRhYmxlJywgJ3wnICwnc2NyYXdsJywnaG9yaXpvbnRhbCcsJ2Z1bGxzY3JlZW4nXV0iDQoJb0RpYy5BZGQgIm1heGltdW1Xb3JkcyIsMTAwMDAwMDAwMA0KCW9EaWMuQWRkICJ3b3JkQ291bnRNc2ciLCIn5b2T5YmN5bey6L6T5YWlIHsjY291bnR9IOS4quWtl+espiAnIg0KCW9EaWMuQWRkICJpbml0aWFsQ29udGVudCIsIic8cD48L3A+JyINCglvRGljLkFkZCAiaW5pdGlhbFN0eWxlIiwiJ2JvZHl7Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk65b6u6L2v6ZuF6buRLOWui+S9kyxBcmlhbCxIZWx2ZXRpY2Esc2Fucy1zZXJpZjt9JyINCglvRGljLkFkZCAid29yZENvdW50IiwidHJ1ZSINCglvRGljLkFkZCAiZWxlbWVudFBhdGhFbmFibGVkIiwidHJ1ZSINCglvRGljLkFkZCAibWluRnJhbWVIZWlnaHQiLCIzMDAiDQogICAgb0RpYy5BZGQgInNjcmF3bFVybCIsIiBVUkwrIiJhc3Avc2NyYXdsVXAuYXNwIiIiDQogICAgb0RpYy5BZGQgInNjcmF3bFBhdGgiLCIiIiImUGF0aCYiIiIiDQoJb0RpYy5BZGQgInNjcmF3bEZpZWxkTmFtZSIsIiIiZWR0RmlsZUxvYWQiIiINCglvRGljLkFkZCAibWF4SW1hZ2VTaWRlTGVuZ3RoIiwiMjE0NzQ4MzY0NyINCglvRGljLkFkZCAic291cmNlRWRpdG9yIiwiIiIiJklJZihaQ19DT0RFTUlSUk9SX0VOQUJMRSwiY29kZW1pcnJvciIsInRleHRhcmVhIikmIiIiIg0KCW9EaWMuQWRkICJ0aGVtZSIsIidkZWZhdWx0JyINCiAgICBvRGljLkFkZCAidGhlbWVQYXRoIiwiVVJMICsndGhlbWVzLyciDQoJJ0NhbGwgQ2hlY2tNb2JpbGUoKQ0KCSdJZiBaQ19JU1dBUCBUaGVuIG9EaWMuQWRkICJzb3VyY2VFZGl0b3JGaXJzdCIsInRydWUiDQoJJ+WlveWDj+S4jei1t+S9nOeUqA0KCSdvRGljLkFkZCAiY29udGV4dE1lbnUiLCJbXSINCgkNCglEaW0gaSxhcnlLZXlzLGFyeUl0ZW1zDQoJYXJ5S2V5cz1vRGljLktleXMNCglhcnlJdGVtcz1vRGljLkl0ZW1zDQoJRm9yIGk9MCBUbyBVYm91bmQoYXJ5S2V5cyktMQ0KCQlzdHJKU0NvbnRlbnQ9c3RySlNDb250ZW50JmFyeUtleXMoaSkmIjoiJmFyeUl0ZW1zKGkpJiIsIg0KCU5leHQNCglzdHJKU0NvbnRlbnQ9c3RySlNDb250ZW50JmFyeUtleXMoaSkmIjoiJmFyeUl0ZW1zKGkpDQoJDQoJDQoJc3RySlNDb250ZW50PXN0ckpTQ29udGVudCYifX0pKCk7Ig0KDQoNCkNhbGwgRmlsdGVyX1BsdWdpbl9VRWRpdG9yX0NvbmZpZyhzdHJKU0NvbnRlbnQpDQoNCkZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX1VFZGl0b3JfQ29uZmlnX0VuZCBpbiBBY3Rpb25fUGx1Z2luX1VFZGl0b3JfQ29uZmlnX0VuZA0KCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX1VFZGl0b3JfQ29uZmlnX0VuZCkgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fVUVkaXRvcl9Db25maWdfRW5kKQ0KTmV4dA0KDQoJcmVzcG9uc2Uud3JpdGUgc3RySlNDb250ZW50DQoNCiU+DQo=</file>
	<file name='zb_system\ADMIN\ueditor\dialogs\emotion\emotion.js.asp' crc32='E8B03F29'  dt:dt='bin.base64'></file>
	<file name='zb_system\CSS\admin2.css' crc32='9D3A7518'  dt:dt='bin.base64'></file>
	<file name='zb_system\CSS\jquery-ui.custom.css' crc32='18708206'  dt:dt='bin.base64'>LyohCiAqIGpRdWVyeSBVSSBDU1MgRnJhbWV3b3JrIDEuOC4yMwogKgogKiBDb3B5cmlnaHQgMjAxMiwgQVVUSE9SUy50eHQgKGh0dHA6Ly9qcXVlcnl1aS5jb20vYWJvdXQpCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBvciBHUEwgVmVyc2lvbiAyIGxpY2Vuc2VzLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqCiAqIGh0dHA6Ly9kb2NzLmpxdWVyeS5jb20vVUkvVGhlbWluZy9BUEkKICovCgovKiBMYXlvdXQgaGVscGVycwotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KLnVpLWhlbHBlci1oaWRkZW4geyBkaXNwbGF5OiBub25lOyB9Ci51aS1oZWxwZXItaGlkZGVuLWFjY2Vzc2libGUgeyBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDsgY2xpcDogcmVjdCgxcHggMXB4IDFweCAxcHgpOyBjbGlwOiByZWN0KDFweCwxcHgsMXB4LDFweCk7IH0KLnVpLWhlbHBlci1yZXNldCB7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgYm9yZGVyOiAwOyBvdXRsaW5lOiAwOyBsaW5lLWhlaWdodDogMS4zOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IGZvbnQtc2l6ZTogMTAwJTsgbGlzdC1zdHlsZTogbm9uZTsgfQoudWktaGVscGVyLWNsZWFyZml4OmJlZm9yZSwgLnVpLWhlbHBlci1jbGVhcmZpeDphZnRlciB7IGNvbnRlbnQ6ICIiOyBkaXNwbGF5OiB0YWJsZTsgfQoudWktaGVscGVyLWNsZWFyZml4OmFmdGVyIHsgY2xlYXI6IGJvdGg7IH0KLnVpLWhlbHBlci1jbGVhcmZpeCB7IHpvb206IDE7IH0KLnVpLWhlbHBlci16Zml4IHsgd2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJTsgdG9wOiAwOyBsZWZ0OiAwOyBwb3NpdGlvbjogYWJzb2x1dGU7IG9wYWNpdHk6IDA7IGZpbHRlcjpBbHBoYShPcGFjaXR5PTApOyB9CgoKLyogSW50ZXJhY3Rpb24gQ3VlcwotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KLnVpLXN0YXRlLWRpc2FibGVkIHsgY3Vyc29yOiBkZWZhdWx0ICFpbXBvcnRhbnQ7IH0KCgovKiBJY29ucwotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCi8qIHN0YXRlcyBhbmQgaW1hZ2VzICovCi51aS1pY29uIHsgZGlzcGxheTogYmxvY2s7IHRleHQtaW5kZW50OiAtOTk5OTlweDsgb3ZlcmZsb3c6IGhpZGRlbjsgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfQoKCi8qIE1pc2MgdmlzdWFscwotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCi8qIE92ZXJsYXlzICovCi51aS13aWRnZXQtb3ZlcmxheSB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiAwOyBsZWZ0OiAwOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlOyB9CgoKLyogd29ya2Fyb3VuZHMgKi8KKiBodG1sIC51aS1hdXRvY29tcGxldGUgeyB3aWR0aDoxcHg7IH0gLyogd2l0aG91dCB0aGlzLCB0aGUgbWVudSBleHBhbmRzIHRvIDEwMCUgaW4gSUU2ICovCgoudWktYnV0dG9uIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyBwb3NpdGlvbjogcmVsYXRpdmU7IHBhZGRpbmc6IDA7IG1hcmdpbi1yaWdodDogLjFlbTsgY3Vyc29yOiBwb2ludGVyOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHpvb206IDE7IG92ZXJmbG93OiB2aXNpYmxlOyB9IC8qIHRoZSBvdmVyZmxvdyBwcm9wZXJ0eSByZW1vdmVzIGV4dHJhIHdpZHRoIGluIElFICovCi51aS1idXR0b24sIC51aS1idXR0b246bGluaywgLnVpLWJ1dHRvbjp2aXNpdGVkLCAudWktYnV0dG9uOmhvdmVyLCAudWktYnV0dG9uOmFjdGl2ZSB7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfQoudWktYnV0dG9uLWljb24tb25seSB7IHdpZHRoOiAyLjJlbTsgfSAvKiB0byBtYWtlIHJvb20gZm9yIHRoZSBpY29uLCBhIHdpZHRoIG5lZWRzIHRvIGJlIHNldCBoZXJlICovCmJ1dHRvbi51aS1idXR0b24taWNvbi1vbmx5IHsgd2lkdGg6IDIuNGVtOyB9IC8qIGJ1dHRvbiBlbGVtZW50cyBzZWVtIHRvIG5lZWQgYSBsaXR0bGUgbW9yZSB3aWR0aCAqLwoudWktYnV0dG9uLWljb25zLW9ubHkgeyB3aWR0aDogMy40ZW07IH0gCmJ1dHRvbi51aS1idXR0b24taWNvbnMtb25seSB7IHdpZHRoOiAzLjdlbTsgfSAKCi8qYnV0dG9uIHRleHQgZWxlbWVudCAqLwoudWktYnV0dG9uIC51aS1idXR0b24tdGV4dCB7IGRpc3BsYXk6IGJsb2NrOyBsaW5lLWhlaWdodDogMS40OyAgfQoudWktYnV0dG9uLXRleHQtb25seSAudWktYnV0dG9uLXRleHQgeyBwYWRkaW5nOiAuMmVtIDFlbTsgfQoudWktYnV0dG9uLWljb24tb25seSAudWktYnV0dG9uLXRleHQsIC51aS1idXR0b24taWNvbnMtb25seSAudWktYnV0dG9uLXRleHQgeyBwYWRkaW5nOiAuMmVtOyB0ZXh0LWluZGVudDogLTk5OTk5OTlweDsgfQoudWktYnV0dG9uLXRleHQtaWNvbi1wcmltYXJ5IC51aS1idXR0b24tdGV4dCwgLnVpLWJ1dHRvbi10ZXh0LWljb25zIC51aS1idXR0b24tdGV4dCB7IHBhZGRpbmc6IC4yZW0gMWVtIC4yZW0gMi4xZW07IH0KLnVpLWJ1dHRvbi10ZXh0LWljb24tc2Vjb25kYXJ5IC51aS1idXR0b24tdGV4dCwgLnVpLWJ1dHRvbi10ZXh0LWljb25zIC51aS1idXR0b24tdGV4dCB7IHBhZGRpbmc6IC4yZW0gMi4xZW0gLjJlbSAxZW07IH0KLnVpLWJ1dHRvbi10ZXh0LWljb25zIC51aS1idXR0b24tdGV4dCB7IHBhZGRpbmctbGVmdDogMi4xZW07IHBhZGRpbmctcmlnaHQ6IDIuMWVtOyB9Ci8qIG5vIGljb24gc3VwcG9ydCBmb3IgaW5wdXQgZWxlbWVudHMsIHByb3ZpZGUgcGFkZGluZyBieSBkZWZhdWx0ICovCmlucHV0LnVpLWJ1dHRvbiB7IHBhZGRpbmc6IC4zZW0gMWVtOyB9CgovKmJ1dHRvbiBpY29uIGVsZW1lbnQocykgKi8KLnVpLWJ1dHRvbi1pY29uLW9ubHkgLnVpLWljb24sIC51aS1idXR0b24tdGV4dC1pY29uLXByaW1hcnkgLnVpLWljb24sIC51aS1idXR0b24tdGV4dC1pY29uLXNlY29uZGFyeSAudWktaWNvbiwgLnVpLWJ1dHRvbi10ZXh0LWljb25zIC51aS1pY29uLCAudWktYnV0dG9uLWljb25zLW9ubHkgLnVpLWljb24geyBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogNTAlOyBtYXJnaW4tdG9wOiAtOHB4OyB9Ci51aS1idXR0b24taWNvbi1vbmx5IC51aS1pY29uIHsgbGVmdDogNTAlOyBtYXJnaW4tbGVmdDogLThweDsgfQoudWktYnV0dG9uLXRleHQtaWNvbi1wcmltYXJ5IC51aS1idXR0b24taWNvbi1wcmltYXJ5LCAudWktYnV0dG9uLXRleHQtaWNvbnMgLnVpLWJ1dHRvbi1pY29uLXByaW1hcnksIC51aS1idXR0b24taWNvbnMtb25seSAudWktYnV0dG9uLWljb24tcHJpbWFyeSB7IGxlZnQ6IC41ZW07IH0KLnVpLWJ1dHRvbi10ZXh0LWljb24tc2Vjb25kYXJ5IC51aS1idXR0b24taWNvbi1zZWNvbmRhcnksIC51aS1idXR0b24tdGV4dC1pY29ucyAudWktYnV0dG9uLWljb24tc2Vjb25kYXJ5LCAudWktYnV0dG9uLWljb25zLW9ubHkgLnVpLWJ1dHRvbi1pY29uLXNlY29uZGFyeSB7IHJpZ2h0OiAuNWVtOyB9Ci51aS1idXR0b24tdGV4dC1pY29ucyAudWktYnV0dG9uLWljb24tc2Vjb25kYXJ5LCAudWktYnV0dG9uLWljb25zLW9ubHkgLnVpLWJ1dHRvbi1pY29uLXNlY29uZGFyeSB7IHJpZ2h0OiAuNWVtOyB9CgovKmJ1dHRvbiBzZXRzKi8KLnVpLWJ1dHRvbnNldCB7IG1hcmdpbi1yaWdodDogN3B4OyB9Ci51aS1idXR0b25zZXQgLnVpLWJ1dHRvbiB7IG1hcmdpbi1sZWZ0OiAwOyBtYXJnaW4tcmlnaHQ6IC0uM2VtOyB9CgovKiB3b3JrYXJvdW5kcyAqLwpidXR0b24udWktYnV0dG9uOjotbW96LWZvY3VzLWlubmVyIHsgYm9yZGVyOiAwOyBwYWRkaW5nOiAwOyB9IC8qIHJlc2V0IGV4dHJhIHBhZGRpbmcgaW4gRmlyZWZveCAqLwoKCi8qIENvbXBvbmVudCBjb250YWluZXJzCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoudWktd2lkZ2V0IHtmb250LXNpemU6IDFlbTsgfQoudWktd2lkZ2V0IC51aS13aWRnZXQgeyBmb250LXNpemU6IDFlbTsgfQoudWktd2lkZ2V0IGlucHV0LCAudWktd2lkZ2V0IHNlbGVjdCwgLnVpLXdpZGdldCB0ZXh0YXJlYSwgLnVpLXdpZGdldCBidXR0b24ge2ZvbnQtc2l6ZTogMWVtOyB9Ci51aS13aWRnZXQtY29udGVudCB7IGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7IGJhY2tncm91bmQ6ICNGNkY2RjY7IGNvbG9yOiAjMzYyYjM2OyB9Ci51aS13aWRnZXQtY29udGVudCBhIHsgY29sb3I6ICMzNjJiMzY7IH0KLnVpLXdpZGdldC1oZWFkZXIgeyBib3JkZXI6IDFweCBzb2xpZCAjYWVkMGVhOyBiYWNrZ3JvdW5kOiAjZGVlZGY3OyBjb2xvcjogIzIyMjIyMjsgZm9udC13ZWlnaHQ6IGJvbGQ7IH0KLnVpLXdpZGdldC1oZWFkZXIgYSB7IGNvbG9yOiAjMjIyMjIyOyB9CgovKiBJbnRlcmFjdGlvbiBzdGF0ZXMKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCi51aS1zdGF0ZS1kZWZhdWx0LCAudWktd2lkZ2V0LWNvbnRlbnQgLnVpLXN0YXRlLWRlZmF1bHQsIC51aS13aWRnZXQtaGVhZGVyIC51aS1zdGF0ZS1kZWZhdWx0IHsgYm9yZGVyOiAxcHggc29saWQgI2RkZDsgYmFja2dyb3VuZDogI0VERURFRDsgY29sb3I6ICMzODM4Mzg7IH0KLnVpLXN0YXRlLWRlZmF1bHQgYSwgLnVpLXN0YXRlLWRlZmF1bHQgYTpsaW5rLCAudWktc3RhdGUtZGVmYXVsdCBhOnZpc2l0ZWQgeyBjb2xvcjogIzM4MzgzODsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9Ci51aS1zdGF0ZS1ob3ZlciwgLnVpLXdpZGdldC1jb250ZW50IC51aS1zdGF0ZS1ob3ZlciwgLnVpLXdpZGdldC1oZWFkZXIgLnVpLXN0YXRlLWhvdmVyLCAudWktc3RhdGUtZm9jdXMsIC51aS13aWRnZXQtY29udGVudCAudWktc3RhdGUtZm9jdXMsIC51aS13aWRnZXQtaGVhZGVyIC51aS1zdGF0ZS1mb2N1cyB7IGJvcmRlcjogMXB4IHNvbGlkICM3NGIyZTI7IGJhY2tncm91bmQ6ICNlNGYxZmI7Y29sb3I6ICMwMDcwYTM7IH0KLnVpLXN0YXRlLWhvdmVyIGEsIC51aS1zdGF0ZS1ob3ZlciBhOmhvdmVyIHsgY29sb3I6ICMwMDcwYTM7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfQoudWktc3RhdGUtYWN0aXZlLCAudWktd2lkZ2V0LWNvbnRlbnQgLnVpLXN0YXRlLWFjdGl2ZSwgLnVpLXdpZGdldC1oZWFkZXIgLnVpLXN0YXRlLWFjdGl2ZSB7IGJvcmRlcjogMXB4IHNvbGlkICMyNjk0ZTg7IGJhY2tncm91bmQ6ICMzYmFhZTM7IGNvbG9yOiAjZmZmZmZmOyB9Ci51aS1zdGF0ZS1hY3RpdmUgYSwgLnVpLXN0YXRlLWFjdGl2ZSBhOmxpbmssIC51aS1zdGF0ZS1hY3RpdmUgYTp2aXNpdGVkIHsgY29sb3I6ICNmZmZmZmY7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfQoudWktd2lkZ2V0IDphY3RpdmUgeyBvdXRsaW5lOiBub25lOyB9CgovKiBJbnRlcmFjdGlvbiBDdWVzCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoudWktc3RhdGUtaGlnaGxpZ2h0LCAudWktd2lkZ2V0LWNvbnRlbnQgLnVpLXN0YXRlLWhpZ2hsaWdodCwgLnVpLXdpZGdldC1oZWFkZXIgLnVpLXN0YXRlLWhpZ2hsaWdodCAge2JvcmRlcjogMXB4IHNvbGlkICNmOWRkMzQ7IGJhY2tncm91bmQ6ICNmZmVmOGY7IGNvbG9yOiAjMzYzNjM2OyB9Ci51aS1zdGF0ZS1oaWdobGlnaHQgYSwgLnVpLXdpZGdldC1jb250ZW50IC51aS1zdGF0ZS1oaWdobGlnaHQgYSwudWktd2lkZ2V0LWhlYWRlciAudWktc3RhdGUtaGlnaGxpZ2h0IGEgeyBjb2xvcjogIzM2MzYzNjsgfQoudWktc3RhdGUtZXJyb3IsIC51aS13aWRnZXQtY29udGVudCAudWktc3RhdGUtZXJyb3IsIC51aS13aWRnZXQtaGVhZGVyIC51aS1zdGF0ZS1lcnJvciB7Ym9yZGVyOiAxcHggc29saWQgI2NkMGEwYTsgYmFja2dyb3VuZDogI2NkMGEwYTsgY29sb3I6ICNmZmZmZmY7IH0KLnVpLXN0YXRlLWVycm9yIGEsIC51aS13aWRnZXQtY29udGVudCAudWktc3RhdGUtZXJyb3IgYSwgLnVpLXdpZGdldC1oZWFkZXIgLnVpLXN0YXRlLWVycm9yIGEgeyBjb2xvcjogI2ZmZmZmZjsgfQoudWktc3RhdGUtZXJyb3ItdGV4dCwgLnVpLXdpZGdldC1jb250ZW50IC51aS1zdGF0ZS1lcnJvci10ZXh0LCAudWktd2lkZ2V0LWhlYWRlciAudWktc3RhdGUtZXJyb3ItdGV4dCB7IGNvbG9yOiAjZmZmZmZmOyB9Ci51aS1wcmlvcml0eS1wcmltYXJ5LCAudWktd2lkZ2V0LWNvbnRlbnQgLnVpLXByaW9yaXR5LXByaW1hcnksIC51aS13aWRnZXQtaGVhZGVyIC51aS1wcmlvcml0eS1wcmltYXJ5IHsgZm9udC13ZWlnaHQ6IGJvbGQ7IH0KLnVpLXByaW9yaXR5LXNlY29uZGFyeSwgLnVpLXdpZGdldC1jb250ZW50IC51aS1wcmlvcml0eS1zZWNvbmRhcnksICAudWktd2lkZ2V0LWhlYWRlciAudWktcHJpb3JpdHktc2Vjb25kYXJ5IHsgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfQoudWktc3RhdGUtZGlzYWJsZWQsIC51aS13aWRnZXQtY29udGVudCAudWktc3RhdGUtZGlzYWJsZWQsIC51aS13aWRnZXQtaGVhZGVyIC51aS1zdGF0ZS1kaXNhYmxlZCB7IG9wYWNpdHk6IC4zNTsgZmlsdGVyOkFscGhhKE9wYWNpdHk9MzUpOyBiYWNrZ3JvdW5kLWltYWdlOiBub25lOyB9CgovKiBJY29ucwotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCi8qIHN0YXRlcyBhbmQgaW1hZ2VzICovCi51aS1pY29uIHsgd2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2pxdWVyeXVpL3VpLWljb25zXzcyYTdjZl8yNTZ4MjQwLnBuZyk7IH0KLnVpLXdpZGdldC1jb250ZW50IC51aS1pY29uIHtiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2UvanF1ZXJ5dWkvdWktaWNvbnNfNzJhN2NmXzI1NngyNDAucG5nKTsgfQoudWktd2lkZ2V0LWhlYWRlciAudWktaWNvbiB7YmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2pxdWVyeXVpL3VpLWljb25zXzcyYTdjZl8yNTZ4MjQwLnBuZyk7IH0KLnVpLXN0YXRlLWRlZmF1bHQgLnVpLWljb24geyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2UvanF1ZXJ5dWkvdWktaWNvbnNfM2Q4MGIzXzI1NngyNDAucG5nKTsgfQoudWktc3RhdGUtaG92ZXIgLnVpLWljb24sIC51aS1zdGF0ZS1mb2N1cyAudWktaWNvbiB7YmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2pxdWVyeXVpL3VpLWljb25zXzI2OTRlOF8yNTZ4MjQwLnBuZyk7IH0KLnVpLXN0YXRlLWFjdGl2ZSAudWktaWNvbiB7YmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2pxdWVyeXVpL3VpLWljb25zX2ZmZmZmZl8yNTZ4MjQwLnBuZyk7IH0KLnVpLXN0YXRlLWhpZ2hsaWdodCAudWktaWNvbiB7YmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2pxdWVyeXVpL3VpLWljb25zXzJlODNmZl8yNTZ4MjQwLnBuZyk7IH0KLnVpLXN0YXRlLWVycm9yIC51aS1pY29uLCAudWktc3RhdGUtZXJyb3ItdGV4dCAudWktaWNvbiB7YmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlL2pxdWVyeXVpL3VpLWljb25zX2ZmZmZmZl8yNTZ4MjQwLnBuZyk7IH0KCi8qIHBvc2l0aW9uaW5nICovCi51aS1pY29uLWNhcmF0LTEtbiB7IGJhY2tncm91bmQtcG9zaXRpb246IDAgMDsgfQoudWktaWNvbi1jYXJhdC0xLW5lIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE2cHggMDsgfQoudWktaWNvbi1jYXJhdC0xLWUgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzJweCAwOyB9Ci51aS1pY29uLWNhcmF0LTEtc2UgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDhweCAwOyB9Ci51aS1pY29uLWNhcmF0LTEtcyB7IGJhY2tncm91bmQtcG9zaXRpb246IC02NHB4IDA7IH0KLnVpLWljb24tY2FyYXQtMS1zdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC04MHB4IDA7IH0KLnVpLWljb24tY2FyYXQtMS13IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTk2cHggMDsgfQoudWktaWNvbi1jYXJhdC0xLW53IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTExMnB4IDA7IH0KLnVpLWljb24tY2FyYXQtMi1uLXMgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTI4cHggMDsgfQoudWktaWNvbi1jYXJhdC0yLWUtdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNDRweCAwOyB9Ci51aS1pY29uLXRyaWFuZ2xlLTEtbiB7IGJhY2tncm91bmQtcG9zaXRpb246IDAgLTE2cHg7IH0KLnVpLWljb24tdHJpYW5nbGUtMS1uZSB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNnB4IC0xNnB4OyB9Ci51aS1pY29uLXRyaWFuZ2xlLTEtZSB7IGJhY2tncm91bmQtcG9zaXRpb246IC0zMnB4IC0xNnB4OyB9Ci51aS1pY29uLXRyaWFuZ2xlLTEtc2UgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDhweCAtMTZweDsgfQoudWktaWNvbi10cmlhbmdsZS0xLXMgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNjRweCAtMTZweDsgfQoudWktaWNvbi10cmlhbmdsZS0xLXN3IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTgwcHggLTE2cHg7IH0KLnVpLWljb24tdHJpYW5nbGUtMS13IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTk2cHggLTE2cHg7IH0KLnVpLWljb24tdHJpYW5nbGUtMS1udyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xMTJweCAtMTZweDsgfQoudWktaWNvbi10cmlhbmdsZS0yLW4tcyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xMjhweCAtMTZweDsgfQoudWktaWNvbi10cmlhbmdsZS0yLWUtdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNDRweCAtMTZweDsgfQoudWktaWNvbi1hcnJvdy0xLW4geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIC0zMnB4OyB9Ci51aS1pY29uLWFycm93LTEtbmUgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTZweCAtMzJweDsgfQoudWktaWNvbi1hcnJvdy0xLWUgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzJweCAtMzJweDsgfQoudWktaWNvbi1hcnJvdy0xLXNlIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQ4cHggLTMycHg7IH0KLnVpLWljb24tYXJyb3ctMS1zIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTY0cHggLTMycHg7IH0KLnVpLWljb24tYXJyb3ctMS1zdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC04MHB4IC0zMnB4OyB9Ci51aS1pY29uLWFycm93LTEtdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC05NnB4IC0zMnB4OyB9Ci51aS1pY29uLWFycm93LTEtbncgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTEycHggLTMycHg7IH0KLnVpLWljb24tYXJyb3ctMi1uLXMgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTI4cHggLTMycHg7IH0KLnVpLWljb24tYXJyb3ctMi1uZS1zdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNDRweCAtMzJweDsgfQoudWktaWNvbi1hcnJvdy0yLWUtdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNjBweCAtMzJweDsgfQoudWktaWNvbi1hcnJvdy0yLXNlLW53IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE3NnB4IC0zMnB4OyB9Ci51aS1pY29uLWFycm93c3RvcC0xLW4geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTkycHggLTMycHg7IH0KLnVpLWljb24tYXJyb3dzdG9wLTEtZSB7IGJhY2tncm91bmQtcG9zaXRpb246IC0yMDhweCAtMzJweDsgfQoudWktaWNvbi1hcnJvd3N0b3AtMS1zIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIyNHB4IC0zMnB4OyB9Ci51aS1pY29uLWFycm93c3RvcC0xLXcgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjQwcHggLTMycHg7IH0KLnVpLWljb24tYXJyb3d0aGljay0xLW4geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIC00OHB4OyB9Ci51aS1pY29uLWFycm93dGhpY2stMS1uZSB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNnB4IC00OHB4OyB9Ci51aS1pY29uLWFycm93dGhpY2stMS1lIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMycHggLTQ4cHg7IH0KLnVpLWljb24tYXJyb3d0aGljay0xLXNlIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQ4cHggLTQ4cHg7IH0KLnVpLWljb24tYXJyb3d0aGljay0xLXMgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNjRweCAtNDhweDsgfQoudWktaWNvbi1hcnJvd3RoaWNrLTEtc3cgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtODBweCAtNDhweDsgfQoudWktaWNvbi1hcnJvd3RoaWNrLTEtdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC05NnB4IC00OHB4OyB9Ci51aS1pY29uLWFycm93dGhpY2stMS1udyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xMTJweCAtNDhweDsgfQoudWktaWNvbi1hcnJvd3RoaWNrLTItbi1zIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEyOHB4IC00OHB4OyB9Ci51aS1pY29uLWFycm93dGhpY2stMi1uZS1zdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNDRweCAtNDhweDsgfQoudWktaWNvbi1hcnJvd3RoaWNrLTItZS13IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE2MHB4IC00OHB4OyB9Ci51aS1pY29uLWFycm93dGhpY2stMi1zZS1udyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNzZweCAtNDhweDsgfQoudWktaWNvbi1hcnJvd3RoaWNrc3RvcC0xLW4geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTkycHggLTQ4cHg7IH0KLnVpLWljb24tYXJyb3d0aGlja3N0b3AtMS1lIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIwOHB4IC00OHB4OyB9Ci51aS1pY29uLWFycm93dGhpY2tzdG9wLTEtcyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0yMjRweCAtNDhweDsgfQoudWktaWNvbi1hcnJvd3RoaWNrc3RvcC0xLXcgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjQwcHggLTQ4cHg7IH0KLnVpLWljb24tYXJyb3dyZXR1cm50aGljay0xLXcgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIC02NHB4OyB9Ci51aS1pY29uLWFycm93cmV0dXJudGhpY2stMS1uIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE2cHggLTY0cHg7IH0KLnVpLWljb24tYXJyb3dyZXR1cm50aGljay0xLWUgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzJweCAtNjRweDsgfQoudWktaWNvbi1hcnJvd3JldHVybnRoaWNrLTEtcyB7IGJhY2tncm91bmQtcG9zaXRpb246IC00OHB4IC02NHB4OyB9Ci51aS1pY29uLWFycm93cmV0dXJuLTEtdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC02NHB4IC02NHB4OyB9Ci51aS1pY29uLWFycm93cmV0dXJuLTEtbiB7IGJhY2tncm91bmQtcG9zaXRpb246IC04MHB4IC02NHB4OyB9Ci51aS1pY29uLWFycm93cmV0dXJuLTEtZSB7IGJhY2tncm91bmQtcG9zaXRpb246IC05NnB4IC02NHB4OyB9Ci51aS1pY29uLWFycm93cmV0dXJuLTEtcyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xMTJweCAtNjRweDsgfQoudWktaWNvbi1hcnJvd3JlZnJlc2gtMS13IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEyOHB4IC02NHB4OyB9Ci51aS1pY29uLWFycm93cmVmcmVzaC0xLW4geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTQ0cHggLTY0cHg7IH0KLnVpLWljb24tYXJyb3dyZWZyZXNoLTEtZSB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNjBweCAtNjRweDsgfQoudWktaWNvbi1hcnJvd3JlZnJlc2gtMS1zIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE3NnB4IC02NHB4OyB9Ci51aS1pY29uLWFycm93LTQgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIC04MHB4OyB9Ci51aS1pY29uLWFycm93LTQtZGlhZyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNnB4IC04MHB4OyB9Ci51aS1pY29uLWV4dGxpbmsgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzJweCAtODBweDsgfQoudWktaWNvbi1uZXd3aW4geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDhweCAtODBweDsgfQoudWktaWNvbi1yZWZyZXNoIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTY0cHggLTgwcHg7IH0KLnVpLWljb24tc2h1ZmZsZSB7IGJhY2tncm91bmQtcG9zaXRpb246IC04MHB4IC04MHB4OyB9Ci51aS1pY29uLXRyYW5zZmVyLWUtdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC05NnB4IC04MHB4OyB9Ci51aS1pY29uLXRyYW5zZmVydGhpY2stZS13IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTExMnB4IC04MHB4OyB9Ci51aS1pY29uLWZvbGRlci1jb2xsYXBzZWQgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIC05NnB4OyB9Ci51aS1pY29uLWZvbGRlci1vcGVuIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE2cHggLTk2cHg7IH0KLnVpLWljb24tZG9jdW1lbnQgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzJweCAtOTZweDsgfQoudWktaWNvbi1kb2N1bWVudC1iIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQ4cHggLTk2cHg7IH0KLnVpLWljb24tbm90ZSB7IGJhY2tncm91bmQtcG9zaXRpb246IC02NHB4IC05NnB4OyB9Ci51aS1pY29uLW1haWwtY2xvc2VkIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTgwcHggLTk2cHg7IH0KLnVpLWljb24tbWFpbC1vcGVuIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTk2cHggLTk2cHg7IH0KLnVpLWljb24tc3VpdGNhc2UgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTEycHggLTk2cHg7IH0KLnVpLWljb24tY29tbWVudCB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xMjhweCAtOTZweDsgfQoudWktaWNvbi1wZXJzb24geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTQ0cHggLTk2cHg7IH0KLnVpLWljb24tcHJpbnQgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTYwcHggLTk2cHg7IH0KLnVpLWljb24tdHJhc2ggeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTc2cHggLTk2cHg7IH0KLnVpLWljb24tbG9ja2VkIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE5MnB4IC05NnB4OyB9Ci51aS1pY29uLXVubG9ja2VkIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIwOHB4IC05NnB4OyB9Ci51aS1pY29uLWJvb2ttYXJrIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIyNHB4IC05NnB4OyB9Ci51aS1pY29uLXRhZyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0yNDBweCAtOTZweDsgfQoudWktaWNvbi1ob21lIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAtMTEycHg7IH0KLnVpLWljb24tZmxhZyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNnB4IC0xMTJweDsgfQoudWktaWNvbi1jYWxlbmRhciB7IGJhY2tncm91bmQtcG9zaXRpb246IC0zMnB4IC0xMTJweDsgfQoudWktaWNvbi1jYXJ0IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQ4cHggLTExMnB4OyB9Ci51aS1pY29uLXBlbmNpbCB7IGJhY2tncm91bmQtcG9zaXRpb246IC02NHB4IC0xMTJweDsgfQoudWktaWNvbi1jbG9jayB7IGJhY2tncm91bmQtcG9zaXRpb246IC04MHB4IC0xMTJweDsgfQoudWktaWNvbi1kaXNrIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTk2cHggLTExMnB4OyB9Ci51aS1pY29uLWNhbGN1bGF0b3IgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTEycHggLTExMnB4OyB9Ci51aS1pY29uLXpvb21pbiB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xMjhweCAtMTEycHg7IH0KLnVpLWljb24tem9vbW91dCB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNDRweCAtMTEycHg7IH0KLnVpLWljb24tc2VhcmNoIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE2MHB4IC0xMTJweDsgfQoudWktaWNvbi13cmVuY2ggeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTc2cHggLTExMnB4OyB9Ci51aS1pY29uLWdlYXIgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTkycHggLTExMnB4OyB9Ci51aS1pY29uLWhlYXJ0IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIwOHB4IC0xMTJweDsgfQoudWktaWNvbi1zdGFyIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIyNHB4IC0xMTJweDsgfQoudWktaWNvbi1saW5rIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI0MHB4IC0xMTJweDsgfQoudWktaWNvbi1jYW5jZWwgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIC0xMjhweDsgfQoudWktaWNvbi1wbHVzIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE2cHggLTEyOHB4OyB9Ci51aS1pY29uLXBsdXN0aGljayB7IGJhY2tncm91bmQtcG9zaXRpb246IC0zMnB4IC0xMjhweDsgfQoudWktaWNvbi1taW51cyB7IGJhY2tncm91bmQtcG9zaXRpb246IC00OHB4IC0xMjhweDsgfQoudWktaWNvbi1taW51c3RoaWNrIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTY0cHggLTEyOHB4OyB9Ci51aS1pY29uLWNsb3NlIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTgwcHggLTEyOHB4OyB9Ci51aS1pY29uLWNsb3NldGhpY2sgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtOTZweCAtMTI4cHg7IH0KLnVpLWljb24ta2V5IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTExMnB4IC0xMjhweDsgfQoudWktaWNvbi1saWdodGJ1bGIgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTI4cHggLTEyOHB4OyB9Ci51aS1pY29uLXNjaXNzb3JzIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE0NHB4IC0xMjhweDsgfQoudWktaWNvbi1jbGlwYm9hcmQgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTYwcHggLTEyOHB4OyB9Ci51aS1pY29uLWNvcHkgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTc2cHggLTEyOHB4OyB9Ci51aS1pY29uLWNvbnRhY3QgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTkycHggLTEyOHB4OyB9Ci51aS1pY29uLWltYWdlIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIwOHB4IC0xMjhweDsgfQoudWktaWNvbi12aWRlbyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0yMjRweCAtMTI4cHg7IH0KLnVpLWljb24tc2NyaXB0IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI0MHB4IC0xMjhweDsgfQoudWktaWNvbi1hbGVydCB7IGJhY2tncm91bmQtcG9zaXRpb246IDAgLTE0NHB4OyB9Ci51aS1pY29uLWluZm8geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTZweCAtMTQ0cHg7IH0KLnVpLWljb24tbm90aWNlIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMycHggLTE0NHB4OyB9Ci51aS1pY29uLWhlbHAgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDhweCAtMTQ0cHg7IH0KLnVpLWljb24tY2hlY2sgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNjRweCAtMTQ0cHg7IH0KLnVpLWljb24tYnVsbGV0IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTgwcHggLTE0NHB4OyB9Ci51aS1pY29uLXJhZGlvLW9mZiB7IGJhY2tncm91bmQtcG9zaXRpb246IC05NnB4IC0xNDRweDsgfQoudWktaWNvbi1yYWRpby1vbiB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xMTJweCAtMTQ0cHg7IH0KLnVpLWljb24tcGluLXcgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTI4cHggLTE0NHB4OyB9Ci51aS1pY29uLXBpbi1zIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE0NHB4IC0xNDRweDsgfQoudWktaWNvbi1wbGF5IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAtMTYwcHg7IH0KLnVpLWljb24tcGF1c2UgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTZweCAtMTYwcHg7IH0KLnVpLWljb24tc2Vlay1uZXh0IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMycHggLTE2MHB4OyB9Ci51aS1pY29uLXNlZWstcHJldiB7IGJhY2tncm91bmQtcG9zaXRpb246IC00OHB4IC0xNjBweDsgfQoudWktaWNvbi1zZWVrLWVuZCB7IGJhY2tncm91bmQtcG9zaXRpb246IC02NHB4IC0xNjBweDsgfQoudWktaWNvbi1zZWVrLXN0YXJ0IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTgwcHggLTE2MHB4OyB9Ci8qIHVpLWljb24tc2Vlay1maXJzdCBpcyBkZXByZWNhdGVkLCB1c2UgdWktaWNvbi1zZWVrLXN0YXJ0IGluc3RlYWQgKi8KLnVpLWljb24tc2Vlay1maXJzdCB7IGJhY2tncm91bmQtcG9zaXRpb246IC04MHB4IC0xNjBweDsgfQoudWktaWNvbi1zdG9wIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTk2cHggLTE2MHB4OyB9Ci51aS1pY29uLWVqZWN0IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTExMnB4IC0xNjBweDsgfQoudWktaWNvbi12b2x1bWUtb2ZmIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEyOHB4IC0xNjBweDsgfQoudWktaWNvbi12b2x1bWUtb24geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTQ0cHggLTE2MHB4OyB9Ci51aS1pY29uLXBvd2VyIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAtMTc2cHg7IH0KLnVpLWljb24tc2lnbmFsLWRpYWcgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTZweCAtMTc2cHg7IH0KLnVpLWljb24tc2lnbmFsIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMycHggLTE3NnB4OyB9Ci51aS1pY29uLWJhdHRlcnktMCB7IGJhY2tncm91bmQtcG9zaXRpb246IC00OHB4IC0xNzZweDsgfQoudWktaWNvbi1iYXR0ZXJ5LTEgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNjRweCAtMTc2cHg7IH0KLnVpLWljb24tYmF0dGVyeS0yIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTgwcHggLTE3NnB4OyB9Ci51aS1pY29uLWJhdHRlcnktMyB7IGJhY2tncm91bmQtcG9zaXRpb246IC05NnB4IC0xNzZweDsgfQoudWktaWNvbi1jaXJjbGUtcGx1cyB7IGJhY2tncm91bmQtcG9zaXRpb246IDAgLTE5MnB4OyB9Ci51aS1pY29uLWNpcmNsZS1taW51cyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNnB4IC0xOTJweDsgfQoudWktaWNvbi1jaXJjbGUtY2xvc2UgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzJweCAtMTkycHg7IH0KLnVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLWUgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDhweCAtMTkycHg7IH0KLnVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLXMgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNjRweCAtMTkycHg7IH0KLnVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLXcgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtODBweCAtMTkycHg7IH0KLnVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLW4geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtOTZweCAtMTkycHg7IH0KLnVpLWljb24tY2lyY2xlLWFycm93LWUgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTEycHggLTE5MnB4OyB9Ci51aS1pY29uLWNpcmNsZS1hcnJvdy1zIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEyOHB4IC0xOTJweDsgfQoudWktaWNvbi1jaXJjbGUtYXJyb3ctdyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNDRweCAtMTkycHg7IH0KLnVpLWljb24tY2lyY2xlLWFycm93LW4geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTYwcHggLTE5MnB4OyB9Ci51aS1pY29uLWNpcmNsZS16b29taW4geyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTc2cHggLTE5MnB4OyB9Ci51aS1pY29uLWNpcmNsZS16b29tb3V0IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE5MnB4IC0xOTJweDsgfQoudWktaWNvbi1jaXJjbGUtY2hlY2sgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjA4cHggLTE5MnB4OyB9Ci51aS1pY29uLWNpcmNsZXNtYWxsLXBsdXMgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIC0yMDhweDsgfQoudWktaWNvbi1jaXJjbGVzbWFsbC1taW51cyB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNnB4IC0yMDhweDsgfQoudWktaWNvbi1jaXJjbGVzbWFsbC1jbG9zZSB7IGJhY2tncm91bmQtcG9zaXRpb246IC0zMnB4IC0yMDhweDsgfQoudWktaWNvbi1zcXVhcmVzbWFsbC1wbHVzIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQ4cHggLTIwOHB4OyB9Ci51aS1pY29uLXNxdWFyZXNtYWxsLW1pbnVzIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTY0cHggLTIwOHB4OyB9Ci51aS1pY29uLXNxdWFyZXNtYWxsLWNsb3NlIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTgwcHggLTIwOHB4OyB9Ci51aS1pY29uLWdyaXAtZG90dGVkLXZlcnRpY2FsIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAtMjI0cHg7IH0KLnVpLWljb24tZ3JpcC1kb3R0ZWQtaG9yaXpvbnRhbCB7IGJhY2tncm91bmQtcG9zaXRpb246IC0xNnB4IC0yMjRweDsgfQoudWktaWNvbi1ncmlwLXNvbGlkLXZlcnRpY2FsIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMycHggLTIyNHB4OyB9Ci51aS1pY29uLWdyaXAtc29saWQtaG9yaXpvbnRhbCB7IGJhY2tncm91bmQtcG9zaXRpb246IC00OHB4IC0yMjRweDsgfQoudWktaWNvbi1ncmlwc21hbGwtZGlhZ29uYWwtc2UgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNjRweCAtMjI0cHg7IH0KLnVpLWljb24tZ3JpcC1kaWFnb25hbC1zZSB7IGJhY2tncm91bmQtcG9zaXRpb246IC04MHB4IC0yMjRweDsgfQoKCi8qIE1pc2MgdmlzdWFscwotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCi8qIENvcm5lciByYWRpdXMgKi8KCi8qIE92ZXJsYXlzICovCi51aS13aWRnZXQtb3ZlcmxheSB7IGJhY2tncm91bmQ6ICNlZWVlZWU7IG9wYWNpdHk6IC44MDtmaWx0ZXI6QWxwaGEoT3BhY2l0eT04MCk7IH0KLnVpLXdpZGdldC1zaGFkb3cgeyBtYXJnaW46IC03cHggMCAwIC03cHg7IHBhZGRpbmc6IDdweDsgYmFja2dyb3VuZDogIzAwMDAwMDsgb3BhY2l0eTogLjMwO2ZpbHRlcjpBbHBoYShPcGFjaXR5PTMwKTsgLW1vei1ib3JkZXItcmFkaXVzOiA4cHg7IC1raHRtbC1ib3JkZXItcmFkaXVzOiA4cHg7IC13ZWJraXQtYm9yZGVyLXJhZGl1czogOHB4OyBib3JkZXItcmFkaXVzOiA4cHg7IH0vKiEKICogalF1ZXJ5IFVJIFJlc2l6YWJsZSAxLjguMjMKICoKICogQ29weXJpZ2h0IDIwMTIsIEFVVEhPUlMudHh0IChodHRwOi8vanF1ZXJ5dWkuY29tL2Fib3V0KQogKiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgb3IgR1BMIFZlcnNpb24gMiBsaWNlbnNlcy4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBodHRwOi8vZG9jcy5qcXVlcnkuY29tL1VJL1Jlc2l6YWJsZSN0aGVtaW5nCiAqLwoudWktcmVzaXphYmxlIHsgcG9zaXRpb246IHJlbGF0aXZlO30KLnVpLXJlc2l6YWJsZS1oYW5kbGUgeyBwb3NpdGlvbjogYWJzb2x1dGU7Zm9udC1zaXplOiAwLjFweDsgZGlzcGxheTogYmxvY2s7IH0KLnVpLXJlc2l6YWJsZS1kaXNhYmxlZCAudWktcmVzaXphYmxlLWhhbmRsZSwgLnVpLXJlc2l6YWJsZS1hdXRvaGlkZSAudWktcmVzaXphYmxlLWhhbmRsZSB7IGRpc3BsYXk6IG5vbmU7IH0KLnVpLXJlc2l6YWJsZS1uIHsgY3Vyc29yOiBuLXJlc2l6ZTsgaGVpZ2h0OiA3cHg7IHdpZHRoOiAxMDAlOyB0b3A6IC01cHg7IGxlZnQ6IDA7IH0KLnVpLXJlc2l6YWJsZS1zIHsgY3Vyc29yOiBzLXJlc2l6ZTsgaGVpZ2h0OiA3cHg7IHdpZHRoOiAxMDAlOyBib3R0b206IC01cHg7IGxlZnQ6IDA7IH0KLnVpLXJlc2l6YWJsZS1lIHsgY3Vyc29yOiBlLXJlc2l6ZTsgd2lkdGg6IDdweDsgcmlnaHQ6IC01cHg7IHRvcDogMDsgaGVpZ2h0OiAxMDAlOyB9Ci51aS1yZXNpemFibGUtdyB7IGN1cnNvcjogdy1yZXNpemU7IHdpZHRoOiA3cHg7IGxlZnQ6IC01cHg7IHRvcDogMDsgaGVpZ2h0OiAxMDAlOyB9Ci51aS1yZXNpemFibGUtc2UgeyBjdXJzb3I6IHNlLXJlc2l6ZTsgd2lkdGg6IDEycHg7IGhlaWdodDogMTJweDsgcmlnaHQ6IDFweDsgYm90dG9tOiAxcHg7IH0KLnVpLXJlc2l6YWJsZS1zdyB7IGN1cnNvcjogc3ctcmVzaXplOyB3aWR0aDogOXB4OyBoZWlnaHQ6IDlweDsgbGVmdDogLTVweDsgYm90dG9tOiAtNXB4OyB9Ci51aS1yZXNpemFibGUtbncgeyBjdXJzb3I6IG53LXJlc2l6ZTsgd2lkdGg6IDlweDsgaGVpZ2h0OiA5cHg7IGxlZnQ6IC01cHg7IHRvcDogLTVweDsgfQoudWktcmVzaXphYmxlLW5lIHsgY3Vyc29yOiBuZS1yZXNpemU7IHdpZHRoOiA5cHg7IGhlaWdodDogOXB4OyByaWdodDogLTVweDsgdG9wOiAtNXB4O30vKiEKICogalF1ZXJ5IFVJIFNlbGVjdGFibGUgMS44LjIzCiAqCiAqIENvcHlyaWdodCAyMDEyLCBBVVRIT1JTLnR4dCAoaHR0cDovL2pxdWVyeXVpLmNvbS9hYm91dCkKICogRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIG9yIEdQTCBWZXJzaW9uIDIgbGljZW5zZXMuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICoKICogaHR0cDovL2RvY3MuanF1ZXJ5LmNvbS9VSS9TZWxlY3RhYmxlI3RoZW1pbmcKICovCi51aS1zZWxlY3RhYmxlLWhlbHBlciB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMTAwOyBib3JkZXI6MXB4IGRvdHRlZCBibGFjazsgfQovKiEKICogalF1ZXJ5IFVJIERpYWxvZyAxLjguMjMKICoKICogQ29weXJpZ2h0IDIwMTIsIEFVVEhPUlMudHh0IChodHRwOi8vanF1ZXJ5dWkuY29tL2Fib3V0KQogKiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgb3IgR1BMIFZlcnNpb24gMiBsaWNlbnNlcy4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBodHRwOi8vZG9jcy5qcXVlcnkuY29tL1VJL0RpYWxvZyN0aGVtaW5nCiAqLwoudWktZGlhbG9nIHsgcG9zaXRpb246IGFic29sdXRlOyBwYWRkaW5nOiAuMmVtOyB3aWR0aDogMzAwcHg7IG92ZXJmbG93OiBoaWRkZW47IGJveC1zaGFkb3c6IDAgMCAxNXB4ICNhYWE7ei1pbmRleDogMTAwMTt9Ci51aS1kaWFsb2cgLnVpLWRpYWxvZy10aXRsZWJhciB7IHBhZGRpbmc6IC40ZW0gMWVtOyBwb3NpdGlvbjogcmVsYXRpdmU7ICB9Ci51aS1kaWFsb2cgLnVpLWRpYWxvZy10aXRsZSB7IGZsb2F0OiBsZWZ0OyBtYXJnaW46IC4xZW0gMTZweCAuMWVtIDA7IH0gCi51aS1kaWFsb2cgLnVpLWRpYWxvZy10aXRsZWJhci1jbG9zZSB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgcmlnaHQ6IC4zZW07IHRvcDogNTAlOyB3aWR0aDogMTlweDsgbWFyZ2luOiAtMTBweCAwIDAgMDsgcGFkZGluZzogMXB4OyBoZWlnaHQ6IDE4cHg7IH0KLnVpLWRpYWxvZyAudWktZGlhbG9nLXRpdGxlYmFyLWNsb3NlIHNwYW4geyBkaXNwbGF5OiBibG9jazsgfQoudWktZGlhbG9nIC51aS1kaWFsb2ctdGl0bGViYXItY2xvc2U6aG92ZXIsIC51aS1kaWFsb2cgLnVpLWRpYWxvZy10aXRsZWJhci1jbG9zZTpmb2N1cyB7IHBhZGRpbmc6IDA7IH0KLnVpLWRpYWxvZyAudWktZGlhbG9nLWNvbnRlbnQgeyBwb3NpdGlvbjogcmVsYXRpdmU7IGJvcmRlcjogMDsgcGFkZGluZzogLjVlbSAxZW07IGJhY2tncm91bmQ6IG5vbmU7IG92ZXJmbG93OiBhdXRvOyB6b29tOiAxOyB9Ci51aS1kaWFsb2cgLnVpLWRpYWxvZy1idXR0b25wYW5lIHsgdGV4dC1hbGlnbjogbGVmdDsgYm9yZGVyLXdpZHRoOiAxcHggMCAwIDA7IGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7IG1hcmdpbjogLjVlbSAwIDAgMDsgcGFkZGluZzogLjNlbSAxZW0gLjVlbSAuNGVtOyB9Ci51aS1kaWFsb2cgLnVpLWRpYWxvZy1idXR0b25wYW5lIC51aS1kaWFsb2ctYnV0dG9uc2V0IHsgZmxvYXQ6IHJpZ2h0OyB9Ci51aS1kaWFsb2cgLnVpLWRpYWxvZy1idXR0b25wYW5lIGJ1dHRvbiB7IGNvbG9yOiB3aGl0ZTtmb250LXNpemU6IDEuMWVtO2hlaWdodDogMjlweDtwYWRkaW5nOiAycHggMThweCAzcHggMThweDttYXJnaW46MC41ZW07YmFja2dyb3VuZDogIzNBNkVBNTtib3JkZXI6IDFweCBzb2xpZCAjMzlDO2N1cnNvcjogcG9pbnRlcjt9Ci51aS1kaWFsb2cgLnVpLXJlc2l6YWJsZS1zZSB7IHdpZHRoOiAxNHB4OyBoZWlnaHQ6IDE0cHg7IHJpZ2h0OiAzcHg7IGJvdHRvbTogM3B4OyB9Ci51aS1kcmFnZ2FibGUgLnVpLWRpYWxvZy10aXRsZWJhciB7IGN1cnNvcjogbW92ZTsgfQovKiEKICogalF1ZXJ5IFVJIFNsaWRlciAxLjguMjMKICoKICogQ29weXJpZ2h0IDIwMTIsIEFVVEhPUlMudHh0IChodHRwOi8vanF1ZXJ5dWkuY29tL2Fib3V0KQogKiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgb3IgR1BMIFZlcnNpb24gMiBsaWNlbnNlcy4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBodHRwOi8vZG9jcy5qcXVlcnkuY29tL1VJL1NsaWRlciN0aGVtaW5nCiAqLwoudWktc2xpZGVyIHsgcG9zaXRpb246IHJlbGF0aXZlOyB0ZXh0LWFsaWduOiBsZWZ0OyB9Ci51aS1zbGlkZXIgLnVpLXNsaWRlci1oYW5kbGUgeyBwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHdpZHRoOiAuOGVtOyBoZWlnaHQ6IDEuMmVtOyBjdXJzb3I6IGRlZmF1bHQ7IH0KLnVpLXNsaWRlciAudWktc2xpZGVyLXJhbmdlIHsgcG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAxOyBmb250LXNpemU6IC43ZW07IGRpc3BsYXk6IGJsb2NrOyBib3JkZXI6IDA7IGJhY2tncm91bmQtcG9zaXRpb246IDAgMDsgfQoKLnVpLXNsaWRlci1ob3Jpem9udGFsIHsgaGVpZ2h0OiAuOGVtOyB9Ci51aS1zbGlkZXItaG9yaXpvbnRhbCAudWktc2xpZGVyLWhhbmRsZSB7IHRvcDogLS4zZW07IG1hcmdpbi1sZWZ0OiAtLjZlbTtib3JkZXI6MXB4IHNvbGlkICNjY2M7fQoudWktc2xpZGVyLWhvcml6b250YWwgLnVpLXNsaWRlci1yYW5nZSB7IHRvcDogMDsgaGVpZ2h0OiAxMDAlOyB9Ci51aS1zbGlkZXItaG9yaXpvbnRhbCAudWktc2xpZGVyLXJhbmdlLW1pbiB7IGxlZnQ6IDA7IH0KLnVpLXNsaWRlci1ob3Jpem9udGFsIC51aS1zbGlkZXItcmFuZ2UtbWF4IHsgcmlnaHQ6IDA7IH0KCi51aS1zbGlkZXItdmVydGljYWwgeyB3aWR0aDogLjhlbTsgaGVpZ2h0OiAxMDBweDsgfQoudWktc2xpZGVyLXZlcnRpY2FsIC51aS1zbGlkZXItaGFuZGxlIHsgbGVmdDogLS4zZW07IG1hcmdpbi1sZWZ0OiAwOyBtYXJnaW4tYm90dG9tOiAtLjZlbTsgfQoudWktc2xpZGVyLXZlcnRpY2FsIC51aS1zbGlkZXItcmFuZ2UgeyBsZWZ0OiAwOyB3aWR0aDogMTAwJTsgfQoudWktc2xpZGVyLXZlcnRpY2FsIC51aS1zbGlkZXItcmFuZ2UtbWluIHsgYm90dG9tOiAwOyB9Ci51aS1zbGlkZXItdmVydGljYWwgLnVpLXNsaWRlci1yYW5nZS1tYXggeyB0b3A6IDA7IH0vKiEKICogalF1ZXJ5IFVJIERhdGVwaWNrZXIgMS44LjIzCiAqCiAqIENvcHlyaWdodCAyMDEyLCBBVVRIT1JTLnR4dCAoaHR0cDovL2pxdWVyeXVpLmNvbS9hYm91dCkKICogRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIG9yIEdQTCBWZXJzaW9uIDIgbGljZW5zZXMuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICoKICogaHR0cDovL2RvY3MuanF1ZXJ5LmNvbS9VSS9EYXRlcGlja2VyI3RoZW1pbmcKICovCi51aS1kYXRlcGlja2VyIHsgd2lkdGg6IDE3ZW07IHBhZGRpbmc6IC4yZW0gLjJlbSAwOyBkaXNwbGF5OiBub25lOyB9Ci51aS1kYXRlcGlja2VyIC51aS1kYXRlcGlja2VyLWhlYWRlciB7IHBvc2l0aW9uOnJlbGF0aXZlOyBwYWRkaW5nOi4yZW0gMDsgfQoudWktZGF0ZXBpY2tlciAudWktZGF0ZXBpY2tlci1wcmV2LCAudWktZGF0ZXBpY2tlciAudWktZGF0ZXBpY2tlci1uZXh0IHsgcG9zaXRpb246YWJzb2x1dGU7IHRvcDogMnB4OyB3aWR0aDogMS44ZW07IGhlaWdodDogMS44ZW07IH0KLnVpLWRhdGVwaWNrZXIgLnVpLWRhdGVwaWNrZXItcHJldi1ob3ZlciwgLnVpLWRhdGVwaWNrZXIgLnVpLWRhdGVwaWNrZXItbmV4dC1ob3ZlciB7IHRvcDogMXB4OyB9Ci51aS1kYXRlcGlja2VyIC51aS1kYXRlcGlja2VyLXByZXYgeyBsZWZ0OjJweDsgfQoudWktZGF0ZXBpY2tlciAudWktZGF0ZXBpY2tlci1uZXh0IHsgcmlnaHQ6MnB4OyB9Ci51aS1kYXRlcGlja2VyIC51aS1kYXRlcGlja2VyLXByZXYtaG92ZXIgeyBsZWZ0OjFweDsgfQoudWktZGF0ZXBpY2tlciAudWktZGF0ZXBpY2tlci1uZXh0LWhvdmVyIHsgcmlnaHQ6MXB4OyB9Ci51aS1kYXRlcGlja2VyIC51aS1kYXRlcGlja2VyLXByZXYgc3BhbiwgLnVpLWRhdGVwaWNrZXIgLnVpLWRhdGVwaWNrZXItbmV4dCBzcGFuIHsgZGlzcGxheTogYmxvY2s7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgbGVmdDogNTAlOyBtYXJnaW4tbGVmdDogLThweDsgdG9wOiA1MCU7IG1hcmdpbi10b3A6IC04cHg7ICB9Ci51aS1kYXRlcGlja2VyIC51aS1kYXRlcGlja2VyLXRpdGxlIHsgbWFyZ2luOiAwIDIuM2VtOyBsaW5lLWhlaWdodDogMS44ZW07IHRleHQtYWxpZ246IGNlbnRlcjsgfQoudWktZGF0ZXBpY2tlciAudWktZGF0ZXBpY2tlci10aXRsZSBzZWxlY3QgeyBmb250LXNpemU6MWVtOyBtYXJnaW46MXB4IDA7IH0KLnVpLWRhdGVwaWNrZXIgc2VsZWN0LnVpLWRhdGVwaWNrZXItbW9udGgteWVhciB7d2lkdGg6IDEwMCU7fQoudWktZGF0ZXBpY2tlciBzZWxlY3QudWktZGF0ZXBpY2tlci1tb250aCwgCi51aS1kYXRlcGlja2VyIHNlbGVjdC51aS1kYXRlcGlja2VyLXllYXIgeyB3aWR0aDogNDIlO30KLnVpLWRhdGVwaWNrZXIgdGFibGUge3dpZHRoOiAxMDAlOyBmb250LXNpemU6IC45ZW07IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IG1hcmdpbjowIDAgLjRlbTsgfQoudWktZGF0ZXBpY2tlciB0aCB7IHBhZGRpbmc6IC43ZW0gLjNlbTsgdGV4dC1hbGlnbjogY2VudGVyOyBmb250LXdlaWdodDogYm9sZDsgYm9yZGVyOiAwOyAgfQoudWktZGF0ZXBpY2tlciB0ZCB7IGJvcmRlcjogMDsgcGFkZGluZzogMXB4OyB9Ci51aS1kYXRlcGlja2VyIHRkIHNwYW4sIC51aS1kYXRlcGlja2VyIHRkIGEgeyBkaXNwbGF5OiBibG9jazsgcGFkZGluZzogLjJlbTsgdGV4dC1hbGlnbjogcmlnaHQ7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfQoudWktZGF0ZXBpY2tlciAudWktZGF0ZXBpY2tlci1idXR0b25wYW5lIHsgYmFja2dyb3VuZC1pbWFnZTogbm9uZTsgbWFyZ2luOiAuN2VtIDAgMCAwOyBwYWRkaW5nOjAgLjJlbTsgYm9yZGVyLWxlZnQ6IDA7IGJvcmRlci1yaWdodDogMDsgYm9yZGVyLWJvdHRvbTogMDsgfQoudWktZGF0ZXBpY2tlciAudWktZGF0ZXBpY2tlci1idXR0b25wYW5lIGJ1dHRvbiB7IGZsb2F0OiByaWdodDsgbWFyZ2luOiAuNWVtIC4yZW0gLjRlbTsgY3Vyc29yOiBwb2ludGVyOyBwYWRkaW5nOiAuMWVtIC44ZW0gLjJlbSAuOGVtOyB3aWR0aDphdXRvOyBvdmVyZmxvdzp2aXNpYmxlO2NvbG9yOiNGRkZGRkY7IGZvbnQtc2l6ZToxZW07Zm9udC13ZWlnaHQ6IG5vcm1hbDsgaGVpZ2h0OjEuOGVtOyBiYWNrZ3JvdW5kOiM1Njg1Qjg7IGJvcmRlcjoxcHggc29saWQgIzRCOEJBQzt9Ci51aS1kYXRlcGlja2VyIC51aS1kYXRlcGlja2VyLWJ1dHRvbnBhbmUgYnV0dG9uLnVpLWRhdGVwaWNrZXItY3VycmVudCB7IGZsb2F0OmxlZnQ7fQoKLyogd2l0aCBtdWx0aXBsZSBjYWxlbmRhcnMgKi8KLnVpLWRhdGVwaWNrZXIudWktZGF0ZXBpY2tlci1tdWx0aSB7IHdpZHRoOmF1dG87IH0KLnVpLWRhdGVwaWNrZXItbXVsdGkgLnVpLWRhdGVwaWNrZXItZ3JvdXAgeyBmbG9hdDpsZWZ0OyB9Ci51aS1kYXRlcGlja2VyLW11bHRpIC51aS1kYXRlcGlja2VyLWdyb3VwIHRhYmxlIHsgd2lkdGg6OTUlOyBtYXJnaW46MCBhdXRvIC40ZW07IH0KLnVpLWRhdGVwaWNrZXItbXVsdGktMiAudWktZGF0ZXBpY2tlci1ncm91cCB7IHdpZHRoOjUwJTsgfQoudWktZGF0ZXBpY2tlci1tdWx0aS0zIC51aS1kYXRlcGlja2VyLWdyb3VwIHsgd2lkdGg6MzMuMyU7IH0KLnVpLWRhdGVwaWNrZXItbXVsdGktNCAudWktZGF0ZXBpY2tlci1ncm91cCB7IHdpZHRoOjI1JTsgfQoudWktZGF0ZXBpY2tlci1tdWx0aSAudWktZGF0ZXBpY2tlci1ncm91cC1sYXN0IC51aS1kYXRlcGlja2VyLWhlYWRlciB7IGJvcmRlci1sZWZ0LXdpZHRoOjA7IH0KLnVpLWRhdGVwaWNrZXItbXVsdGkgLnVpLWRhdGVwaWNrZXItZ3JvdXAtbWlkZGxlIC51aS1kYXRlcGlja2VyLWhlYWRlciB7IGJvcmRlci1sZWZ0LXdpZHRoOjA7IH0KLnVpLWRhdGVwaWNrZXItbXVsdGkgLnVpLWRhdGVwaWNrZXItYnV0dG9ucGFuZSB7IGNsZWFyOmxlZnQ7IH0KLnVpLWRhdGVwaWNrZXItcm93LWJyZWFrIHsgY2xlYXI6Ym90aDsgd2lkdGg6MTAwJTsgZm9udC1zaXplOjBlbTsgfQoKLyogUlRMIHN1cHBvcnQgKi8KLnVpLWRhdGVwaWNrZXItcnRsIHsgZGlyZWN0aW9uOiBydGw7IH0KLnVpLWRhdGVwaWNrZXItcnRsIC51aS1kYXRlcGlja2VyLXByZXYgeyByaWdodDogMnB4OyBsZWZ0OiBhdXRvOyB9Ci51aS1kYXRlcGlja2VyLXJ0bCAudWktZGF0ZXBpY2tlci1uZXh0IHsgbGVmdDogMnB4OyByaWdodDogYXV0bzsgfQoudWktZGF0ZXBpY2tlci1ydGwgLnVpLWRhdGVwaWNrZXItcHJldjpob3ZlciB7IHJpZ2h0OiAxcHg7IGxlZnQ6IGF1dG87IH0KLnVpLWRhdGVwaWNrZXItcnRsIC51aS1kYXRlcGlja2VyLW5leHQ6aG92ZXIgeyBsZWZ0OiAxcHg7IHJpZ2h0OiBhdXRvOyB9Ci51aS1kYXRlcGlja2VyLXJ0bCAudWktZGF0ZXBpY2tlci1idXR0b25wYW5lIHsgY2xlYXI6cmlnaHQ7IH0KLnVpLWRhdGVwaWNrZXItcnRsIC51aS1kYXRlcGlja2VyLWJ1dHRvbnBhbmUgYnV0dG9uIHsgZmxvYXQ6IGxlZnQ7IH0KLnVpLWRhdGVwaWNrZXItcnRsIC51aS1kYXRlcGlja2VyLWJ1dHRvbnBhbmUgYnV0dG9uLnVpLWRhdGVwaWNrZXItY3VycmVudCB7IGZsb2F0OnJpZ2h0OyB9Ci51aS1kYXRlcGlja2VyLXJ0bCAudWktZGF0ZXBpY2tlci1ncm91cCB7IGZsb2F0OnJpZ2h0OyB9Ci51aS1kYXRlcGlja2VyLXJ0bCAudWktZGF0ZXBpY2tlci1ncm91cC1sYXN0IC51aS1kYXRlcGlja2VyLWhlYWRlciB7IGJvcmRlci1yaWdodC13aWR0aDowOyBib3JkZXItbGVmdC13aWR0aDoxcHg7IH0KLnVpLWRhdGVwaWNrZXItcnRsIC51aS1kYXRlcGlja2VyLWdyb3VwLW1pZGRsZSAudWktZGF0ZXBpY2tlci1oZWFkZXIgeyBib3JkZXItcmlnaHQtd2lkdGg6MDsgYm9yZGVyLWxlZnQtd2lkdGg6MXB4OyB9CgovKiBJRTYgSUZSQU1FIEZJWCAodGFrZW4gZnJvbSBkYXRlcGlja2VyIDEuNS4zICovCi51aS1kYXRlcGlja2VyLWNvdmVyIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgLyptdXN0IGhhdmUqLwogICAgei1pbmRleDogLTE7IC8qbXVzdCBoYXZlKi8KICAgIGZpbHRlcjogbWFzaygpOyAvKm11c3QgaGF2ZSovCiAgICB0b3A6IC00cHg7IC8qbXVzdCBoYXZlKi8KICAgIGxlZnQ6IC00cHg7IC8qbXVzdCBoYXZlKi8KICAgIHdpZHRoOiAyMDBweDsgLyptdXN0IGhhdmUqLwogICAgaGVpZ2h0OiAyMDBweDsgLyptdXN0IGhhdmUqLwp9LyohCiAqIGpRdWVyeSBVSSBQcm9ncmVzc2JhciAxLjguMjMKICoKICogQ29weXJpZ2h0IDIwMTIsIEFVVEhPUlMudHh0IChodHRwOi8vanF1ZXJ5dWkuY29tL2Fib3V0KQogKiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgb3IgR1BMIFZlcnNpb24gMiBsaWNlbnNlcy4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBodHRwOi8vZG9jcy5qcXVlcnkuY29tL1VJL1Byb2dyZXNzYmFyI3RoZW1pbmcKICovCi51aS1wcm9ncmVzc2JhciB7IGhlaWdodDoyZW07IHRleHQtYWxpZ246IGxlZnQ7IG92ZXJmbG93OiBoaWRkZW47aGVpZ2h0OjE4cHg7fQoudWktcHJvZ3Jlc3NiYXIgLnVpLXByb2dyZXNzYmFyLXZhbHVlIHttYXJnaW46IC0xcHg7IGhlaWdodDoxMDAlOyB9CgojdWktZGF0ZXBpY2tlci1kaXYsIC51aS1kYXRlcGlja2VyeyBmb250LXNpemU6IDkwJTtib3gtc2hhZG93OiAwIDAgMTVweCAjYWFhO30JCi51aS10aW1lcGlja2VyLWRpdiAudWktd2lkZ2V0LWhlYWRlciB7IG1hcmdpbi1ib3R0b206IDhweDsgfQoudWktdGltZXBpY2tlci1kaXYgZGwgeyB0ZXh0LWFsaWduOiBsZWZ0OyB9Ci51aS10aW1lcGlja2VyLWRpdiBkbCBkdCB7IGhlaWdodDogMjVweDsgbWFyZ2luLWJvdHRvbTogLTI1cHg7IH0KLnVpLXRpbWVwaWNrZXItZGl2IGRsIGRkIHsgbWFyZ2luOiAwIDEwcHggMTBweCA2NXB4OyB9Ci51aS10aW1lcGlja2VyLWRpdiB0ZCB7IGZvbnQtc2l6ZTogOTAlOyB9Ci51aS10cGlja2VyLWdyaWQtbGFiZWwgeyBiYWNrZ3JvdW5kOiBub25lOyBib3JkZXI6IG5vbmU7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgfQoKCi51aS10YWJzIHsgcG9zaXRpb246IHJlbGF0aXZlOyBwYWRkaW5nOiAuMmVtOyB6b29tOiAxOyB9IC8qIHBvc2l0aW9uOiByZWxhdGl2ZSBwcmV2ZW50cyBJRSBzY3JvbGwgYnVnIChlbGVtZW50IHdpdGggcG9zaXRpb246IHJlbGF0aXZlIGluc2lkZSBjb250YWluZXIgd2l0aCBvdmVyZmxvdzogYXV0byBhcHBlYXIgYXMgImZpeGVkIikgKi8KLnVpLXRhYnMgLnVpLXRhYnMtbmF2IHsgbWFyZ2luOiAwOyBwYWRkaW5nOiAuMmVtIC4yZW0gMDsgfQoudWktdGFicyAudWktdGFicy1uYXYgbGkgeyBsaXN0LXN0eWxlOiBub25lOyBmbG9hdDogbGVmdDsgcG9zaXRpb246IHJlbGF0aXZlOyB0b3A6IDA7IG1hcmdpbjogMXB4IC4yZW0gMCAwOyBib3JkZXItYm90dG9tOiAwOyBwYWRkaW5nOiAwOyB3aGl0ZS1zcGFjZTogbm93cmFwOyB9Ci51aS10YWJzIC51aS10YWJzLW5hdiBsaSBhIHsgZmxvYXQ6IGxlZnQ7IHBhZGRpbmc6IC41ZW0gMWVtOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH0KLnVpLXRhYnMgLnVpLXRhYnMtbmF2IGxpLnVpLXRhYnMtYWN0aXZlIHsgbWFyZ2luLWJvdHRvbTogLTFweDsgcGFkZGluZy1ib3R0b206IDFweDsgfQoudWktdGFicyAudWktdGFicy1uYXYgbGkudWktdGFicy1hY3RpdmUgYSwgLnVpLXRhYnMgLnVpLXRhYnMtbmF2IGxpLnVpLXN0YXRlLWRpc2FibGVkIGEsIC51aS10YWJzIC51aS10YWJzLW5hdiBsaS51aS10YWJzLWxvYWRpbmcgYSB7IGN1cnNvcjogdGV4dDsgfQoudWktdGFicyAudWktdGFicy1uYXYgbGkgYSwgLnVpLXRhYnMtY29sbGFwc2libGUgLnVpLXRhYnMtbmF2IGxpLnVpLXRhYnMtYWN0aXZlIGEgeyBjdXJzb3I6IHBvaW50ZXI7IH0gLyogZmlyc3Qgc2VsZWN0b3IgaW4gZ3JvdXAgc2VlbXMgb2Jzb2xldGUsIGJ1dCByZXF1aXJlZCB0byBvdmVyY29tZSBidWcgaW4gT3BlcmEgYXBwbHlpbmcgY3Vyc29yOiB0ZXh0IG92ZXJhbGwgaWYgZGVmaW5lZCBlbHNld2hlcmUuLi4gKi8KLnVpLXRhYnMgLnVpLXRhYnMtcGFuZWwgeyBkaXNwbGF5OiBibG9jazsgYm9yZGVyLXdpZHRoOiAwOyBwYWRkaW5nOiAxZW0gMS40ZW07IGJhY2tncm91bmQ6IG5vbmU7IH0KCi51aS10b29sdGlwIHsKCWZvbnQtc2l6ZTouOWVtOwoJcGFkZGluZzo4cHg7Cglwb3NpdGlvbjphYnNvbHV0ZTsKCXotaW5kZXg6OTk5OTsKCS1vLWJveC1zaGFkb3c6IDAgMCA1cHggI2FhYTsKCS1tb3otYm94LXNoYWRvdzogMCAwIDVweCAjYWFhOwoJLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgNXB4ICNhYWE7Cglib3gtc2hhZG93OiAwIDAgNXB4ICNhYWE7CglvcGFjaXR5OiAwLjk7IGZpbHRlcjpBbHBoYShPcGFjaXR5PTAuOSk7Cn0KLyogRmFkZXMgYW5kIGJhY2tncm91bmQtaW1hZ2VzIGRvbid0IHdvcmsgd2VsbCB0b2dldGhlciBpbiBJRTYsIGRyb3AgdGhlIGltYWdlICovCiogaHRtbCAudWktdG9vbHRpcCB7CgliYWNrZ3JvdW5kLWltYWdlOiBub25lOwp9CmJvZHkgLnVpLXRvb2x0aXAgeyBib3JkZXItd2lkdGg6MXB4OyB9</file>
	<file name='zb_system\DEFEND\c_option.asp.html' crc32='FA90A605'  dt:dt='bin.base64'></file>
	<file name='zb_system\DEFEND\thanks.html' crc32='218D1BF'  dt:dt='bin.base64'>77u/DQo8dGFibGUgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiIGFsaWduPSdjZW50ZXInIHdpZHRoPSIxMDAlIiBjbGFzcz0idGFibGVCb3JkZXIiIGlkPSJ0aGFua3NsaXN0Ij4NCiAgPHRyPg0KICAgIDx0aCBoZWlnaHQ9IjMyIiBjb2xzcGFuPSIyIj4mbmJzcDtaLUJsb2fnvZHnq5nlkoznqIvluo/lvIDlj5E8L3RoPg0KICA8L3RyPg0KICA8dHI+DQogICAgPHRkIHdpZHRoPSI4JSIgPueoi+W6jzwvdGQ+DQogICAgPHRkIHdpZHRoPSI5MiUiPjxhIGhyZWY9Imh0dHA6Ly9iYnMucmFpbmJvd3NvZnQub3JnL2hvbWUucGhwP21vZD1zcGFjZSZhbXA7dWlkPTk4MiZhbXA7ZG89cHJvZmlsZSIgdGl0bGU9Iui/meS4quWwseaYr1otQmxvZ+eoi+W6j+eahOS4u+WImyxaLUJsb2fnmoTngbXprYLkurrniaks5Lyg6K+05Lit55qE5LiN6ZSI6ZKi54yq54yqLOS7jjEuMOS4gOebtOi1sOWIsDIuMOaXtuS7oyxBU1DniYjmnKznmoRaLUJsb2flsIbkvJrkuIDnm7TotbDkuIvljrvnmoQuIj56eC5hc2Q8L2E+LCZuYnNwOzxhIGhyZWY9Imh0dHA6Ly93d3cuZXNsb3kuY29tLyIgdGl0bGU9IuWTiOWTiOWQjOWtpuWQjOagt+aYr1otQmxvZ+eahOS8oOWlh+S6uueJqSzku47lk4jlk4jkuIrlpKflrabliLDnoJTnqbbnlJ/mr5XkuJos5LiA55u06YO95Zyo5Li6Wi1CbG9n5LuY5Ye6LFotQmxvZyAxLjjmnIlQU+WSjFRT5o+S5Lu25omN5pu057K+5b2pLOWcqOWPr+S7pemihOingeeahOWwhuadpSzmiJHku6zkvp3nhLbkvJrmi6XmnInlk4jlk4jlkIzlrabnmoQs5LiN6KeB5LiN5pWj5ZOmLiI+aGFwaGljPC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8vd3d3LnpzeHNvZnQuY29tLyIgdGl0bGU9IuiZveeEtui/mOayoeaIkOW5tO+8jOmDkeWNmuWjq+S7juS4gOWHuuWcuuWwseaYr+S4gOS4quaXqeeGn+WTgeenje+8jOWkqeaJje+8jOecn+aYr+WkqeaJje+8jOWNgeWFq+iIrOatpuiJuueyvumAmuWNgeS4g+agt+OAguWwj+Wwj+W5tOe6qu+8jOS4jeS9huWtpuagoemHjOa3t+eahOWlve+8jOW5tOW5tOS4u+aMgeaUvuW5v+aSre+8jOe9kee7nOS4iuabtOaYr+WQg+eahOW8gO+8jOWGmeeoi+W6j+WPkemAmuWRiui9u+i9pueGn+i3r+OAgui/mei0p+S4jeS9huWktOiEkeeBtea0u++8jOiAjOS4lOeyvuWKm+WNgei2s+WFheaym++8jOWDj+aYr+e7g+i/h+erpeWtkOWKn++8jOWwhuadpee7neWvueaYr+S4quWRvOmjjuWUpOmbqOeahOinkuiJsuWViu+8gSI+enN4PC9hPjwvdGQ+DQogIDwvdHI+DQogIDx0cj4NCiAgICA8dGQ+55WM6Z2iPC90ZD4NCiAgICA8dGQ+PGEgaHJlZj0iaHR0cDovL3d3dy5odG1saXQuY29tLmNuLyIgdGl0bGU9IuaWsOmynOS6uueahOW3peS9nOWwseaYr+avj+WkqeaOpeWNleaOpeWNleWGjeaOpeWNlSzlhbvlrrbns4rlj6Ms5a626YeM55qE6aG25qKB5p+xLOacieWEv+acieWls+eahOeUt+S6uuS5i+alt+aooS4iPuaWsOmynOS6ujwvYT4sJm5ic3A7PGEgaHJlZj0iaHR0cDovL2ltamlhby5jb20vIiB0aXRsZT0i576O5Li95Y+I5amJ57qm55qE5rmY5aa55a2QLOWPr+eIseeahOWkluihqOS4i+aOqeiXj+edgOWPpOWFuOe+jueahOawlOi0qCxaLUJsb2flrpjnvZHnmoTorr7orqHogIUs546w5Zyo5rex5Zyz5YGa552A5Zac5qyi55qE5bel5L2cLiI+5aiH5aiHPC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8vd3d3LmpncHkuY24vIiB0aXRsZT0i5LuW5aSq6L275LqGLOWwseWDj+S4gOeJh+e+veavmyzpo47kuIDlkLnlsLHpo57kuoYu5Li65LqG6YG/5YWN5Lmx6aOeLOS7lueahOWGheW/g+Wwsea4kOa4kOe6oOe7k+i1t+adpeS6hi4iPuWQieWFieeJh+e+vTwvYT48L3RkPg0KICA8L3RyPg0KICA8dHI+DQogICAgPHRkPuaUr+aMgTwvdGQ+DQogICAgPHRkPjxhIGhyZWY9Imh0dHA6Ly9iYnMucmFpbmJvd3NvZnQub3JnL2hvbWUucGhwP21vZD1zcGFjZSZhbXA7dWlkPTQ0JmFtcDtkbz1wcm9maWxlIiB0aXRsZT0iWi1CbG9n6YeM55qE6ICB6buE54mbLOecn+ato+eahOiAgem7hOeJmyzkuI3mhKfmmK/lsZ7niZvnmoQs5oC75piv5Zyo6buY6buY5peg6Ze755qE5aWJ54yu552A5LuW55qE5LiA5YiHLOWQg+eahOaYr+iNiSzmjKTlh7rmnaXnmoTmmK/otLTlrZDlkozku6PnoIEs6K6p5oiR5Lus5ZCR5LuW6Ie05pWsLOelneaciOacqOWQjOWtpuW/q+eCueaPkOWNh+S4gOS4i+aKiuWmueetiee6pyzlj4zlrr/lj4zpo57miorlprnlvZIhIj7mnIjkuIrkuYvmnKg8L2E+LCZuYnNwOzxhIGhyZWY9Imh0dHA6Ly93d3cud2FzaHVuLmNvbS8iIHRpdGxlPSLoqIDor63nioDliKnnmoRXYXNodW7mmK/orrrlnZvnmoTngbXprYIs5Li65LqGWi1CbG9n55qE5Y+R5bGV5ZCQ5bC95LqG5ZCE56eN5qe9LOe7iOS6juWQkOedgOWQkOedgOWQkOS4jeWKqOS6hizkvYblpYfov7nlj5HnlJ/kuoYs5LuW5Lul5ZCO5YaN5Lmf5LiN55So5ZCQ5LqGLOWPr+S7peaUueS4uuWWt+S6hi7npZ1XYXNodW7lkIzlrabogarmmI7lj6/niLHnmoTlpbPlhL/lgaXlurfmiJDplb8hIj5XYXNodW48L2E+LCZuYnNwOzxhIGhyZWY9Imh0dHA6Ly93d3cuZWN3b3JrZXIuY29tLyIgdGl0bGU9IuS8oOe7nyzpob7lrrYs54ix6ICB5amG5pu054ix5YS/5a2Q55qE5ZWG5Yqh57K+6IuxLOWLpOWli+eahEppbeWQjOWtpuWDj+eJm+iZu+S4gOagt+eahOWPruedgOmCo+WPquaHkueMqiznu4jkuo7miJDlip/kuoYsMi4w6KKr5LuW5oux5LqG5Ye65p2lLOS7lueri+WKn+S6hizku5bnq4vlip/kuoYs5LuW5Li6Wi1CbG9n56uL5LqG5LiA5aSn5YqfLOaBreWWnEppbeWQjOWtpiEiPuWwj+mjnum+mTwvYT48L3RkPg0KICA8L3RyPg0KICA8dHI+DQogICAgPHRkPuaEn+iwojwvdGQ+DQogICAgPHRkPjxhIGhyZWY9Imh0dHA6Ly93d3cueGgxMzAuY29tLyIgdGl0bGU9IuaLvuWPgeWQjOWtpuWIm+eri+S6hlotQmxvZ+eahOiuuuWdmyzku5bmiopaLUJsb2fluKbkuIrkuoblvIDmlL7nmoTpgZPot68s6L+Z5bCx5pivWi1CbG9n6K665Z2bdWlkPTHnmoTkurrniakh56Wd5ou+5Y+B5ZCM5a2m55qE5a625bqt576O5ruh5bm456aPLOS6i+S4muWFtOaXuuWPkei+viEhISI+5ou+5Y+BPC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8vYmJzLnJhaW5ib3dzb2Z0Lm9yZy9ob21lLnBocD9tb2Q9c3BhY2UmYW1wO3VpZD01MjkyJmFtcDtkbz1wcm9maWxlIiB0aXRsZT0iTUFP5Li75bit6K+06L+HQ1DmmK/kuKrlpb3lkIzlv5chIj5DYXB0aWFuPC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8vYmJzLnJhaW5ib3dzb2Z0Lm9yZy9ob21lLnBocD9tb2Q9c3BhY2UmYW1wO3VpZD02JmFtcDtkbz1wcm9maWxlIiB0aXRsZT0i5bm06L275pyJ5Li655qE5oqA5pyv6L6+5Lq6LOa0pemXqOWwj+W8uizovazmiJjnp7vliqjlvIDlj5HkuoYuIj7mmI7mnIjmmJ/lhYk8L2E+LCZuYnNwOzxhIGhyZWY9Imh0dHA6Ly93d3cuZGM5LmNuLyI+U2lwbzwvYT4sJm5ic3A7PGEgaHJlZj0iaHR0cDovL3d3dy53aWxsaWFtbG9uZy5pbmZvLyI+6b6Z5aiB5buJPC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8vWnhNWVMuQ09NLyI+WnguTXlzPC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8vYmJzLnJhaW5ib3dzb2Z0Lm9yZy9ob21lLnBocD9tb2Q9c3BhY2UmYW1wO3VpZD04NCZhbXA7ZG89cHJvZmlsZSI+5bu6562R55uS5a2QPC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8vd3d3LndpbGYuY24vIj7ni7znmoTml4vlvos8L2E+LCZuYnNwOzxhIGhyZWY9Imh0dHA6Ly93d3cuYnVzZmx5Lm5ldC8iPkJ1c2ZseTwvYT4sJm5ic3A7PGEgaHJlZj0iaHR0cDovL3d3dy5pemh1Lm9yZy8iIHRpdGxlPSLlpKfnjKos5aSn54yqLOWkp+Wkp+eMqiHkvKDor7TkuK3nmoTpgqPlpLTlpKfnjKohISEiPuWkp+eMqjwvYT4sJm5ic3A7PGEgaHJlZj0iaHR0cDovL3d3dy5oY29ubHkuY29tLyI+5L2V5rKnPC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8veHZkZXNpZ24uY29tLyI+SXRTZWFuPC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8vTHVTb25nU29uZy5jb20vIj7ljaLmnb7mnb48L2E+LCZuYnNwOzxhIGhyZWY9Imh0dHA6Ly9pbXpob3UuY29tLyI+5pyq5a+SPC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8vYmJzLnJhaW5ib3dzb2Z0Lm9yZy9ob21lLnBocD9tb2Q9c3BhY2UmYW1wO3VpZD03NTQ4NSZhbXA7ZG89cHJvZmlsZSI+55Gc5bu3PC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8vd3d3Lmh1aXNlbS5jb20iPua1geW5tDwvYT7nrYnmnIvlj4s8L3RkPg0KICA8L3RyPg0KPC90YWJsZT4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4kKCIjdGhhbmtzbGlzdCBhIikuYXR0cigidGFyZ2V0IiwiX2JsYW5rIik7PC9zY3JpcHQ+</file>
	<file name='zb_system\DEFEND\default\b_article-multi.html' crc32='39B683BC'  dt:dt='bin.base64'>77u/PGRpdiBjbGFzcz0icG9zdCBtdWx0aS1wb3N0IGNhdGU8I2FydGljbGUvY2F0ZWdvcnkvaWQjPiBhdXRoPCNhcnRpY2xlL2F1dGhvci9pZCM+Ij4NCgk8aDQgY2xhc3M9InBvc3QtZGF0ZSI+PCNhcnRpY2xlL3Bvc3R0aW1lL2xvbmdkYXRlIz48L2g0Pg0KCTxoMiBjbGFzcz0icG9zdC10aXRsZSI+PGEgaHJlZj0iPCNhcnRpY2xlL3VybCM+Ij48I2FydGljbGUvdGl0bGUjPjwvYT48L2gyPg0KCTxkaXYgY2xhc3M9InBvc3QtYm9keSI+PCNhcnRpY2xlL2ludHJvIz48L2Rpdj4NCgk8aDUgY2xhc3M9InBvc3QtdGFncyI+PCN0ZW1wbGF0ZTphcnRpY2xlX3RhZzpiZWdpbiM+PCNaQ19NU0cxMzgjPjogPHNwYW4gY2xhc3M9InRhZ3MiPjwjdGVtcGxhdGU6YXJ0aWNsZV90YWcjPjwvc3Bhbj48I3RlbXBsYXRlOmFydGljbGVfdGFnOmVuZCM+PC9oNT4NCgk8aDYgY2xhc3M9InBvc3QtZm9vdGVyIj4NCgkJPCNaQ19NU0cwMTEjPjo8I2FydGljbGUvYXV0aG9yL25hbWUjPiB8IDwjWkNfTVNHMDEyIz46PCNhcnRpY2xlL2NhdGVnb3J5L25hbWUjPiB8IDwjWkNfTVNHMDEzIz46PCNhcnRpY2xlL2NvbW1udW1zIz4gfCA8I1pDX01TRzEzMCM+OjwjYXJ0aWNsZS9sb2Fkdmlld2NvdW50Iz4NCgk8L2g2Pg0KPC9kaXY+</file>
	<file name='zb_system\DEFEND\default\b_article-page.html' crc32='8BF2CF8E'  dt:dt='bin.base64'>77u/PGRpdiBjbGFzcz0icG9zdCBzaW5nbGUtcG9zdCBjYXRlPCNhcnRpY2xlL2NhdGVnb3J5L2lkIz4gYXV0aDwjYXJ0aWNsZS9hdXRob3IvaWQjPiI+DQoJPGg0IGNsYXNzPSJwb3N0LWRhdGUiPjwvaDQ+DQoJPGgyIGNsYXNzPSJwb3N0LXRpdGxlIj48I2FydGljbGUvdGl0bGUjPjwvaDI+DQoJPGRpdiBjbGFzcz0icG9zdC1ib2R5Ij48I2FydGljbGUvY29udGVudCM+PC9kaXY+DQoJPGg1IGNsYXNzPSJwb3N0LXRhZ3MiPjwvaDU+DQoJPGg2IGNsYXNzPSJwb3N0LWZvb3RlciI+PC9oNj4NCjwvZGl2Pg0KPCN0ZW1wbGF0ZTphcnRpY2xlX2NvbW1lbnQ6YmVnaW4jPg0KPHVsIGNsYXNzPSJtc2cgbXNnaGVhZCI+DQoJPGxpIGNsYXNzPSJ0Ym5hbWUiPjwjWkNfTVNHMjExIz46PC9saT4NCjwvdWw+DQo8I3RlbXBsYXRlOmFydGljbGVfY29tbWVudCM+DQo8I3RlbXBsYXRlOmFydGljbGVfY29tbWVudF9wYWdlYmFyIz4NCjwjdGVtcGxhdGU6YXJ0aWNsZV9jb21tZW50OmVuZCM+DQoNCjwjdGVtcGxhdGU6YXJ0aWNsZV9jb21tZW50cG9zdCM+</file>
	<file name='zb_system\DEFEND\default\b_article-single.html' crc32='8FC792F5'  dt:dt='bin.base64'>77u/PGRpdiBjbGFzcz0icG9zdCBzaW5nbGUtcG9zdCBjYXRlPCNhcnRpY2xlL2NhdGVnb3J5L2lkIz4gYXV0aDwjYXJ0aWNsZS9hdXRob3IvaWQjPiI+DQoJPGRpdiBjbGFzcz0icG9zdC1uYXYiPjwjdGVtcGxhdGU6YXJ0aWNsZV9uYXZiYXJfbCM+PCN0ZW1wbGF0ZTphcnRpY2xlX25hdmJhcl9yIz48L2Rpdj4NCgk8aDQgY2xhc3M9InBvc3QtZGF0ZSI+PCNhcnRpY2xlL3Bvc3R0aW1lIz48L2g0Pg0KCTxoMiBjbGFzcz0icG9zdC10aXRsZSI+PCNhcnRpY2xlL3RpdGxlIz48L2gyPg0KCTxkaXYgY2xhc3M9InBvc3QtYm9keSI+PCNhcnRpY2xlL2NvbnRlbnQjPjwvZGl2Pg0KCTxoNSBjbGFzcz0icG9zdC10YWdzIj48I3RlbXBsYXRlOmFydGljbGVfdGFnOmJlZ2luIz48I1pDX01TRzEzOCM+OiA8c3BhbiBjbGFzcz0idGFncyI+PCN0ZW1wbGF0ZTphcnRpY2xlX3RhZyM+PC9zcGFuPjwjdGVtcGxhdGU6YXJ0aWNsZV90YWc6ZW5kIz48L2g1Pg0KCTxoNiBjbGFzcz0icG9zdC1mb290ZXIiPg0KCQk8I1pDX01TRzAxMSM+OjwjYXJ0aWNsZS9hdXRob3IvbmFtZSM+IHwgPCNaQ19NU0cwMTIjPjo8I2FydGljbGUvY2F0ZWdvcnkvbmFtZSM+IHwgPCNaQ19NU0cwMTMjPjo8I2FydGljbGUvY29tbW51bXMjPiB8IDwjWkNfTVNHMTMwIz46PCNhcnRpY2xlL2FkZHZpZXdjb3VudCM+DQoJPC9oNj4NCjwvZGl2Pg0KPCN0ZW1wbGF0ZTphcnRpY2xlX211dHVhbGl0eTpiZWdpbiM+DQo8dWwgY2xhc3M9Im1zZyBtdXR1YWxpdHkiPg0KCTxsaSBjbGFzcz0idGJuYW1lIj48I1pDX01TRzIzMSM+OjwvbGk+DQoJPGxpIGNsYXNzPSJtc2dhcnRpY2xlIj48I3RlbXBsYXRlOmFydGljbGVfbXV0dWFsaXR5Iz48L2xpPg0KPC91bD4NCjwjdGVtcGxhdGU6YXJ0aWNsZV9tdXR1YWxpdHk6ZW5kIz4NCg0KDQo8I3RlbXBsYXRlOmFydGljbGVfY29tbWVudDpiZWdpbiM+DQo8dWwgY2xhc3M9Im1zZyBtc2doZWFkIj4NCgk8bGkgY2xhc3M9InRibmFtZSI+PCNaQ19NU0cyMTEjPjo8L2xpPg0KPC91bD4NCjwjdGVtcGxhdGU6YXJ0aWNsZV9jb21tZW50Iz4NCjwjdGVtcGxhdGU6YXJ0aWNsZV9jb21tZW50X3BhZ2ViYXIjPg0KPCN0ZW1wbGF0ZTphcnRpY2xlX2NvbW1lbnQ6ZW5kIz4NCg0KPCN0ZW1wbGF0ZTphcnRpY2xlX2NvbW1lbnRwb3N0Iz4=</file>
	<file name='zb_system\DEFEND\default\b_article_comment.html' crc32='8BCB0358'  dt:dt='bin.base64'>77u/PHVsIGNsYXNzPSJtc2ciIGlkPSJjbXQ8I2FydGljbGUvY29tbWVudC9pZCM+Ij4NCgk8bGkgY2xhc3M9Im1zZ25hbWUiPjxpbWcgY2xhc3M9ImF2YXRhciIgc3JjPSI8I2FydGljbGUvY29tbWVudC9hdmF0YXIjPiIgYWx0PSIiIHdpZHRoPSIzMiIvPiZuYnNwOzxzcGFuIGNsYXNzPSJjb21tZW50bmFtZSI+PGEgaHJlZj0iPCNhcnRpY2xlL2NvbW1lbnQvdXJsZW5jb2RlciM+IiByZWw9Im5vZm9sbG93IiB0YXJnZXQ9Il9ibGFuayI+PCNhcnRpY2xlL2NvbW1lbnQvbmFtZSM+PC9hPjwvc3Bhbj48YnIvPjxzbWFsbD4mbmJzcDs8I1pDX01TRzI3NSM+Jm5ic3A7PCNhcnRpY2xlL2NvbW1lbnQvcG9zdHRpbWUjPiZuYnNwOyZuYnNwOzxzcGFuIGNsYXNzPSJyZXZlcnRjb21tZW50Ij48YSBocmVmPSIjY210PCNhcnRpY2xlL2NvbW1lbnQvaWQjPiIgb25jbGljaz0iUmVDb21tZW50KCdjbXQ8I2FydGljbGUvY29tbWVudC9pZCM+JywnbXNnJywnbXNnYXJ0aWNsZScsJ2RpdkNvbW1lbnRQb3N0JywnPCNhcnRpY2xlL2NvbW1lbnQvaWQjPicpIj48I1pDX01TRzI2NSM+PC9hPjwvc3Bhbj48L3NtYWxsPjwvbGk+DQoJPGxpIGNsYXNzPSJtc2dhcnRpY2xlIj48I2FydGljbGUvY29tbWVudC9jb250ZW50Iz48L2xpPg0KPC91bD4NCg==</file>
	<file name='zb_system\DEFEND\default\b_article_commentpost.html' crc32='F7AB204E'  dt:dt='bin.base64'>77u/PGRpdiBjbGFzcz0icG9zdCIgaWQ9ImRpdkNvbW1lbnRQb3N0Ij4NCgk8cCBjbGFzcz0icG9zdHRvcCI+PGEgbmFtZT0iY29tbWVudCI+PCNaQ19NU0cwMjQjPjo8L2E+PHNtYWxsPjxhIHJlbD0ibm9mb2xsb3ciIGlkPSJjYW5jZWwtcmVwbHkiIGhyZWY9IiNkaXZDb21tZW50UG9zdCIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPjwjWkNfTVNHMjY0Iz48I1pDX01TRzE0OSM+PC9hPjwvc21hbGw+PC9wPg0KCTxmb3JtIGlkPSJmcm1TdW1iaXQiIHRhcmdldD0iX3NlbGYiIG1ldGhvZD0icG9zdCIgYWN0aW9uPSI8I2FydGljbGUvY29tbWVudHBvc3R1cmwjPiIgPg0KCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImlucElkIiBpZD0iaW5wSWQiIHZhbHVlPSI8I2FydGljbGUvaWQjPiIgLz4NCgk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJpbnBBcnRpY2xlIiBpZD0iaW5wQXJ0aWNsZSIgdmFsdWU9IiIgLz4NCgk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJpbnBMb2NhdGlvbiIgaWQ9ImlucExvY2F0aW9uIiB2YWx1ZT0iIiAvPg0KCTxwPjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJpbnBOYW1lIiBpZD0iaW5wTmFtZSIgY2xhc3M9InRleHQiIHZhbHVlPSIiIHNpemU9IjI4IiB0YWJpbmRleD0iMSIgLz4gPGxhYmVsIGZvcj0iaW5wTmFtZSI+PCNaQ19NU0cwMDEjPigqKTwvbGFiZWw+PC9wPg0KCTxwPjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJpbnBFbWFpbCIgaWQ9ImlucEVtYWlsIiBjbGFzcz0idGV4dCIgdmFsdWU9IiIgc2l6ZT0iMjgiIHRhYmluZGV4PSIyIiAvPiA8bGFiZWwgZm9yPSJpbnBFbWFpbCI+PCNaQ19NU0cwNTMjPjwvbGFiZWw+PC9wPg0KCTxwPjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJpbnBIb21lUGFnZSIgaWQ9ImlucEhvbWVQYWdlIiBjbGFzcz0idGV4dCIgdmFsdWU9IiIgc2l6ZT0iMjgiIHRhYmluZGV4PSIzIiAvPiA8bGFiZWwgZm9yPSJpbnBIb21lUGFnZSI+PCNaQ19NU0cwNTQjPjwvbGFiZWw+PC9wPg0KCTwjdGVtcGxhdGU6YXJ0aWNsZV9jb21tZW50cG9zdC12ZXJpZnkjPg0KCTxwPjxsYWJlbCBmb3I9InR4YUFydGljbGUiPjwjWkNfTVNHMDU1Iz4oKikoPCNaQ19NU0cwNTYjPjo8I1pDX0NPTlRFTlRfTUFYIz4pPC9sYWJlbD48L3A+DQoJPHA+PHRleHRhcmVhIG5hbWU9InR4YUFydGljbGUiIGlkPSJ0eGFBcnRpY2xlIiBvbmNoYW5nZT0iR2V0QWN0aXZlVGV4dCh0aGlzLmlkKTsiIG9uY2xpY2s9IkdldEFjdGl2ZVRleHQodGhpcy5pZCk7IiBvbmZvY3VzPSJHZXRBY3RpdmVUZXh0KHRoaXMuaWQpOyIgY2xhc3M9InRleHQiIGNvbHM9IjUwIiByb3dzPSI0IiB0YWJpbmRleD0iNSIgPjwvdGV4dGFyZWE+PC9wPg0KCTxwPjxpbnB1dCBuYW1lPSJidG5TdW1iaXQiIHR5cGU9InN1Ym1pdCIgdGFiaW5kZXg9IjYiIHZhbHVlPSI8I1pDX01TRzA4NyM+IiBvbmNsaWNrPSJKYXZhU2NyaXB0OnJldHVybiBWZXJpZnlNZXNzYWdlKCkiIGNsYXNzPSJidXR0b24iIC8+IDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iY2hrUmVtZW1iZXIiIHZhbHVlPSIxIiBpZD0iY2hrUmVtZW1iZXIiIC8+IDxsYWJlbCBmb3I9ImNoa1JlbWVtYmVyIj48I1pDX01TRzA0OSM+PC9sYWJlbD48L3A+DQoJPHNjcmlwdCBsYW5ndWFnZT0iSmF2YVNjcmlwdCIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5vYmpBY3RpdmU9InR4YUFydGljbGUiO0V4cG9ydFViYkZyYW1lKCk7PC9zY3JpcHQ+DQoJPC9mb3JtPg0KCTxwIGNsYXNzPSJwb3N0Ym90dG9tIj48I1pDX01TRzA0MCM+PC9wPg0KCTxzY3JpcHQgbGFuZ3VhZ2U9IkphdmFTY3JpcHQiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+TG9hZFJlbWVtYmVySW5mbygpOzwvc2NyaXB0Pg0KPC9kaXY+</file>
	<file name='zb_system\DEFEND\default\b_article_comment_pagebar_l.html' crc32='DDD4CE00'  dt:dt='bin.base64'>77u/PGEgY2xhc3M9ImwiIGhyZWY9IiNBamF4Q29tbWVudEVuZCIgb25jbGljaz0iPCNhcnRpY2xlL2NvbW1lbnRfcGFnZWJhcl9sL3VybCM+Ij48c3BhbiBjbGFzcz0iY29tbWVudHNwYWdlIj48I1pDX01TRzE5MiM+PC9zcGFuPjwvYT4=</file>
	<file name='zb_system\DEFEND\default\b_article_comment_pagebar_r.html' crc32='71E2B82E'  dt:dt='bin.base64'>77u/PGEgY2xhc3M9InIiIGhyZWY9IiNBamF4Q29tbWVudEVuZCIgb25jbGljaz0iPCNhcnRpY2xlL2NvbW1lbnRfcGFnZWJhcl9yL3VybCM+Ij48c3BhbiBjbGFzcz0iY29tbWVudHNwYWdlIj48I1pDX01TRzE5MyM+PC9zcGFuPjwvYT4=</file>
	<file name='zb_system\DEFEND\default\b_article_navbar_l.html' crc32='4DAAECF4'  dt:dt='bin.base64'>77u/PGEgY2xhc3M9ImwiIGhyZWY9IjwjYXJ0aWNsZS9uYXZfbC91cmwjPiIgdGl0bGU9IjwjYXJ0aWNsZS9uYXZfbC9uYW1lIz4iPjwjWkNfTVNHMTQ2Iz48L2E+</file>
	<file name='zb_system\DEFEND\default\b_article_navbar_r.html' crc32='4AABFE0F'  dt:dt='bin.base64'>77u/PGEgY2xhc3M9InIiIGhyZWY9IjwjYXJ0aWNsZS9uYXZfci91cmwjPiIgdGl0bGU9IjwjYXJ0aWNsZS9uYXZfci9uYW1lIz4iPjwjWkNfTVNHMTQ4Iz48L2E+</file>
	<file name='zb_system\DEFEND\default\b_function.html' crc32='776D140D'  dt:dt='bin.base64'>77u/PGRsIGNsYXNzPSJmdW5jdGlvbiIgaWQ9IjwjZnVuY3Rpb24vaHRtbGlkIz4iPg0KPCN0ZW1wbGF0ZTpmdW5jdGlvbl90aXRsZTpiZWdpbiM+PGR0IGNsYXNzPSJmdW5jdGlvbl90Ij48I2Z1bmN0aW9uL25hbWUjPjwvZHQ+PCN0ZW1wbGF0ZTpmdW5jdGlvbl90aXRsZTplbmQjPg0KPGRkIGNsYXNzPSJmdW5jdGlvbl9jIj4NCjwjZnVuY3Rpb24vY29udGVudCM+DQo8L2RkPg0KPC9kbD4NCg==</file>
	<file name='zb_system\DEFEND\default\default.html' crc32='4E712258'  dt:dt='bin.base64'>77u/PCNURU1QTEFURV9IRUFERVIjPg0KCTxsaW5rIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIiBocmVmPSI8I1pDX0JMT0dfSE9TVCM+ZmVlZC5hc3AiIHRpdGxlPSI8I1pDX0JMT0dfVElUTEUjPiIgLz4NCjwvaGVhZD4NCjxib2R5IGNsYXNzPSJtdWx0aSBkZWZhdWx0Ij4NCjxkaXYgaWQ9ImRpdkFsbCI+DQoJPGRpdiBpZD0iZGl2UGFnZSI+DQoJPGRpdiBpZD0iZGl2TWlkZGxlIj4NCgkJPGRpdiBpZD0iZGl2VG9wIj4NCgkJCTxoMSBpZD0iQmxvZ1RpdGxlIj48YSBocmVmPSI8I1pDX0JMT0dfSE9TVCM+Ij48I1pDX0JMT0dfTkFNRSM+PC9hPjwvaDE+DQoJCQk8aDMgaWQ9IkJsb2dTdWJUaXRsZSI+PCNaQ19CTE9HX1NVQl9OQU1FIz48L2gzPg0KCQk8L2Rpdj4NCgkJPGRpdiBpZD0iZGl2TmF2QmFyIj4NCjx1bD4NCjwjQ0FDSEVfSU5DTFVERV9OQVZCQVIjPg0KPC91bD4NCgkJPC9kaXY+DQoJCTxkaXYgaWQ9ImRpdk1haW4iPg0KPCN0ZW1wbGF0ZTphcnRpY2xlLW11bHRpIz4NCjxkaXYgY2xhc3M9InBvc3QgcGFnZWJhciI+PCN0ZW1wbGF0ZTpwYWdlYmFyIz48L2Rpdj4NCgkJPC9kaXY+DQoJCTxkaXYgaWQ9ImRpdlNpZGViYXIiPg0KPCN0ZW1wbGF0ZTpzaWRlYmFyIz4NCg0KCQk8L2Rpdj4NCjwjVEVNUExBVEVfRk9PVEVSIz4=</file>
	<file name='zb_system\DEFEND\default\header.html' crc32='4788EF93'  dt:dt='bin.base64'>77u/PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPg0KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiIHhtbDpsYW5nPSI8I1pDX0JMT0dfTEFOR1VBR0UjPiIgbGFuZz0iPCNaQ19CTE9HX0xBTkdVQUdFIz4iPg0KPGhlYWQ+DQoJPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiLz4NCgk8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LUxhbmd1YWdlIiBjb250ZW50PSI8I1pDX0JMT0dfTEFOR1VBR0UjPiIgLz4NCgk8dGl0bGU+PCNaQ19CTE9HX1RJVExFIz48I1pDX01TRzA0NCM+PCNCbG9nVGl0bGUjPjwvdGl0bGU+DQoJPG1ldGEgbmFtZT0iZ2VuZXJhdG9yIiBjb250ZW50PSJaLUJsb2cgPCNaQ19CTE9HX1ZFUlNJT04jPiIgLz4NCgk8bGluayByZWw9InN0eWxlc2hlZXQiIHJldj0ic3R5bGVzaGVldCIgaHJlZj0iPCNaQ19CTE9HX0hPU1QjPnpiX3VzZXJzL3RoZW1lLzwjWkNfQkxPR19USEVNRSM+L3NvdXJjZS9zdHlsZS5jc3MuYXNwIiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9InNjcmVlbiIgLz4NCgk8c2NyaXB0IHNyYz0iPCNaQ19CTE9HX0hPU1QjPnpiX3N5c3RlbS9zY3JpcHQvY29tbW9uLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KCTxzY3JpcHQgc3JjPSI8I1pDX0JMT0dfSE9TVCM+emJfc3lzdGVtL2Z1bmN0aW9uL2NfaHRtbF9qc19hZGQuYXNwIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KCTxzY3JpcHQgc3JjPSI8I1pDX0JMT0dfSE9TVCM+emJfdXNlcnMvdGhlbWUvPCNaQ19CTE9HX1RIRU1FIz4vc2NyaXB0L2N1c3RvbS5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4=</file>
	<file name='zb_system\FUNCTION\c_admin_js.asp' crc32='FCB817D4'  dt:dt='bin.base64'>77u/PCVAIENPREVQQUdFPTY1MDAxICU+DQo8JQ0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicvLyAgICAgICAgICAgICAgWi1CbG9nDQonLy8g5L2cICAgIOiAhTogICAg5pyx54WKKHp4LmFzZCkNCicvLyDniYjmnYPmiYDmnIk6ICAgIFJhaW5ib3dTb2Z0IFN0dWRpbw0KJy8vIOaKgOacr+aUr+aMgTogICAgcmFpbmJvd3NvZnRAMTYzLmNvbQ0KJy8vIOeoi+W6j+WQjeensDogICAgDQonLy8g56iL5bqP54mI5pysOiAgICANCicvLyDljZXlhYPlkI3np7A6ICAgIGNfYWRtaW5fanMuYXNwDQonLy8g5byA5aeL5pe26Ze0OiAgICANCicvLyDmnIDlkI7kv67mlLk6ICAgIA0KJy8vIOWkhyAgICDms6g6ICAgIOWQjuWPsGFqYXjovoXliqkNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQolPg0KPCUgT3B0aW9uIEV4cGxpY2l0ICU+DQo8JSBPbiBFcnJvciBSZXN1bWUgTmV4dCAlPg0KPCUgUmVzcG9uc2UuQ2hhcnNldD0iVVRGLTgiICU+DQo8JSBSZXNwb25zZS5CdWZmZXI9VHJ1ZSAlPg0KPCUgUmVzcG9uc2UuQ29udGVudFR5cGU9ImFwcGxpY2F0aW9uL3gtamF2YXNjcmlwdCIgJT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vLi4vemJfdXNlcnMvY19vcHRpb24uYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vZnVuY3Rpb24vY19mdW5jdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSIuLi9mdW5jdGlvbi9jX3N5c3RlbV9saWIuYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vZnVuY3Rpb24vY19zeXN0ZW1fYmFzZS5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSIuLi9mdW5jdGlvbi9jX3N5c3RlbV9wbHVnaW4uYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vLi4vemJfdXNlcnMvcGx1Z2luL3BfY29uZmlnLmFzcCIgLS0+DQo8JSANCkNhbGwgTG9hZEdsb2JlQ2FjaGUNCg0KRGltIHMNCkRpbSBmDQpmPVJlcXVlc3QuUXVlcnlTdHJpbmcoImFjdCIpDQpJZiBmPD4iIiBUaGVuDQoNCglJZiBmPSJ0YWdzIiBUaGVuDQoNCgkJQ2FsbCBPcGVuQ29ubmVjdCgpDQoNCgkJU2V0IEJsb2dVc2VyID0gTmV3IFRVc2VyDQoJCUlmIEJsb2dVc2VyLlZlcmlmeSgpPVRydWUgVGhlbg0KCQkJSWYgQ2hlY2tSaWdodHMoIkFydGljbGVFZHQiKT1UcnVlIFRoZW4NCg0KCQkJCSdhamF4IHRhZ3MNCgkJCQlSZXNwb25zZS5Xcml0ZSAiJCgiIiNhamF4dGFncyIiKS5odG1sKCIiIg0KCQkJCURpbSBvYmpSUw0KCQkJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBUT1AgNTAgW3RhZ19JRF0sW3RhZ19OYW1lXSBGUk9NIFtibG9nX1RhZ10gT1JERVIgQlkgW3RhZ19Db3VudF0gREVTQyIpDQoJCQkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KCQkJCQlEbyBXaGlsZSBOb3Qgb2JqUlMuZW9mDQoJCQkJCQlSZXNwb25zZS5Xcml0ZSAiPGEgaHJlZj0nIyc+IiYgVHJhbnNmZXJIVE1MKG9ialJTKCJ0YWdfTmFtZSIpLCJbaHRtbC1mb3JtYXRdIikgJiI8L2E+ICINCgkJCQkJCW9ialJTLk1vdmVOZXh0DQoJCQkJCUxvb3ANCgkJCQlFbmQgSWYNCgkJCQlvYmpSUy5DbG9zZQ0KCQkJCVNldCBvYmpSUz1Ob3RoaW5nDQoJCQkJUmVzcG9uc2UuV3JpdGUgIiIiKTskKCIiI3VsVGFnIiIpLnRhZ1RvKCIiI2VkdFRhZyIiKTsiDQoNCgkJCUVuZCBJZg0KCQlFbmQgSWYNCg0KCQlDYWxsIENsb3NlQ29ubmVjdCgpDQoNCglFbmQgSWYNCglSZXNwb25zZS5FbmQNCkVuZCBJZg0KJT4NCg==</file>
	<file name='zb_system\FUNCTION\c_admin_js_add.asp' crc32='FCC22BEE'  dt:dt='bin.base64'></file>
	<file name='zb_system\FUNCTION\c_function.asp' crc32='D61649EE'  dt:dt='bin.base64'></file>
	<file name='zb_system\FUNCTION\c_html_js.asp' crc32='33972D69'  dt:dt='bin.base64'>77u/PCVAIENPREVQQUdFPTY1MDAxICU+DQo8JQ0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicvLyAgICAgICAgICAgICAgWi1CbG9nDQonLy8g5L2cICAgIOiAhTogICAg5pyx54WKKHp4LmFzZCkNCicvLyDniYjmnYPmiYDmnIk6ICAgIFJhaW5ib3dTb2Z0IFN0dWRpbw0KJy8vIOaKgOacr+aUr+aMgTogICAgcmFpbmJvd3NvZnRAMTYzLmNvbQ0KJy8vIOeoi+W6j+WQjeensDogICAgDQonLy8g56iL5bqP54mI5pysOiAgICANCicvLyDljZXlhYPlkI3np7A6ICAgIGNfaHRtbF9qcy5hc3ANCicvLyDlvIDlp4vml7bpl7Q6ICAgIDIwMDUuMDIuMjINCicvLyDmnIDlkI7kv67mlLk6ICAgIA0KJy8vIOWkhyAgICDms6g6ICAgIGh0bWzmqKHmnb/ohJrmnKzovoXliqkNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQolPg0KPCUgT3B0aW9uIEV4cGxpY2l0ICU+DQo8JSBPbiBFcnJvciBSZXN1bWUgTmV4dCAlPg0KPCUgUmVzcG9uc2UuQ2hhcnNldD0iVVRGLTgiICU+DQo8JSBSZXNwb25zZS5CdWZmZXI9VHJ1ZSAlPg0KPCUgUmVzcG9uc2UuQ29udGVudFR5cGU9ImFwcGxpY2F0aW9uL3gtamF2YXNjcmlwdCIgJT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vLi4vemJfdXNlcnMvY19vcHRpb24uYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vZnVuY3Rpb24vY19mdW5jdGlvbi5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSIuLi9mdW5jdGlvbi9jX3N5c3RlbV9saWIuYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vZnVuY3Rpb24vY19zeXN0ZW1fYmFzZS5hc3AiIC0tPg0KPCEtLSAjaW5jbHVkZSBmaWxlPSIuLi9mdW5jdGlvbi9jX3N5c3RlbV9wbHVnaW4uYXNwIiAtLT4NCjwhLS0gI2luY2x1ZGUgZmlsZT0iLi4vLi4vemJfdXNlcnMvcGx1Z2luL3BfY29uZmlnLmFzcCIgLS0+DQo8JQ0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQoNCkNhbGwgTG9hZEdsb2JlQ2FjaGUNCg0KRGltIHMNCkRpbSBmDQoNCmY9UmVxdWVzdC5RdWVyeVN0cmluZygiYWN0IikNCklmIGY8PiIiIFRoZW4NCg0KCUlmIChmPSJBcnRpY2xlVmlldyIpIE9yIChmPSJjb3VudCIpIFRoZW4NCg0KCQlEaW0gaSxqDQoNCgkJaT1SZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJpZCIpDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoaSwiaW50IiwwKQ0KDQoJCUlmIGk9MCBUaGVuIFJlc3BvbnNlLkVuZA0KDQoJCVJlc3BvbnNlLkNsZWFyDQoJCVJlc3BvbnNlLldyaXRlICJkb2N1bWVudC53cml0ZSgiIiIgJiBDU3RyKExvYWRDb3VudEluZm8oaSkrMSkgJiAiIiIpIg0KDQoJCUNhbGwgVXBkYXRlQ291bnRJbmZvKGkpDQoNCgkJUmVzcG9uc2UuRW5kDQoNCg0KCUVsc2VJZiBmPSJiYXRjaCIgVGhlbg0KDQoJCURpbSBzdHJQYXJhLGFyeVBhcmEsYXJ5RWxlbWVudA0KCQlEaW0gayxsDQoNCgkJcz1SZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJ2aWV3IikNCgkJSWYgczw+IiIgVGhlbg0KCQkJc3RyUGFyYT1zDQoJCQlhcnlQYXJhPVNwbGl0KHN0clBhcmEsIiwiKQ0KDQoJCQlGb3IgbD0wIFRvIFVCb3VuZChhcnlQYXJhKS0xDQoJCQkJYXJ5RWxlbWVudD1TcGxpdChhcnlQYXJhKGwpLCI9IikNCgkJCQlSZXNwb25zZS5Xcml0ZSAidHJ5e2V2YWwoIiIkKFwiIiMiJiBhcnlFbGVtZW50KDApICYiXCIiKS5odG1sKFwiIiImIExvYWRDb3VudEluZm8oYXJ5RWxlbWVudCgxKSkgJiJcIiIpIiIpO31jYXRjaChlKXt9Ig0KCQkJTmV4dA0KCQkJJ0xvYWRTaWRlYmFyDQoJCUVuZCBJZg0KCQlzPVJlcXVlc3QuUXVlcnlTdHJpbmcoImluY3VsZGUiKQ0KCQlJZiBzPD4iIiBUaGVuDQoJCQlzdHJQYXJhPXMNCgkJCWFyeVBhcmE9U3BsaXQoc3RyUGFyYSwiLCIpDQoNCgkJCUZvciBsPTAgVG8gVUJvdW5kKGFyeVBhcmEpLTENCgkJCQlhcnlFbGVtZW50PVNwbGl0KGFyeVBhcmEobCksIj0iKQ0KCQkJCVJlc3BvbnNlLldyaXRlICJ0cnl7ZXZhbCgiIiAgeyQoXCIiIyImIGFyeUVsZW1lbnQoMCkgJiJcIiIpLnJlcGxhY2VXaXRoKFwiIiImIExvYWRGaWxlSW5mbyhhcnlFbGVtZW50KDEpKSAmIlwiIik7fSAgIiIpO31jYXRjaChlKXt9Ig0KCQkJTmV4dA0KCQkJJ0xvYWRTaWRlYmFyDQoJCQkNCgkJRW5kIElmDQoNCgkJcz1SZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJjb3VudCIpDQoJCUlmIHM8PiIiIFRoZW4NCgkJCXN0clBhcmE9cw0KCQkJYXJ5UGFyYT1TcGxpdChzdHJQYXJhLCIsIikNCg0KCQkJRm9yIGw9MCBUbyBVQm91bmQoYXJ5UGFyYSktMQ0KCQkJCWFyeUVsZW1lbnQ9U3BsaXQoYXJ5UGFyYShsKSwiPSIpDQoJCQkJUmVzcG9uc2UuV3JpdGUgInRyeXtldmFsKCIiJChcIiIjIiYgYXJ5RWxlbWVudCgwKSAmIlwiIikuaHRtbChcIiIiJiBDU3RyKExvYWRDb3VudEluZm8oYXJ5RWxlbWVudCgxKSkrMSkgJiJcIiIpIiIpO31jYXRjaChlKXt9Ig0KCQkJCUNhbGwgVXBkYXRlQ291bnRJbmZvKGFyeUVsZW1lbnQoMSkpDQoJCQlOZXh0DQoJCQ0KCQlFbmQgSWYNCgkJTG9hZFNpZGViYXINCg0KCUVsc2VJZiBmPSJhdXRvaW5mbyIgVGhlbg0KDQoJCUNhbGwgT3BlbkNvbm5lY3QoKQ0KDQoJCVNldCBCbG9nVXNlciA9IE5ldyBUVXNlcg0KCQlJZiBCbG9nVXNlci5WZXJpZnkoKT1UcnVlIFRoZW4NCgkJCVJlc3BvbnNlLldyaXRlICJ0cnl7JCgnI2lucE5hbWUnKS52YWwoJyImQmxvZ1VzZXIuTmFtZSYiJyk7fWNhdGNoKGUpe30iDQoJCQlSZXNwb25zZS5Xcml0ZSAidHJ5eyQoJyNpbnBFbWFpbCcpLnZhbCgnIiZCbG9nVXNlci5FbWFpbCYiJyk7fWNhdGNoKGUpe30iDQoJCQlSZXNwb25zZS5Xcml0ZSAidHJ5eyQoJyNpbnBIb21lUGFnZScpLnZhbCgnIiZCbG9nVXNlci5Ib21lUGFnZSYiJyk7fWNhdGNoKGUpe30iDQoJCQlSZXNwb25zZS5Xcml0ZSAidHJ5eyQoJy5jcC1sb2dpbicpLmJlZm9yZSgnPHNwYW4gY2xhc3M9XCdjcC1oZWxsb1wnIHN0eWxlPVwnbGluZS1oZWlnaHQ6Mi41ZW07XCc+IiZSZXBsYWNlKFpDX01TRzAyMywiJXMiLEJsb2dVc2VyLkZpcnN0TmFtZSkgJiAiICgiICYgWlZBX1VzZXJfTGV2ZWxfTmFtZShCbG9nVXNlci5MZXZlbCkmIik8L3NwYW4+PGJyLz4nKTsiDQoJCQlSZXNwb25zZS5Xcml0ZSAiJCgnLmNwLWxvZ2luJykuZmluZCgnYScpLmh0bWwoJ1siJlpDX01TRzI0OCYiXScpOyINCgkJCUlmIENoZWNrUmlnaHRzKCJBcnRpY2xlRWR0Iik9VHJ1ZSBUaGVuDQoJCQkJUmVzcG9uc2UuV3JpdGUgIiQoJy5jcC12cnMnKS5maW5kKCdhJykuaHRtbCgnWyImWkNfTVNHMTY4JiJdJyk7JCgnLmNwLXZycycpLmZpbmQoJ2EnKS5hdHRyKCdocmVmJywnIiZCbG9nSG9zdCYiemJfc3lzdGVtL2NtZC5hc3A/YWN0PUFydGljbGVFZHQmd2ViZWRpdD11ZWRpdG9yJyk7Ig0KCQkJRW5kIElGDQoJCQlSZXNwb25zZS5Xcml0ZSAifWNhdGNoKGUpe30iDQoJCUVuZCBJZg0KCQkNCgkJQ2FsbCBDbG9zZUNvbm5lY3QoKQ0KDQoJRW5kIElmIA0KCQ0KCVJlc3BvbnNlLkVuZA0KDQpFbmQgSWYNCg0KDQonLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCg0KDQpmPVJlcXVlc3QuUXVlcnlTdHJpbmcoImluY2x1ZGUiKQ0KSWYgZjw+IiIgVGhlbg0KDQoJUmVzcG9uc2UuQ2xlYXINCglSZXNwb25zZS5Xcml0ZSAiZG9jdW1lbnQud3JpdGUoIiIiICYgTG9hZEZpbGVJbmZvKGYpICYgIiIiKSINCglSZXNwb25zZS5FbmQNCg0KRW5kIElmDQoNCg0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQoNCg0KZj1SZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJkYXRlIikNCklmIGY8PiIiIFRoZW4NCg0KCUNhbGwgU3lzdGVtX0luaXRpYWxpemUoKQ0KDQoJZj1SZXF1ZXN0LlF1ZXJ5U3RyaW5nKCJkYXRlIikNCg0KCUlmIGY9Im5vdyIgVGhlbiBmPVllYXIoRGF0ZSkmIi0iJk1vbnRoKERhdGUpDQoNCglzPVJlcGxhY2UoTWFrZUNhbGVuZGFyKGYpLCI8I1pDX0JMT0dfSE9TVCM+IixCbG9nSG9zdCkNCg0KCVJlc3BvbnNlLkNsZWFyDQoJUmVzcG9uc2UuV3JpdGUgImRvY3VtZW50LndyaXRlKCIiIiAmIFJlcGxhY2UocywiIiIiLCJcIiIiKSAmICIiIikiDQoJUmVzcG9uc2UuRW5kDQoNCglDYWxsIFN5c3RlbV9UZXJtaW5hdGUoKQ0KDQpFbmQgSWYNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KDQoNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgDQonIOi+k+WFpe+8miAgICANCicg6L+U5Zue77yaICAgIA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gUmVhZENvdW50SW5mbygpDQoNCglDYWxsIE9wZW5Db25uZWN0KCkNCg0KCURpbSBvYmpSUyxpLGosb2JqRFMNCglTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgW2xvZ19JRF0sW2xvZ19WaWV3TnVtc10gRlJPTSBbYmxvZ19BcnRpY2xlXSBPUkRFUiBCWSBbbG9nX0lEXSBBU0MiKQ0KCQlJZiAobm90IG9ialJTLmJvZikgQW5kIChub3Qgb2JqUlMuZW9mKSBUaGVuDQoJCQlvYmpEUz1vYmpSUy5HZXRSb3dzDQoJCUVuZCBJZg0KCQlvYmpSUy5DbG9zZQ0KCVNldCBvYmpSUz1Ob3RoaW5nDQoNCglDYWxsIENsb3NlQ29ubmVjdCgpDQoNCglJZiBJc051bGwob2JqRFMpIG9yIElzRW1wdHkob2JqRFMpIFRoZW4gUmVhZENvdW50SW5mbz1FbXB0eSA6IEV4aXQgRnVuY3Rpb24NCg0KCURpbSBhcnlBcnRpY2xlQ291bnQoKQ0KCVJlZGltIFByZXNlcnZlIGFyeUFydGljbGVDb3VudChvYmpEUygwLFVCb3VuZChvYmpEUywgMikpKQ0KCQ0KCUZvciBpID0gMCBUbyBVQm91bmQob2JqRFMsIDIpDQoJCWFyeUFydGljbGVDb3VudChvYmpEUygwLGkpKT1vYmpEUygxLGkpDQoJTmV4dA0KDQoJQXBwbGljYXRpb24uTG9jaw0KCUFwcGxpY2F0aW9uKFpDX0JMT0dfQ0xTSUQmIkNBQ0hFX0FSVElDTEVfVklFV0NPVU5UIik9YXJ5QXJ0aWNsZUNvdW50DQoJQXBwbGljYXRpb24uVW5Mb2NrDQoNCglSZWFkQ291bnRJbmZvPWFyeUFydGljbGVDb3VudA0KDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgDQonIOi+k+WFpe+8miAgICANCicg6L+U5Zue77yaICAgIA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gVXBkYXRlQ291bnRJbmZvKGlkKQ0KDQoJQ2FsbCBDaGVja1BhcmFtZXRlcihpZCwiaW50IiwwKQ0KDQoJQ2FsbCBPcGVuQ29ubmVjdCgpDQoNCglvYmpDb25uLkV4ZWN1dGUoIlVQREFURSBbYmxvZ19BcnRpY2xlXSBTRVQgW2xvZ19WaWV3TnVtc109W2xvZ19WaWV3TnVtc10rMSBXSEVSRSBbbG9nX0lEXSA9IiAmIGlkKQ0KDQoJQ2FsbCBDbG9zZUNvbm5lY3QoKQ0KDQoJRGltIGFyeUFydGljbGVDb3VudA0KCUFwcGxpY2F0aW9uLkxvY2sNCglhcnlBcnRpY2xlQ291bnQ9QXBwbGljYXRpb24oWkNfQkxPR19DTFNJRCYiQ0FDSEVfQVJUSUNMRV9WSUVXQ09VTlQiKQ0KCWFyeUFydGljbGVDb3VudChpZCk9YXJ5QXJ0aWNsZUNvdW50KGlkKSsxDQoJQXBwbGljYXRpb24oWkNfQkxPR19DTFNJRCYiQ0FDSEVfQVJUSUNMRV9WSUVXQ09VTlQiKT1hcnlBcnRpY2xlQ291bnQNCglBcHBsaWNhdGlvbi5VbkxvY2sNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIA0KJyDovpPlhaXvvJogICAgDQonIOi/lOWbnu+8miAgICANCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIExvYWRDb3VudEluZm8oaWQpDQoNCglEaW0gYXJ5QXJ0aWNsZUNvdW50DQoNCglBcHBsaWNhdGlvbi5Mb2NrDQoJYXJ5QXJ0aWNsZUNvdW50PUFwcGxpY2F0aW9uKFpDX0JMT0dfQ0xTSUQmIkNBQ0hFX0FSVElDTEVfVklFV0NPVU5UIikNCglBcHBsaWNhdGlvbi5VbkxvY2sNCg0KCUlmIElzRW1wdHkoYXJ5QXJ0aWNsZUNvdW50KSBUaGVuDQoJCWFyeUFydGljbGVDb3VudD1SZWFkQ291bnRJbmZvDQoJRW5kIElmDQoNCglMb2FkQ291bnRJbmZvPWFyeUFydGljbGVDb3VudChpZCkNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIA0KJyDovpPlhaXvvJogICAgDQonIOi/lOWbnu+8miAgICANCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIExvYWRGaWxlSW5mbyhuYW1lKQ0KDQoJRGltIHN0ckNvbnRlbnQNCglEaW0gb2JqU3RyZWFtDQoNCglEaW0gaSxqDQoNCglEaW0gYXJ5VGVtcGxhdGVUYWdzTmFtZQ0KCURpbSBhcnlUZW1wbGF0ZVRhZ3NWYWx1ZQ0KDQoJQXBwbGljYXRpb24uTG9jaw0KCWFyeVRlbXBsYXRlVGFnc05hbWU9QXBwbGljYXRpb24oWkNfQkxPR19DTFNJRCAmICJUZW1wbGF0ZVRhZ3NOYW1lIikNCglhcnlUZW1wbGF0ZVRhZ3NWYWx1ZT1BcHBsaWNhdGlvbihaQ19CTE9HX0NMU0lEICYgIlRlbXBsYXRlVGFnc1ZhbHVlIikNCglBcHBsaWNhdGlvbi5VbkxvY2sNCg0KCUZvciBpPTAgVG8gVUJvdW5kKGFyeVRlbXBsYXRlVGFnc05hbWUpDQoJCUlmIGFyeVRlbXBsYXRlVGFnc05hbWUoaSk9IlpDX0JMT0dfSE9TVCIgVGhlbg0KCQkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoaSk9QmxvZ0hvc3QNCgkJRW5kIElmIA0KCU5leHQNCg0KCWo9VUJvdW5kKGFyeVRlbXBsYXRlVGFnc05hbWUpDQoNCglGb3IgaT0xIHRvIGoNCgkJSWYgYXJ5VGVtcGxhdGVUYWdzTmFtZShpKT0iVEVNUExBVEVfSU5DTFVERV8iICYgVUNhc2UobmFtZSkgVGhlbg0KCQkJc3RyQ29udGVudD1hcnlUZW1wbGF0ZVRhZ3NWYWx1ZShpKQ0KCQkJRXhpdCBGb3INCgkJRWxzZUlmIGFyeVRlbXBsYXRlVGFnc05hbWUoaSk9IkNBQ0hFX0lOQ0xVREVfIiAmIFVDYXNlKG5hbWUpIFRoZW4NCgkJCXN0ckNvbnRlbnQ9YXJ5VGVtcGxhdGVUYWdzVmFsdWUoaSkNCgkJRW5kIElmDQoJTmV4dA0KDQoJaj1VQm91bmQoYXJ5VGVtcGxhdGVUYWdzTmFtZSkNCg0KCUZvciBpPTEgdG8gag0KCQlzdHJDb250ZW50PVJlcGxhY2Uoc3RyQ29udGVudCwiPCMiICYgYXJ5VGVtcGxhdGVUYWdzTmFtZShpKSAmICIjPiIsYXJ5VGVtcGxhdGVUYWdzVmFsdWUoaSkpDQoJTmV4dA0KDQoJc3RyQ29udGVudD0gUmVwbGFjZShzdHJDb250ZW50LCJcIiwiXFwiKQ0KCXN0ckNvbnRlbnQ9IFJlcGxhY2Uoc3RyQ29udGVudCwiLyIsIlwvIikNCglzdHJDb250ZW50PSBSZXBsYWNlKHN0ckNvbnRlbnQsIiIiIiwiXFxcIiIiKQ0KCXN0ckNvbnRlbnQ9IFJlcGxhY2Uoc3RyQ29udGVudCx2YkNyTGYsIiIpDQoJc3RyQ29udGVudD0gUmVwbGFjZShzdHJDb250ZW50LHZiTGYsIiIpDQoNCglMb2FkRmlsZUluZm89c3RyQ29udGVudA0KDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KRGltIGlzU2lkZWJhckxvYWQNCmlzU2lkZWJhckxvYWQ9RmFsc2UNCkZ1bmN0aW9uIExvYWRTaWRlYmFyKCkNCglJZiBpc1NpZGViYXJMb2FkIFRoZW4gRXhpdCBGdW5jdGlvbg0KCVJlc3BvbnNlLldyaXRlICJ0cnl7c2lkZWJhcmxvYWRlZC5leGVjdXRlKCl9Y2F0Y2goZSl7fSINCglMb2FkU2lkZWJhcj1UcnVlDQoJaXNTaWRlYmFyTG9hZD1UcnVlDQpFbmQgRnVuY3Rpb24NCiU+</file>
	<file name='zb_system\FUNCTION\c_system_base.asp' crc32='B8EDF7A2'  dt:dt='bin.base64'></file>
	<file name='zb_system\FUNCTION\c_system_event.asp' crc32='2484ABA'  dt:dt='bin.base64'>77u/PCUNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQonLy8gICAgICAgICAgICAgIFotQmxvZw0KJy8vIOS9nCAgICDogIU6ICAgIOacseeFiih6eC5hc2QpDQonLy8g54mI5p2D5omA5pyJOiAgICBSYWluYm93U29mdCBTdHVkaW8NCicvLyDmioDmnK/mlK/mjIE6ICAgIHJhaW5ib3dzb2Z0QDE2My5jb20NCicvLyDnqIvluo/lkI3np7A6DQonLy8g56iL5bqP54mI5pysOg0KJy8vIOWNleWFg+WQjeensDogICAgY19zeXN0ZW1fZXZlbnQuYXNwDQonLy8g5byA5aeL5pe26Ze0OiAgICAyMDA1LjAyLjExDQonLy8g5pyA5ZCO5L+u5pS5Og0KJy8vIOWkhyAgICDms6g6DQonLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KDQoNCg0KDQoNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAg55So5oi355m76ZmGDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpQdWJsaWMgRnVuY3Rpb24gTG9naW4oKQ0KDQoJJ0lmIENoZWNrVmVyaWZ5TnVtYmVyKFJlcXVlc3QuRm9ybSgiZWR0Q2hlY2tPdXQiKSk9RmFsc2UgVGhlbiBDYWxsIFNob3dFcnJvcigzOCkNCg0KCUJsb2dVc2VyLkxvZ2luVHlwZT0iU2VsZiINCglCbG9nVXNlci5OYW1lPVJlcXVlc3QuRm9ybSgidXNlcm5hbWUiKQ0KCUJsb2dVc2VyLlBhc3NXb3JkPUJsb2dVc2VyLkdldFBhc3N3b3JkQnlNRDUoUmVxdWVzdC5Gb3JtKCJwYXNzd29yZCIpKQ0KDQoJSWYgQmxvZ1VzZXIuVmVyaWZ5PVRydWUgVGhlbg0KDQoJCVJlc3BvbnNlLkNvb2tpZXMoInBhc3N3b3JkIik9QmxvZ1VzZXIuUGFzc1dvcmQNCgkJSWYgUmVxdWVzdC5Gb3JtKCJzYXZlZGF0ZSIpPD4wIFRoZW4NCgkJCVJlc3BvbnNlLkNvb2tpZXMoInBhc3N3b3JkIikuRXhwaXJlcyA9IERhdGVBZGQoImQiLCBSZXF1ZXN0LkZvcm0oInNhdmVkYXRlIiksIG5vdykNCgkJRW5kIElmDQoJCVJlc3BvbnNlLkNvb2tpZXMoInBhc3N3b3JkIikuUGF0aCA9IENvb2tpZXNQYXRoKCkNCg0KCQlMb2dpbj1UcnVlDQoNCg0KCUVuZCBJZg0KDQoJUmVzcG9uc2UuQ29va2llcygidXNlcm5hbWUiKT1lc2NhcGUoUmVxdWVzdC5Gb3JtKCJ1c2VybmFtZSIpKQ0KCUlmIFJlcXVlc3QuRm9ybSgic2F2ZWRhdGUiKTw+MCBUaGVuDQoJCVJlc3BvbnNlLkNvb2tpZXMoInVzZXJuYW1lIikuRXhwaXJlcyA9IERhdGVBZGQoImQiLCBSZXF1ZXN0LkZvcm0oInNhdmVkYXRlIiksIG5vdykNCglFbmQgSWYNCglSZXNwb25zZS5Db29raWVzKCJ1c2VybmFtZSIpLlBhdGggPSBDb29raWVzUGF0aCgpDQoNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIOeUqOaIt+mAgOWHug0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KUHVibGljIEZ1bmN0aW9uIExvZ291dCgpDQoNCglSZXNwb25zZS5Db29raWVzKCJ1c2VybmFtZSIpPSIiDQoJUmVzcG9uc2UuQ29va2llcygicGFzc3dvcmQiKT0iIg0KCVJlc3BvbnNlLkNvb2tpZXMoInVzZXJuYW1lIikuUGF0aCA9IENvb2tpZXNQYXRoKCkNCglSZXNwb25zZS5Db29raWVzKCJwYXNzd29yZCIpLlBhdGggPSBDb29raWVzUGF0aCgpDQoJDQoJTG9nb3V0PVRydWUNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAg5paH5Lu25LiK5LygDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBVcGxvYWRGaWxlKGJvbEF1dG9OYW1lKQ0KDQoJRGltIG9ialVwTG9hZEZpbGUNCglTZXQgb2JqVXBMb2FkRmlsZT1OZXcgVFVwTG9hZEZpbGUNCg0KCW9ialVwTG9hZEZpbGUuQXV0aG9ySUQ9QmxvZ1VzZXIuSUQNCglvYmpVcExvYWRGaWxlLkF1dG9OYW1lPWJvbEF1dG9OYW1lDQoNCglJZiBvYmpVcExvYWRGaWxlLlVwTG9hZCgpIFRoZW4NCg0KCQlVcGxvYWRGaWxlPVRydWUNCg0KCUVuZCBJZg0KDQoJU2V0IG9ialVwTG9hZEZpbGU9Tm90aGluZw0KDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgRm9ybSBvZiBTZW5kIEZpbGUNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIFNlbmRGaWxlKCkNCg0KCVJlc3BvbnNlLldyaXRlICI8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIiItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIiICIiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCIiPjxodG1sPjxoZWFkPjxtZXRhIGh0dHAtZXF1aXY9IiJDb250ZW50LVR5cGUiIiBjb250ZW50PSIidGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04IiIvPjxtZXRhIGh0dHAtZXF1aXY9IiJDb250ZW50LUxhbmd1YWdlIiIgY29udGVudD0iInpoLWNuIiIgLz48bGluayByZWw9IiJzdHlsZXNoZWV0IiIgcmV2PSIic3R5bGVzaGVldCIiIGhyZWY9IiJDU1MvYWRtaW4uY3NzIiIgdHlwZT0iInRleHQvY3NzIiIgbWVkaWE9IiJzY3JlZW4iIiAvPjxzY3JpcHQgc3JjPSIic2NyaXB0L2NvbW1vbi5qcyIiIHR5cGU9IiJ0ZXh0L2phdmFzY3JpcHQiIj48L3NjcmlwdD48L2hlYWQ+PGJvZHk+Ig0KDQoJUmVzcG9uc2UuV3JpdGUgIjxmb3JtIGJvcmRlcj0iIjEiIiBuYW1lPSIiZWRpdCIiIGlkPSIiZWRpdCIiIG1ldGhvZD0iInBvc3QiIiBlbmN0eXBlPSIibXVsdGlwYXJ0L2Zvcm0tZGF0YSIiIGFjdGlvbj0iIiImIEJsb2dIb3N0ICYiY21kLmFzcD9hY3Q9RmlsZVVwbG9hZCZyZWxvYWQ9MSIiPiINCglSZXNwb25zZS5Xcml0ZSAiPHA+IiYgWkNfTVNHMTA4ICYiOiAiDQoJUmVzcG9uc2UuV3JpdGUgIjxpbnB1dCB0eXBlPSIiZmlsZSIiIGlkPSIiZWR0RmlsZUxvYWQiIiBuYW1lPSIiZWR0RmlsZUxvYWQiIiBzaXplPSIiMjAiIj4gIDxpbnB1dCB0eXBlPSIic3VibWl0IiIgY2xhc3M9IiJidXR0b24iIiB2YWx1ZT0iIiImIFpDX01TRzA4NyAmIiIiIG5hbWU9IiJCMSIiIG9uY2xpY2s9J2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCIiZWRpdCIiKS5hY3Rpb249ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIiJlZGl0IiIpLmFjdGlvbisiIiZmaWxlbmFtZT0iIitlc2NhcGUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIiJlZHRGaWxlTG9hZCIiKS52YWx1ZSknIC8+IDxpbnB1dCBjbGFzcz0iImJ1dHRvbiIiIHR5cGU9IiJyZXNldCIiIHZhbHVlPSIiIiYgWkNfTVNHMDg4ICYiIiIgbmFtZT0iIkIyIiIgLz4iDQoJUmVzcG9uc2UuV3JpdGUgIiZuYnNwOzxpbnB1dCB0eXBlPSIiY2hlY2tib3giIiBvbmNsaWNrPSdpZih0aGlzLmNoZWNrZWQ9PXRydWUpe2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCIiZWRpdCIiKS5hY3Rpb249ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIiJlZGl0IiIpLmFjdGlvbisiIiZhdXRvbmFtZT0xIiI7fWVsc2V7ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIiJlZGl0IiIpLmFjdGlvbj0iIiImIEJsb2dIb3N0ICYiY21kLmFzcD9hY3Q9RmlsZVVwbG9hZCZyZWxvYWQ9MSIiO307U2V0Q29va2llKCIiY2hrQXV0b0ZpbGVOYW1lIiIsdGhpcy5jaGVja2VkLDM2NSk7JyBpZD0iImNoa0F1dG9OYW1lIiIgaWQ9IiJjaGtBdXRvTmFtZSIiLz48bGFiZWwgZm9yPSIiY2hrQXV0b05hbWUiIj4iJiBaQ19NU0cxMzEgJiI8L2xhYmVsPjwvcD48L2Zvcm0+Ig0KDQoJUmVzcG9uc2UuV3JpdGUgIjxzY3JpcHQgdHlwZT0iInRleHQvamF2YXNjcmlwdCIiPmlmKEdldENvb2tpZSgiImNoa0F1dG9GaWxlTmFtZSIiKT09IiJ0cnVlIiIpe2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCIiY2hrQXV0b05hbWUiIikuY2hlY2tlZD10cnVlO2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCIiZWRpdCIiKS5hY3Rpb249ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIiJlZGl0IiIpLmFjdGlvbisiIiZhdXRvbmFtZT0xIiI7fTs8L3NjcmlwdD48L2JvZHk+PC9odG1sPiINCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgIOaWh+S7tuWIoOmZpA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gRGVsRmlsZShpbnRJRCkNCg0KCURpbSBvYmpVcExvYWRGaWxlDQoJU2V0IG9ialVwTG9hZEZpbGU9TmV3IFRVcExvYWRGaWxlDQoNCglJZiBvYmpVcExvYWRGaWxlLkxvYWRJbmZvQnlJRChpbnRJRCkgVGhlbg0KDQoJCUlmIChvYmpVcExvYWRGaWxlLkF1dGhvcklEPUJsb2dVc2VyLklEKSBPciAoQ2hlY2tSaWdodHMoIlJvb3QiKT1UcnVlKSAgT3IgKENoZWNrUmlnaHRzKCJGaWxlQWxsIik9VHJ1ZSkgVGhlbg0KCQkJSWYgb2JqVXBMb2FkRmlsZS5EZWwgVGhlbiBEZWxGaWxlPVRydWUNCgkJRW5kIElmDQoNCglFbHNlDQoJCUV4aXQgRnVuY3Rpb24NCglFbmQgSWYNCg0KCVNldCBvYmpVcExvYWRGaWxlPU5vdGhpbmcNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgUG9zdCBBcnRpY2xlDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBQb3N0QXJ0aWNsZSgpDQoNCglEaW0gcyxpLHQsaw0KCURpbSBzdHJUYWcsc3RyTWV0YQ0KDQoJSWYgUmVxdWVzdC5Gb3JtKCJlZHRJRCIpPD4iMCIgVGhlbg0KCQlEaW0gb2JqVGVzdEFydGljbGUNCgkJU2V0IG9ialRlc3RBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KCQlJZiBvYmpUZXN0QXJ0aWNsZS5Mb2FkSW5mb2J5SUQoUmVxdWVzdC5Gb3JtKCJlZHRJRCIpKSBUaGVuDQoJCQlJZiBOb3QoKG9ialRlc3RBcnRpY2xlLkF1dGhvcklEPUJsb2dVc2VyLklEKSBPciAoQ2hlY2tSaWdodHMoIlJvb3QiKT1UcnVlKSBPciAoQ2hlY2tSaWdodHMoIkFydGljbGVBbGwiKT1UcnVlKSkgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCQlzdHJUYWc9b2JqVGVzdEFydGljbGUuVGFnDQoJCQlzdHJNZXRhPW9ialRlc3RBcnRpY2xlLk1ldGFTdHJpbmcNCgkJRWxzZQ0KCQkJQ2FsbCBTaG93RXJyb3IoOSkNCgkJRW5kIElmDQoJRW5kIElmDQoNCglEaW0gb2JqQXJ0aWNsZQ0KCVNldCBvYmpBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KCW9iakFydGljbGUuSUQ9UmVxdWVzdC5Gb3JtKCJlZHRJRCIpDQoJb2JqQXJ0aWNsZS5DYXRlSUQ9UmVxdWVzdC5Gb3JtKCJlZHRDYXRlSUQiKQ0KCW9iakFydGljbGUuQXV0aG9ySUQ9SUlmKENoZWNrUmlnaHRzKCJSb290IikgT3IgQ2hlY2tSaWdodHMoIkFydGljbGVBbGwiKSxSZXF1ZXN0LkZvcm0oImVkdEF1dGhvcklEIiksQmxvZ1VzZXIuSUQpDQoJb2JqQXJ0aWNsZS5MZXZlbD1SZXF1ZXN0LkZvcm0oImVkdExldmVsIikNCicJb2JqQXJ0aWNsZS5Qb3N0VGltZT1SZXF1ZXN0LkZvcm0oImVkdFllYXIiKSAmICItIiAmIFJlcXVlc3QuRm9ybSgiZWR0TW9udGgiKSAmICItIiAmIFJlcXVlc3QuRm9ybSgiZWR0RGF5IikgJiAiICIgJiAgUmVxdWVzdC5Gb3JtKCJlZHRUaW1lIikNCglvYmpBcnRpY2xlLlBvc3RUaW1lPVJlcXVlc3QuRm9ybSgiZWR0RGF0ZVRpbWUiKQ0KCW9iakFydGljbGUuVGl0bGU9UmVxdWVzdC5Gb3JtKCJlZHRUaXRsZSIpDQoJb2JqQXJ0aWNsZS5UYWc9UGFyc2VUYWcoUmVxdWVzdC5Gb3JtKCJlZHRUYWciKSkNCglvYmpBcnRpY2xlLkFsaWFzPVJlcXVlc3QuRm9ybSgiZWR0QWxpYXMiKQ0KCW9iakFydGljbGUuSXN0b3A9SUlmKENoZWNrUmlnaHRzKCJSb290IiksUmVxdWVzdC5Gb3JtKCJlZHRJc3RvcCIpLEZhbHNlKQ0KCW9iakFydGljbGUuVGVtcGxhdGVOYW1lPVJlcXVlc3QuRm9ybSgiZWR0VGVtcGxhdGUiKQ0KCW9iakFydGljbGUuRlR5cGU9Q0xuZyhSZXF1ZXN0LkZvcm0oImVkdEZUeXBlIikpDQoNCglvYmpBcnRpY2xlLkludHJvPUlJZihaQ19JU1dBUCxUcmFuc2ZlckhUTUwoUmVxdWVzdC5Gb3JtKCJ0eGFJbnRybyIpLCJbbW9iaWxlcmVxdWVzdF0iKSxSZXF1ZXN0LkZvcm0oInR4YUludHJvIikpDQoNCglvYmpBcnRpY2xlLkNvbnRlbnQ9SUlmKFpDX0lTV0FQLFRyYW5zZmVySFRNTChSZXF1ZXN0LkZvcm0oInR4YUNvbnRlbnQiKSwiW21vYmlsZXJlcXVlc3RdIiksUmVxdWVzdC5Gb3JtKCJ0eGFDb250ZW50IikpDQoNCglJZiBvYmpBcnRpY2xlLkZUeXBlPVpDX1BPU1RfVFlQRV9BUlRJQ0xFIFRoZW4NCgkJSWYgSW5TdHIob2JqQXJ0aWNsZS5Db250ZW50LCI8aHIgY2xhc3M9IiJtb3JlIiIgLz4iKT4wIFRoZW4NCgkJCXM9b2JqQXJ0aWNsZS5Db250ZW50DQoJCQlpPUluU3RyKHMsIjxociBjbGFzcz0iIm1vcmUiIiAvPiIpDQoJCQlzPUxlZnQocyxpLTEpDQoJCQlvYmpBcnRpY2xlLkludHJvPWNsb3NlSFRNTChzKQ0KCQkJb2JqQXJ0aWNsZS5Db250ZW50PVJlcGxhY2Uob2JqQXJ0aWNsZS5Db250ZW50LCI8aHIgY2xhc3M9IiJtb3JlIiIgLz4iLCI8IS0tbW9yZS0tPiIsMSwxKQ0KCQlFbmQgSWYNCg0KCQlJZiBvYmpBcnRpY2xlLkludHJvPSIiIFRoZW4NCgkJCXM9b2JqQXJ0aWNsZS5Db250ZW50DQoJCQlEaW0gYXJ5SW50cm8NCgkJCWFyeUludHJvPVNwbGl0KHMsIjwvcD4iKQ0KCQkJRm9yIGkgPSAwIFRvIFVCb3VuZChhcnlJbnRybykNCgkJCQlJZiBUcmltKGFyeUludHJvKGkpKTw+IiIgVGhlbg0KCQkJCQl0PXQgJiBhcnlJbnRybyhpKSAmICBJSWYoSW5TdHIoYXJ5SW50cm8oaSksIjxwPiIpPjAsIjwvcD4iLCIiKQ0KCQkJCUVuZCBJZg0KCQkJCUlmIExlbih0KT5aQ19BUlRJQ0xFX0VYQ0VSUFRfTUFYIFRoZW4gRXhpdCBmb3INCgkJCU5leHQgDQoJCQlvYmpBcnRpY2xlLkludHJvPWNsb3NlSFRNTCh0KQ0KCQlFbmQgSWYNCglFbHNlSWYgb2JqQXJ0aWNsZS5GVHlwZT1aQ19QT1NUX1RZUEVfUEFHRSBUaGVuDQoJCUlmIENoZWNrUmlnaHRzKCJSb290Iik9RmFsc2UgQW5kIENoZWNrUmlnaHRzKCJBcnRpY2xlQWxsIik9RmFsc2UgVGhlbiBDYWxsIFNob3dFcnJvcig2KQ0KCUVuZCBJZg0KDQoJb2JqQXJ0aWNsZS5NZXRhU3RyaW5nPXN0ck1ldGENCglDYWxsIEdldE1ldGFWYWx1ZXdpdGhGb3JtKG9iakFydGljbGUpDQoNCgkn5o6l5Y+jDQoJQ2FsbCBGaWx0ZXJfUGx1Z2luX1Bvc3RBcnRpY2xlX0NvcmUob2JqQXJ0aWNsZSkNCg0KCUlmIG9iakFydGljbGUuUG9zdCBUaGVuDQoJCUNhbGwgU2NhblRhZ0NvdW50KHN0clRhZyAmIG9iakFydGljbGUuVGFnKQ0KCQlDYWxsIEJ1aWxkQXJ0aWNsZShvYmpBcnRpY2xlLklELFRydWUsVHJ1ZSkNCgkJSWYgb2JqQXJ0aWNsZS5GVHlwZT1aQ19QT1NUX1RZUEVfUEFHRSBUaGVuDQoJCQlJZiBSZXF1ZXN0LkZvcm0oImVkdEFkZE5hdkJhciIpPSJUcnVlIiBUaGVuDQoJCQkJQ2FsbCBBZGROYXZCYXIoInBhZ2UiLG9iakFydGljbGUuSUQsb2JqQXJ0aWNsZS5IdG1sVGl0bGUsb2JqQXJ0aWNsZS5IdG1sVXJsLCJbbW9kaWZdW2FkZF0iKQ0KCQkJRWxzZQ0KCQkJCUNhbGwgQWRkTmF2QmFyKCJwYWdlIixvYmpBcnRpY2xlLklELG9iakFydGljbGUuSHRtbFRpdGxlLG9iakFydGljbGUuSHRtbFVybCwiW21vZGlmXSIpDQoJCQlFbmQgSWYNCgkJRW5kIElmDQoJCVBvc3RBcnRpY2xlPVRydWUNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1Bvc3RBcnRpY2xlX1N1Y2NlZWQob2JqQXJ0aWNsZSkNCglFbmQgSWYNCg0KCVNldCBvYmpBcnRpY2xlPU5vdGhpbmcNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIERlbCBBcnRpY2xlDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBEZWxBcnRpY2xlKGludElEKQ0KDQoJRGltIHN0clRhZw0KDQoJSWYgaW50SUQ8PiIiIFRoZW4NCgkJRGltIG9ialRlc3RBcnRpY2xlDQoJCVNldCBvYmpUZXN0QXJ0aWNsZT1OZXcgVEFydGljbGUNCgkJSWYgb2JqVGVzdEFydGljbGUuTG9hZEluZm9ieUlEKGludElEKSBUaGVuDQoJCQlJZiBOb3QoKG9ialRlc3RBcnRpY2xlLkF1dGhvcklEPUJsb2dVc2VyLklEKSBPciAoQ2hlY2tSaWdodHMoIlJvb3QiKT1UcnVlKSBPciAoQ2hlY2tSaWdodHMoIkFydGljbGVBbGwiKT1UcnVlKSkgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCQlzdHJUYWc9b2JqVGVzdEFydGljbGUuVGFnDQoJCUVsc2UNCgkJCUNhbGwgU2hvd0Vycm9yKDkpDQoJCUVuZCBJZg0KCQlTZXQgb2JqVGVzdEFydGljbGU9Tm90aGluZw0KCUVuZCBJZg0KDQoJRGltIG9iakFydGljbGUNCglTZXQgb2JqQXJ0aWNsZT1OZXcgVEFydGljbGUNCg0KCUlmIG9iakFydGljbGUuTG9hZEluZm9CeUlEKGludElEKSBUaGVuDQoNCgkJSWYgb2JqQXJ0aWNsZS5EZWwgVGhlbiANCgkJCW9iakFydGljbGUuU3RhdGlzdGljDQoJCQlEZWxBcnRpY2xlPVRydWUNCgkJRW5kIElmIA0KCQlDYWxsIFNjYW5UYWdDb3VudChzdHJUYWcpDQoNCgkJQ2FsbCBCbG9nUmVCdWlsZF9Db21tZW50cw0KCQlDYWxsIEJsb2dSZUJ1aWxkX0RlZmF1bHQNCg0KCUVuZCBJZg0KDQoJU2V0IG9iakFydGljbGU9Tm90aGluZw0KDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgICBQb3N0IENhdGVnb3J5DQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBQb3N0Q2F0ZWdvcnkoKQ0KDQoJSWYgSW5zdHIoUmVxdWVzdC5TZXJ2ZXJWYXJpYWJsZXMoIkhUVFBfUkVGRVJFUiIpLCI/aWQ9MCIpPjAgVGhlbg0KDQoJCUNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfVU5DQVRFR09SSVpFRF9OQU1FIixSZXF1ZXN0LkZvcm0oImVkdE5hbWUiKSkNCgkJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19VTkNBVEVHT1JJWkVEX0FMSUFTIixSZXF1ZXN0LkZvcm0oImVkdEFsaWFzIikpDQoJCUJsb2dDb25maWcuU2F2ZQ0KCQlQb3N0Q2F0ZWdvcnk9VHJ1ZQ0KCQlFeGl0IEZ1bmN0aW9uDQoJCVJlc3BvbnNlLkVuZA0KCUVuZCBJZg0KDQoJRGltIG9iakNhdGVnb3J5DQoJU2V0IG9iakNhdGVnb3J5PU5ldyBUQ2F0ZWdvcnkNCglvYmpDYXRlZ29yeS5JRD1SZXF1ZXN0LkZvcm0oImVkdElEIikNCglvYmpDYXRlZ29yeS5OYW1lPVJlcXVlc3QuRm9ybSgiZWR0TmFtZSIpDQoJb2JqQ2F0ZWdvcnkuT3JkZXI9UmVxdWVzdC5Gb3JtKCJlZHRPcmRlciIpDQoJb2JqQ2F0ZWdvcnkuUGFyZW50SUQ9UmVxdWVzdC5Gb3JtKCJlZHRQYXJlSUQiKQ0KCW9iakNhdGVnb3J5LkFsaWFzPVJlcXVlc3QuRm9ybSgiZWR0QWxpYXMiKQ0KCW9iakNhdGVnb3J5LlRlbXBsYXRlTmFtZT1SZXF1ZXN0LkZvcm0oImVkdFRlbXBsYXRlIikNCglvYmpDYXRlZ29yeS5Mb2dUZW1wbGF0ZT1SZXF1ZXN0LkZvcm0oImVkdExvZ1RlbXBsYXRlIikNCg0KCUlmIENMbmcob2JqQ2F0ZWdvcnkuSUQpPjAgVGhlbiBvYmpDYXRlZ29yeS5NZXRhU3RyaW5nPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFtjYXRlX01ldGFdIEZST00gW2Jsb2dfQ2F0ZWdvcnldIFdIRVJFIFtjYXRlX0lEXT0iJkNMbmcob2JqQ2F0ZWdvcnkuSUQpKSgwKQ0KCUNhbGwgR2V0TWV0YVZhbHVld2l0aEZvcm0ob2JqQ2F0ZWdvcnkpDQoNCgkn5o6l5Y+jDQoJQ2FsbCBGaWx0ZXJfUGx1Z2luX1Bvc3RDYXRlZ29yeV9Db3JlKG9iakNhdGVnb3J5KQ0KDQoNCglJZiBvYmpDYXRlZ29yeS5Qb3N0IFRoZW4NCg0KCQlQb3N0Q2F0ZWdvcnk9VHJ1ZQ0KDQoJCUlmIFJlcXVlc3QuRm9ybSgiZWR0QWRkTmF2QmFyIik9IlRydWUiIFRoZW4NCgkJCUNhbGwgQWRkTmF2QmFyKCJjYXRlIixvYmpDYXRlZ29yeS5JRCxvYmpDYXRlZ29yeS5IdG1sTmFtZSxvYmpDYXRlZ29yeS5IdG1sVXJsLCJbbW9kaWZdW2FkZF0iKQ0KCQlFbHNlDQoJCQlDYWxsIEFkZE5hdkJhcigiY2F0ZSIsb2JqQ2F0ZWdvcnkuSUQsb2JqQ2F0ZWdvcnkuSHRtbE5hbWUsb2JqQ2F0ZWdvcnkuSHRtbFVybCwiW21vZGlmXSIpDQoJCUVuZCBJZg0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9Qb3N0Q2F0ZWdvcnlfU3VjY2VlZChvYmpDYXRlZ29yeSkNCg0KCUVuZCBJZg0KDQoJU2V0IG9iakNhdGVnb3J5PU5vdGhpbmcNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIERlbCBDYXRlZ29yeQ0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gRGVsQ2F0ZWdvcnkoaW50SUQpDQoNCglEaW0gb2JqQ2F0ZWdvcnkNCglTZXQgb2JqQ2F0ZWdvcnk9TmV3IFRDYXRlZ29yeQ0KDQoJSWYgb2JqQ2F0ZWdvcnkuTG9hZEluZm9ieUlEKGludElEKSBUaGVuDQoJCUlmIG9iakNhdGVnb3J5LkRlbCBUaGVuIERlbENhdGVnb3J5PVRydWUNCglFbmQgSWYNCg0KCVNldCBvYmpDYXRlZ29yeT1Ob3RoaW5nDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQoNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgUG9zdCBDb21tZW50DQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBQb3N0Q29tbWVudChzdHJLZXksaW50UmV2ZXJ0Q29tbWVudElEKQ0KDQoJQ2FsbCBHZXRVc2VyKCkNCg0KCUlmIElzRW1wdHkoUmVxdWVzdC5Gb3JtKCJpbnBBamF4IikpPUZhbHNlIFRoZW4NCgkJU2hvd0Vycm9yX0N1c3RvbT0iQ2FsbCBSZXNwb25kRXJyb3IoaWQsWlZBX0Vycm9yTXNnKGlkKSk6UmVzcG9uc2UuRW5kIg0KCUVuZCBJZg0KDQoJSWYgWkNfQ09NTUVOVF9UVVJOT0ZGIFRoZW4NCgkJQ2FsbCBTaG93RXJyb3IoNDApDQoJRW5kIElmDQoNCglJZiBaQ19DT01NRU5UX1ZFUklGWV9FTkFCTEUgVGhlbg0KCQlJZiBDaGVja1ZlcmlmeU51bWJlcihSZXF1ZXN0LkZvcm0oImlucFZlcmlmeSIpKT1GYWxzZSBUaGVuIENhbGwgU2hvd0Vycm9yKDM4KQ0KCUVuZCBJZg0KDQoJRGltIGlucElELGlucE5hbWUsaW5wQXJ0aWNsZSxpbnBFbWFpbCxpbnBIb21lUGFnZSxpbnBQYXJlbnRJRA0KDQoJaW5wSUQ9UmVxdWVzdC5Gb3JtKCJpbnBJRCIpDQoJaW5wTmFtZT1SZXF1ZXN0LkZvcm0oImlucE5hbWUiKQ0KCWlucEFydGljbGU9UmVxdWVzdC5Gb3JtKCJpbnBBcnRpY2xlIikNCglpbnBFbWFpbD1SZXF1ZXN0LkZvcm0oImlucEVtYWlsIikNCglpbnBIb21lUGFnZT1SZXF1ZXN0LkZvcm0oImlucEhvbWVQYWdlIikNCglpbnBQYXJlbnRJRD1pbnRSZXZlcnRDb21tZW50SUQNCgkNCglJZiBMZW4oaW5wQXJ0aWNsZSk9MCBPciBMZW4oaW5wQXJ0aWNsZSk+WkNfQ09OVEVOVF9NQVggVGhlbg0KCQlDYWxsICBTaG93RXJyb3IoNDYpDQoJRW5kIElmDQoNCglEaW0gb2JqQ29tbWVudA0KCURpbSBvYmpBcnRpY2xlDQoJRGltIHRtcENvdW50DQoNCglTZXQgb2JqQ29tbWVudD1OZXcgVENvbW1lbnQNCg0KDQoJSWYgQ0xuZyhpbnBQYXJlbnRJRCk+MCBUaGVuDQoJCQ0KCQlEaW0gaQ0KCQlpPUdldENvbW1lbnRGbG9vcihpbnBQYXJlbnRJRCkNCgkJSWYgaT5aQ19DT01NTkVUX01BWEZMT09SLTEgVGhlbglDYWxsIFNob3dFcnJvcig1MikNCg0KCUVuZCBJZg0KDQoNCglvYmpDb21tZW50LmxvZ19JRD1pbnBJRA0KCW9iakNvbW1lbnQuQXV0aG9ySUQ9QmxvZ1VzZXIuSUQNCglvYmpDb21tZW50LkF1dGhvcj1pbnBOYW1lDQoJb2JqQ29tbWVudC5Db250ZW50PWlucEFydGljbGUNCglvYmpDb21tZW50LkVtYWlsPWlucEVtYWlsDQoJb2JqQ29tbWVudC5Ib21lUGFnZT1pbnBIb21lUGFnZQ0KCW9iakNvbW1lbnQuUGFyZW50SUQ9aW5wUGFyZW50SUQNCg0KDQoJJ+aOpeWPow0KCUNhbGwgRmlsdGVyX1BsdWdpbl9Qb3N0Q29tbWVudF9Db3JlKG9iakNvbW1lbnQpDQoNCglJZiBvYmpDb21tZW50LklzVGhyb3c9VHJ1ZSBUaGVuIENhbGwgU2hvd0Vycm9yKDE0KQ0KDQoJSWYgb2JqQ29tbWVudC5BdXRob3JJRD4wIFRoZW4NCgkJb2JqQ29tbWVudC5BdXRob3IgID1Vc2VycyhvYmpDb21tZW50LkF1dGhvcklEKS5OYW1lDQoJCW9iakNvbW1lbnQuRU1haWwgICA9VXNlcnMob2JqQ29tbWVudC5BdXRob3JJRCkuRW1haWwNCgkJb2JqQ29tbWVudC5Ib21lUGFnZT1Vc2VycyhvYmpDb21tZW50LkF1dGhvcklEKS5Ib21lUGFnZQ0KCUVuZCBJZg0KDQoJSWYgb2JqQ29tbWVudC5sb2dfSUQ+MCBUaGVuDQoJCVNldCBvYmpBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KCQlJZiBvYmpBcnRpY2xlLkxvYWRJbmZvQnlJRChvYmpDb21tZW50LmxvZ19JRCkgVGhlbg0KCQkJSWYgTm90IChzdHJLZXk9b2JqQXJ0aWNsZS5Db21tZW50S2V5KSBUaGVuIENhbGwgU2hvd0Vycm9yKDQzKQ0KCQkJSWYgb2JqQXJ0aWNsZS5MZXZlbDw0IFRoZW4gQ2FsbCBTaG93RXJyb3IoNDQpDQoJCUVuZCBJZg0KCQlTZXQgb2JqQXJ0aWNsZT1Ob3RoaW5nDQoJRW5kIElmDQoNCglEaW0gb2JqVXNlcg0KCUZvciBFYWNoIG9ialVzZXIgaW4gVXNlcnMNCgkJSWYgSXNPYmplY3Qob2JqVXNlcikgVGhlbg0KCQkJSWYgKFVDYXNlKG9ialVzZXIuTmFtZSk9VUNhc2Uob2JqQ29tbWVudC5BdXRob3IpKSBBbmQgKG9ialVzZXIuSUQ8Pm9iakNvbW1lbnQuQXV0aG9ySUQpIFRoZW4gU2hvd0Vycm9yKDMxKQ0KCQlFbmQgSWYNCglOZXh0DQoNCglJZiBvYmpDb21tZW50LlBvc3QgVGhlbg0KDQoJCUlmIG9iakNvbW1lbnQuSXNDaGVjaz1UcnVlIFRoZW4gQ2FsbCBTaG93RXJyb3IoNTMpDQoNCgkJQ2FsbCBCdWlsZEFydGljbGUob2JqQ29tbWVudC5sb2dfSUQsRmFsc2UsVHJ1ZSkNCgkJQ2FsbCBCbG9nUmVCdWlsZF9Db21tZW50cw0KCQlDYWxsIEJsb2dSZUJ1aWxkX0RlZmF1bHQNCgkJUG9zdENvbW1lbnQ9VHJ1ZQ0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fUG9zdENvbW1lbnRfU3VjY2VlZChvYmpDb21tZW50KQ0KDQoJRW5kIGlmDQoNCglJZiBJc0VtcHR5KFJlcXVlc3QuRm9ybSgiaW5wQWpheCIpKT1GYWxzZSBUaGVuDQoJCUNhbGwgUmV0dXJuQWpheENvbW1lbnQob2JqQ29tbWVudCkNCgkJQ2FsbCBDbGVhckdsb2JlQ2FjaGUNCgkJQ2FsbCBMb2FkR2xvYmVDYWNoZQ0KCUVuZCBJZg0KDQoJU2V0IG9iakNvbW1lbnQ9Tm90aGluZw0KDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgRGVsIENvbW1lbnQNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIERlbENvbW1lbnQoaW50SUQsaW50TG9nX0lEKQ0KDQoJRGltIG9iakNvbW1lbnQNCglEaW0gb2JqQXJ0aWNsZQ0KDQoJU2V0IG9iakNvbW1lbnQ9TmV3IFRDb21tZW50DQoJU2V0IG9iakFydGljbGU9TmV3IFRBcnRpY2xlDQoNCglJZiBvYmpDb21tZW50LkxvYWRJbmZvYnlJRChpbnRJRCkgVGhlbg0KDQoJCUlmIG9iakNvbW1lbnQubG9nX0lEPjAgVGhlbg0KCQkJRGltIG9ialRlc3RBcnRpY2xlDQoJCQlTZXQgb2JqVGVzdEFydGljbGU9TmV3IFRBcnRpY2xlDQoJCQlJZiBvYmpUZXN0QXJ0aWNsZS5Mb2FkSW5mb2J5SUQob2JqQ29tbWVudC5sb2dfSUQpIFRoZW4NCgkJCQlJZiBOb3QoKG9iakNvbW1lbnQuQXV0aG9ySUQ9QmxvZ1VzZXIuSUQpIE9yIChvYmpUZXN0QXJ0aWNsZS5BdXRob3JJRD1CbG9nVXNlci5JRCkgT3IgKENoZWNrUmlnaHRzKCJSb290Iik9VHJ1ZSkgT3IgKENoZWNrUmlnaHRzKCJDb21tZW50QWxsIik9VHJ1ZSkpIFRoZW4gRXhpdCBGdW5jdGlvbg0KCQkJRWxzZQ0KCQkJCUNhbGwgU2hvd0Vycm9yKDkpDQoJCQlFbmQgSWYNCgkJCVNldCBvYmpUZXN0QXJ0aWNsZT1Ob3RoaW5nDQoNCgkJCURpbSBhbGxjb21tLGkNCgkJCUlmIFNlYXJjaENoaWxkQ29tbWVudHMoaW50SUQsYWxsY29tbSk9VHJ1ZSBUaGVuDQoJCQkJRm9yIEVhY2ggaSBJbiBhbGxjb21tLktleXMNCgkJCQkJRGltIG9ialN1YkNvbW1lbnQNCgkJCQkJU2V0IG9ialN1YkNvbW1lbnQ9TmV3IFRDb21tZW50DQoJCQkJCUlmIG9ialN1YkNvbW1lbnQuTG9hZEluZm9ieUlEKGkpIFRoZW4NCgkJCQkJCW9ialN1YkNvbW1lbnQuRGVsDQoJCQkJCUVuZCBJZg0KCQkJCU5leHQNCgkJCUVuZCBJZg0KDQoJCUVuZCBJZg0KCQlEZWxDaGlsZCBvYmpDb21tZW50LklEDQoJCUlmIG9iakNvbW1lbnQuRGVsIFRoZW4NCg0KCQkJQ2FsbCBCdWlsZEFydGljbGUob2JqQ29tbWVudC5sb2dfSUQsRmFsc2UsVHJ1ZSkNCgkJCUNhbGwgQmxvZ1JlQnVpbGRfQ29tbWVudHMNCgkJCUNhbGwgQmxvZ1JlQnVpbGRfRGVmYXVsdA0KDQoJCQlEZWxDb21tZW50PVRydWUNCgkJRW5kIElmDQoNCglFbmQgSWYNCg0KCVNldCBvYmpDb21tZW50PU5vdGhpbmcNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIFNhdmUgQ29tbWVudA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gU2F2ZUNvbW1lbnQoKQ0KDQoJRGltIG9iakNvbW1lbnQNCglEaW0gb2JqQXJ0aWNsZQ0KDQoJU2V0IG9iakNvbW1lbnQ9TmV3IFRDb21tZW50DQoNCglJZiBvYmpDb21tZW50LkxvYWRJbmZvQnlJRChSZXF1ZXN0LkZvcm0oImlucElEIikpIFRoZW4NCgkJb2JqQ29tbWVudC5BdXRob3I9UmVxdWVzdC5Gb3JtKCJpbnBOYW1lIikNCgkJb2JqQ29tbWVudC5FbWFpbD1SZXF1ZXN0LkZvcm0oImlucEVtYWlsIikNCgkJb2JqQ29tbWVudC5Ib21lUGFnZT1SZXF1ZXN0LkZvcm0oImlucEhvbWVQYWdlIikNCgkJb2JqQ29tbWVudC5Db250ZW50PVJlcXVlc3QuRm9ybSgidHhhQ29udGVudCIpDQoJRWxzZQ0KCQlDYWxsIFNob3dFcnJvcig2MSkNCglFbmQgSWYNCg0KDQoJSWYgb2JqQ29tbWVudC5sb2dfSUQ+MCBUaGVuDQoJCVNldCBvYmpBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KCQlJZiBvYmpBcnRpY2xlLkxvYWRJbmZvQnlJRChvYmpDb21tZW50LmxvZ19JRCkgVGhlbg0KCQkJSWYgTm90ICgob2JqQXJ0aWNsZS5BdXRob3JJRD1CbG9nVXNlci5JRCkgT3IgKG9iakNvbW1lbnQuQXV0aG9ySUQ9QmxvZ1VzZXIuSUQpIE9yIChDaGVja1JpZ2h0cygiUm9vdCIpPVRydWUpIE9yIChDaGVja1JpZ2h0cygiQ29tbWVudEFsbCIpPVRydWUpKSBUaGVuIEV4aXQgRnVuY3Rpb24NCgkJRW5kIElmDQoJCVNldCBvYmpBcnRpY2xlPU5vdGhpbmcNCglFbmQgSWYNCg0KCUNhbGwgRmlsdGVyX1BsdWdpbl9Qb3N0Q29tbWVudF9Db3JlKG9iakNvbW1lbnQpDQoNCglJZiBvYmpDb21tZW50LlBvc3QgVGhlbg0KDQoJCUNhbGwgQnVpbGRBcnRpY2xlKG9iakNvbW1lbnQubG9nX0lELEZhbHNlLEZhbHNlKQ0KCQlDYWxsIEJsb2dSZUJ1aWxkX0NvbW1lbnRzDQoJCUNhbGwgQmxvZ1JlQnVpbGRfRGVmYXVsdA0KDQoJCVNhdmVDb21tZW50PVRydWUNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fUG9zdENvbW1lbnRfU3VjY2VlZChvYmpDb21tZW50KQ0KDQoJRW5kIGlmDQoNCglTZXQgb2JqQ29tbWVudD1Ob3RoaW5nDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgU2F2ZSBSZXYgQ29tbWVudA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gU2F2ZVJldkNvbW1lbnQoKQ0KDQoJRGltIG9ialJldkNvbW1lbnQNCglEaW0gb2JqTmV3Q29tbWVudA0KCURpbSBvYmpBcnRpY2xlDQoNCglTZXQgb2JqTmV3Q29tbWVudD1OZXcgVENvbW1lbnQNCglTZXQgb2JqUmV2Q29tbWVudD1OZXcgVENvbW1lbnQNCg0KCUlmIG9ialJldkNvbW1lbnQuTG9hZEluZm9CeUlEKFJlcXVlc3QuRm9ybSgiaW50UmV2SUQiKSkgVGhlbg0KDQoJCW9iak5ld0NvbW1lbnQuUGFyZW50SUQ9b2JqUmV2Q29tbWVudC5JRA0KCQlvYmpOZXdDb21tZW50LmxvZ19JRD1vYmpSZXZDb21tZW50LmxvZ19JRA0KCQlvYmpOZXdDb21tZW50LkF1dGhvcklEPUJsb2dVc2VyLklEDQoJCW9iak5ld0NvbW1lbnQuQXV0aG9yPUJsb2dVc2VyLk5hbWUNCgkJb2JqTmV3Q29tbWVudC5FbWFpbD1CbG9nVXNlci5FbWFpbA0KCQlvYmpOZXdDb21tZW50LkhvbWVQYWdlPUJsb2dVc2VyLkhvbWVQYWdlDQoJCW9iak5ld0NvbW1lbnQuQ29udGVudD1SZXF1ZXN0LkZvcm0oInR4YUNvbnRlbnQiKQ0KDQoJRWxzZQ0KCQlDYWxsIFNob3dFcnJvcig2MSkNCglFbmQgSWYNCg0KCUlmIExlbihvYmpOZXdDb21tZW50LkNvbnRlbnQpPTAgT3IgTGVuKG9iak5ld0NvbW1lbnQuQ29udGVudCk+WkNfQ09OVEVOVF9NQVggVGhlbg0KCQlDYWxsIFNob3dFcnJvcig0NikNCglFbmQgSWYNCg0KCUlmIG9iak5ld0NvbW1lbnQubG9nX0lEPjAgVGhlbg0KCQlTZXQgb2JqQXJ0aWNsZT1OZXcgVEFydGljbGUNCgkJSWYgb2JqQXJ0aWNsZS5Mb2FkSW5mb0J5SUQob2JqTmV3Q29tbWVudC5sb2dfSUQpIFRoZW4NCgkJCUlmIE5vdCAoKG9iakFydGljbGUuQXV0aG9ySUQ9QmxvZ1VzZXIuSUQpIE9yIChvYmpOZXdDb21tZW50LkF1dGhvcklEPUJsb2dVc2VyLklEKSBPciAoQ2hlY2tSaWdodHMoIlJvb3QiKT1UcnVlKSBPciAoQ2hlY2tSaWdodHMoIkNvbW1lbnRBbGwiKT1UcnVlKSkgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCUVuZCBJZg0KCQlTZXQgb2JqQXJ0aWNsZT1Ob3RoaW5nDQoJRW5kIElmDQoNCglDYWxsIEZpbHRlcl9QbHVnaW5fUG9zdENvbW1lbnRfQ29yZShvYmpOZXdDb21tZW50KQ0KDQoJSWYgb2JqTmV3Q29tbWVudC5Qb3N0IFRoZW4NCg0KCQlDYWxsIEJ1aWxkQXJ0aWNsZShvYmpOZXdDb21tZW50LmxvZ19JRCxGYWxzZSxGYWxzZSkNCgkJQ2FsbCBCbG9nUmVCdWlsZF9Db21tZW50cw0KCQlDYWxsIEJsb2dSZUJ1aWxkX0RlZmF1bHQNCg0KCQlTYXZlUmV2Q29tbWVudD1UcnVlDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1Bvc3RDb21tZW50X1N1Y2NlZWQob2JqTmV3Q29tbWVudCkNCg0KCUVuZCBpZg0KDQoJU2V0IG9iak5ld0NvbW1lbnQ9Tm90aGluZw0KCVNldCBvYmpSZXZDb21tZW50PU5vdGhpbmcNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgUmV0dXJuIEFqYXggQ29tbWVudA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRGltIFJldHVybkFqYXhDb21tZW50X2FyeVRlbXBsYXRlVGFnc05hbWUNCkRpbSBSZXR1cm5BamF4Q29tbWVudF9hcnlUZW1wbGF0ZVRhZ3NWYWx1ZQ0KDQpGdW5jdGlvbiBSZXR1cm5BamF4Q29tbWVudF9QbHVnaW4oYXJ5VGVtcGxhdGVUYWdzTmFtZSxhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSkNCglSZXR1cm5BamF4Q29tbWVudF9hcnlUZW1wbGF0ZVRhZ3NOYW1lPWFyeVRlbXBsYXRlVGFnc05hbWUNCglSZXR1cm5BamF4Q29tbWVudF9hcnlUZW1wbGF0ZVRhZ3NWYWx1ZT1hcnlUZW1wbGF0ZVRhZ3NWYWx1ZQ0KRW5kIEZ1bmN0aW9uDQonTWFyazUNCkZ1bmN0aW9uIFJldHVybkFqYXhDb21tZW50KG9iakNvbW1lbnQpDQoNCglPbiBFcnJvciBSZXN1bWUgTmV4dA0KDQoJRGltIGksag0KCWk9MA0KCURpbSBvYmpBcnRpY2xlDQoNCg0KCSdGaWx0ZXJfUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9UZW1wbGF0ZVRhZ3MNCglDYWxsIEFkZF9GaWx0ZXJfUGx1Z2luKCJGaWx0ZXJfUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9UZW1wbGF0ZVRhZ3MiLCJSZXR1cm5BamF4Q29tbWVudF9QbHVnaW4iKQ0KDQoJU2V0IG9iakFydGljbGU9TmV3IFRBcnRpY2xlDQoJSWYgb2JqQXJ0aWNsZS5Mb2FkSW5mb0J5SUQob2JqQ29tbWVudC5sb2dfSUQpIFRoZW4NCgkJQ2FsbCBvYmpBcnRpY2xlLkV4cG9ydChaQ19ESVNQTEFZX01PREVfQUxMKQ0KCQlpPW9iakFydGljbGUuQ29tbU51bXMNCglFbmQgSWYNCg0KDQoJRGltIHN0ckMNCglzdHJDPUdldFRlbXBsYXRlKCJURU1QTEFURV9CX0FSVElDTEVfQ09NTUVOVCIpDQoJb2JqQ29tbWVudC5Db3VudD1vYmpDb21tZW50LkNvdW50KzENCglzdHJDPW9iakNvbW1lbnQuTWFrZVRlbXBsYXRlKHN0ckMpDQoJc3RyQz1SZXBsYWNlKHN0ckMsIjwjWkNfQkxPR19IT1NUIz4iLEJsb2dIb3N0KQ0KDQoJRGltIGFyeVRlbXBsYXRlVGFnc05hbWUyDQoJRGltIGFyeVRlbXBsYXRlVGFnc1ZhbHVlMg0KDQoJYXJ5VGVtcGxhdGVUYWdzTmFtZTI9VGVtcGxhdGVUYWdzRGljLktleXMNCglhcnlUZW1wbGF0ZVRhZ3NWYWx1ZTI9VGVtcGxhdGVUYWdzRGljLkl0ZW1zDQoNCglqPVVCb3VuZChSZXR1cm5BamF4Q29tbWVudF9hcnlUZW1wbGF0ZVRhZ3NOYW1lKQ0KCUZvciBpPTEgdG8gag0KCQlJZiBJc051bGwoUmV0dXJuQWpheENvbW1lbnRfYXJ5VGVtcGxhdGVUYWdzVmFsdWUoaSkpPUZhbHNlIFRoZW4NCgkJCXN0ckMgPSBSZXBsYWNlKHN0ckMsIjwjIiAmIFJldHVybkFqYXhDb21tZW50X2FyeVRlbXBsYXRlVGFnc05hbWUoaSkgJiAiIz4iLCBSZXR1cm5BamF4Q29tbWVudF9hcnlUZW1wbGF0ZVRhZ3NWYWx1ZShpKSkNCgkJRW5kIElmDQoJTmV4dA0KDQoJaj1VQm91bmQoYXJ5VGVtcGxhdGVUYWdzTmFtZTIpDQoNCglGb3IgaT0xIHRvIGoNCgkJc3RyQz1SZXBsYWNlKHN0ckMsIjwjIiAmIGFyeVRlbXBsYXRlVGFnc05hbWUyKGkpICYgIiM+IixhcnlUZW1wbGF0ZVRhZ3NWYWx1ZTIoaSkpDQoJTmV4dA0KDQoNCglzdHJDPSBSZXBsYWNlKHN0ckMsdmJDckxmLCIiKQ0KCXN0ckM9IFJlcGxhY2Uoc3RyQyx2YkxmLCIiKQ0KCXN0ckM9IFJlcGxhY2Uoc3RyQyx2YlRhYiwiIikNCglSZXNwb25zZS5Xcml0ZSBzdHJDDQoNCglSZXR1cm5BamF4Q29tbWVudD1UcnVlDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIEdldCBDb21tZW50IEFqYXgNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIEdldENvbW1lbnQobG9naWQscGFnZSkNCg0KCURpbSBvYmpBcnRpY2xlDQoJU2V0IG9iakFydGljbGU9TmV3IFRBcnRpY2xlDQoNCgknRmlsdGVyX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfVGVtcGxhdGVUYWdzDQoJQ2FsbCBBZGRfRmlsdGVyX1BsdWdpbigiRmlsdGVyX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfVGVtcGxhdGVUYWdzIiwiUmV0dXJuQWpheENvbW1lbnRfUGx1Z2luIikNCg0KCUlmIG9iakFydGljbGUuTG9hZEluZm9CeUlEKGxvZ2lkKSBUaGVuDQoJCW9iakFydGljbGUuQ29tbWVudHNQYWdlPXBhZ2UNCgkJQ2FsbCBvYmpBcnRpY2xlLkV4cG9ydChaQ19ESVNQTEFZX01PREVfQ09NTUVOVFMpDQoJCXM9b2JqQXJ0aWNsZS5zdWJodG1sDQoJRW5kIElmDQoNCglEaW0gaSxqLHMNCglEaW0gYXJ5VGVtcGxhdGVUYWdzTmFtZTINCglEaW0gYXJ5VGVtcGxhdGVUYWdzVmFsdWUyDQoNCglhcnlUZW1wbGF0ZVRhZ3NOYW1lMj1UZW1wbGF0ZVRhZ3NEaWMuS2V5cw0KCWFyeVRlbXBsYXRlVGFnc1ZhbHVlMj1UZW1wbGF0ZVRhZ3NEaWMuSXRlbXMNCg0KCWo9VUJvdW5kKFJldHVybkFqYXhDb21tZW50X2FyeVRlbXBsYXRlVGFnc05hbWUpDQoJRm9yIGk9MSB0byBqDQoJCUlmIElzTnVsbChSZXR1cm5BamF4Q29tbWVudF9hcnlUZW1wbGF0ZVRhZ3NWYWx1ZShpKSk9RmFsc2UgVGhlbg0KCQkJcyA9IFJlcGxhY2UocywiPCMiICYgUmV0dXJuQWpheENvbW1lbnRfYXJ5VGVtcGxhdGVUYWdzTmFtZShpKSAmICIjPiIsIFJldHVybkFqYXhDb21tZW50X2FyeVRlbXBsYXRlVGFnc1ZhbHVlKGkpKQ0KCQlFbmQgSWYNCglOZXh0DQoNCglqPVVCb3VuZChhcnlUZW1wbGF0ZVRhZ3NOYW1lMikNCg0KCUZvciBpPTEgdG8gag0KCQlzPVJlcGxhY2UocywiPCMiICYgYXJ5VGVtcGxhdGVUYWdzTmFtZTIoaSkgJiAiIz4iLGFyeVRlbXBsYXRlVGFnc1ZhbHVlMihpKSkNCglOZXh0DQoNCglEaW0gb2JqUmVnRXhwDQoJU2V0IG9ialJlZ0V4cD1OZXcgUmVnRXhwDQoJb2JqUmVnRXhwLklnbm9yZUNhc2UgPVRydWUNCglvYmpSZWdFeHAuR2xvYmFsPVRydWUNCglvYmpSZWdFeHAuUGF0dGVybj0iPGlucyBpZD0iIkFqYXhDb21tZW50W1xEXGRdKz88L2lucz4iDQoJcz0gb2JqUmVnRXhwLlJlcGxhY2UocywiIikNCg0KDQoJcz0gUmVwbGFjZShzLHZiQ3JMZiwiIikNCglzPSBSZXBsYWNlKHMsdmJMZiwiIikNCglzPSBSZXBsYWNlKHMsdmJUYWIsIiIpDQoNCglSZXNwb25zZS5Xcml0ZSBzDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIFBvc3QgVHJhY2tCYWNrDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBQb3N0VHJhY2tCYWNrKGludElELHN0cktleSkNCg0KCURpbSBvYmpUcmFja0JhY2sNCglEaW0gb2JqQXJ0aWNsZQ0KDQoJRGltIGtleXMNCglEaW0gaSxqLGssYg0KDQoJSWYgWkNfVFJBQ0tCQUNLX1RVUk5PRkYgVGhlbg0KCQlDYWxsIFJlc3BvbmRFcnJvcig0MSxaVkFfRXJyb3JNc2coNDEpKQ0KCUVuZCBJZg0KDQoJSWYgTGVuKHN0cktleSk9NSBUaGVuDQoNCgkJSWYgQ2hlY2tWZXJpZnlOdW1iZXIoc3RyS2V5KT1GYWxzZSBUaGVuIENhbGwgU2hvd0Vycm9yKDQzKQ0KDQoJRWxzZUlmIExlbihzdHJLZXkpPTggVGhlbg0KDQoJCVNldCBvYmpBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KCQlJZiBvYmpBcnRpY2xlLkxvYWRJbmZvQnlJRChpbnRJRCkgVGhlbg0KCQkJSWYgTm90IChzdHJLZXk9b2JqQXJ0aWNsZS5UcmFja0JhY2tLZXkpIFRoZW4gQ2FsbCBSZXNwb25kRXJyb3IoNDMpDQoJCQlJZiBvYmpBcnRpY2xlLkxldmVsPDQgVGhlbiBDYWxsIFJlc3BvbmRFcnJvcig0NCkNCgkJRW5kIElmDQoJCVNldCBvYmpBcnRpY2xlPU5vdGhpbmcNCg0KCUVsc2UNCgkJRXhpdCBGdW5jdGlvbg0KCUVuZCBJZg0KDQoJU2V0IG9ialRyYWNrQmFjaz1OZXcgVFRyYWNrQmFjaw0KCVNldCBvYmpBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KDQoJb2JqVHJhY2tCYWNrLmxvZ19JRD1pbnRJRA0KCW9ialRyYWNrQmFjay5VUkw9UmVxdWVzdC5Gb3JtKCJ1cmwiKQ0KCW9ialRyYWNrQmFjay5UaXRsZT1SZXF1ZXN0LkZvcm0oInRpdGxlIikNCglvYmpUcmFja0JhY2suQmxvZz1SZXF1ZXN0LkZvcm0oImJsb2dfbmFtZSIpDQoJb2JqVHJhY2tCYWNrLkV4Y2VycHQ9UmVxdWVzdC5Gb3JtKCJleGNlcnB0IikNCg0KCSfmjqXlj6MNCglDYWxsIEZpbHRlcl9QbHVnaW5fUG9zdFRyYWNrQmFja19Db3JlKG9ialRyYWNrQmFjaykNCg0KCUlmIG9ialRyYWNrQmFjay5Qb3N0IFRoZW4NCgkJQ2FsbCBCdWlsZEFydGljbGUob2JqVHJhY2tCYWNrLmxvZ19JRCxGYWxzZSxUcnVlKQ0KCQlCbG9nUmVCdWlsZF9UcmFja0JhY2tzDQoJCVBvc3RUcmFja0JhY2s9VHJ1ZQ0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fUG9zdFRyYWNrQmFja19TdWNjZWVkKG9ialRyYWNrQmFjaykNCglFbmQgSWYNCg0KCVJlc3BvbnNlLkNvbnRlbnRUeXBlID0gInRleHQveG1sIg0KCVJlc3BvbnNlLkNsZWFyDQoJUmVzcG9uc2UuV3JpdGUgb2JqVHJhY2tCYWNrLlRiWE1MDQoNCglTZXQgb2JqVHJhY2tCYWNrPU5vdGhpbmcNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIERlbCBUcmFja0JhY2sNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIERlbFRyYWNrQmFjayhpbnRJRCxpbnRMb2dfSUQpDQoNCglEaW0gb2JqVHJhY2tCYWNrDQoJRGltIG9iakFydGljbGUNCg0KCVNldCBvYmpUcmFja0JhY2s9TmV3IFRUcmFja0JhY2sNCglTZXQgb2JqQXJ0aWNsZT1OZXcgVEFydGljbGUNCg0KCUlmIG9ialRyYWNrQmFjay5Mb2FkSW5mb2J5SUQoaW50SUQpIFRoZW4NCg0KCQlEaW0gb2JqVGVzdEFydGljbGUNCgkJU2V0IG9ialRlc3RBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KCQlJZiBvYmpUZXN0QXJ0aWNsZS5Mb2FkSW5mb2J5SUQob2JqVHJhY2tCYWNrLmxvZ19JRCkgVGhlbg0KCQkJSWYgTm90KChvYmpUZXN0QXJ0aWNsZS5BdXRob3JJRD1CbG9nVXNlci5JRCkgT3IgKENoZWNrUmlnaHRzKCJSb290Iik9VHJ1ZSkpIFRoZW4gRXhpdCBGdW5jdGlvbg0KCQlFbHNlDQoJCQlDYWxsIFNob3dFcnJvcig5KQ0KCQlFbmQgSWYNCgkJU2V0IG9ialRlc3RBcnRpY2xlPU5vdGhpbmcNCg0KCQlJZiBvYmpUcmFja0JhY2suRGVsIFRoZW4NCgkJCUNhbGwgQnVpbGRBcnRpY2xlKG9ialRyYWNrQmFjay5sb2dfSUQsRmFsc2UsVHJ1ZSkNCgkJCUJsb2dSZUJ1aWxkX1RyYWNrQmFja3MNCgkJCURlbFRyYWNrQmFjaz1UcnVlDQoJCUVuZCBJZg0KDQoJRW5kIElmDQoNCglTZXQgb2JqVHJhY2tCYWNrPU5vdGhpbmcNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIFNlbmQgVHJhY2tCYWNrDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBTZW5kVHJhY2tCYWNrKCkNCg0KCURpbSBvYmpUcmFja0JhY2sNCglEaW0gb2JqQXJ0aWNsZQ0KDQoJU2V0IG9ialRyYWNrQmFjaz1OZXcgVFRyYWNrQmFjaw0KCVNldCBvYmpBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KDQoJSWYgb2JqQXJ0aWNsZS5Mb2FkSW5mb2J5SUQoUmVxdWVzdC5Gb3JtKCJlZHRJRCIpKSBUaGVuDQoJCW9ialRyYWNrQmFjay5VUkw9b2JqQXJ0aWNsZS5VcmwNCgkJb2JqVHJhY2tCYWNrLlRpdGxlPW9iakFydGljbGUuVGl0bGUNCgkJb2JqVHJhY2tCYWNrLkJsb2c9WkNfQkxPR19OQU1FDQoJCW9ialRyYWNrQmFjay5FeGNlcnB0PUxlZnQob2JqQXJ0aWNsZS5IdG1sQ29udGVudCwyNTApDQoJRWxzZQ0KCQlDYWxsIFNob3dFcnJvcig5KQ0KCUVuZCBJZg0KDQoJSWYgb2JqVHJhY2tCYWNrLlNlbmQoUmVxdWVzdC5Gb3JtKCJlZHRUcmFja0JhY2siKSkgVGhlbiBTZW5kVHJhY2tCYWNrPVRydWUNCglTZXQgb2JqVHJhY2tCYWNrPU5vdGhpbmcNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgRWRpdCBVc2VyDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBFZGl0VXNlcigpDQoNCglEaW0gb2JqVXNlcg0KCVNldCBvYmpVc2VyPU5ldyBUVXNlcg0KCW9ialVzZXIuSUQ9UmVxdWVzdC5Gb3JtKCJlZHRJRCIpDQoJb2JqVXNlci5MZXZlbD1SZXF1ZXN0LkZvcm0oImVkdExldmVsIikNCglvYmpVc2VyLk5hbWU9UmVxdWVzdC5Gb3JtKCJlZHROYW1lIikNCglvYmpVc2VyLkVtYWlsPVJlcXVlc3QuRm9ybSgiZWR0RW1haWwiKQ0KCW9ialVzZXIuSG9tZVBhZ2U9UmVxdWVzdC5Gb3JtKCJlZHRIb21lUGFnZSIpDQoJb2JqVXNlci5BbGlhcz1SZXF1ZXN0LkZvcm0oImVkdEFsaWFzIikNCglvYmpVc2VyLlRlbXBsYXRlTmFtZT1SZXF1ZXN0LkZvcm0oImVkdFRlbXBsYXRlIikNCg0KCUlmIEJsb2dVc2VyLkxldmVsPDQgVGhlbg0KCQlvYmpVc2VyLkludHJvPVJlcXVlc3QuRm9ybSgiZWR0SW50cm8iKQ0KCUVuZCBJZg0KDQoJSWYgVHJpbShSZXF1ZXN0LkZvcm0oImVkdFBhc3NXb3JkIikpPD4iIiBUaGVuDQoJCW9ialVzZXIuUGFzc1dvcmQ9b2JqVXNlci5DcmVhdGVQYXNzd29yZEJ5T3JpZ2luYWwoUmVxdWVzdC5Gb3JtKCJlZHRQYXNzV29yZCIpKQ0KCQlJZiBOb3QgQ2hlY2tSZWdFeHAoUmVxdWVzdC5Gb3JtKCJlZHRQYXNzV29yZCIpLCJbcGFzc3dvcmRdIikgVGhlbiBDYWxsIFNob3dFcnJvcig1NCkNCglFbmQgSWYNCg0KCUlmIENMbmcob2JqVXNlci5JRCk+MCBUaGVuIG9ialVzZXIuTWV0YVN0cmluZz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBbbWVtX01ldGFdIEZST00gW2Jsb2dfTWVtYmVyXSBXSEVSRSBbbWVtX0lEXT0iJkNMbmcob2JqVXNlci5JRCkpKDApDQoJQ2FsbCBHZXRNZXRhVmFsdWV3aXRoRm9ybShvYmpVc2VyKQ0KDQoJSWYgTm90KChDTG5nKG9ialVzZXIuSUQpPUJsb2dVc2VyLklEKSBPciAoQ2hlY2tSaWdodHMoIlJvb3QiKT1UcnVlKSkgVGhlbiBFeGl0IEZ1bmN0aW9uDQoNCgkn5o6l5Y+jDQoJQ2FsbCBGaWx0ZXJfUGx1Z2luX0VkaXRVc2VyX0NvcmUob2JqVXNlcikNCg0KCUlmIG9ialVzZXIuRWRpdChCbG9nVXNlcikgVGhlbg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fRWRpdFVzZXJfU3VjY2VlZChvYmpVc2VyKQ0KCQlFZGl0VXNlcj1UcnVlDQoJRW5kIElGDQoNCglTZXQgb2JqVXNlcj1Ob3RoaW5nDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgICBEZWwgVXNlcg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gRGVsVXNlcihpbnRJRCkNCg0KCURpbSBvYmpSUw0KCURpbSBvYmpVc2VyDQoJRGltIG9ialVwTG9hZEZpbGUNCg0KCVNldCBvYmpVc2VyPU5ldyBUVXNlcg0KCW9ialVzZXIuSUQ9aW50SUQNCglJZiBvYmpVc2VyLkRlbChCbG9nVXNlcikgVGhlbiBEZWxVc2VyPVRydWUNCglTZXQgb2JqVXNlcj1Ob3RoaW5nDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIEJsb2cgUmVCdWlsZA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gTWFrZUJsb2dSZUJ1aWxkKCkNCg0KCSdwbHVnaW4gbm9kZQ0KCWJBY3Rpb25fUGx1Z2luX01ha2VCbG9nUmVCdWlsZF9CZWdpbj1GYWxzZQ0KCUZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX01ha2VCbG9nUmVCdWlsZF9CZWdpbiBpbiBBY3Rpb25fUGx1Z2luX01ha2VCbG9nUmVCdWlsZF9CZWdpbg0KCQlJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9NYWtlQmxvZ1JlQnVpbGRfQmVnaW4pIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX01ha2VCbG9nUmVCdWlsZF9CZWdpbikNCgkJSWYgYkFjdGlvbl9QbHVnaW5fTWFrZUJsb2dSZUJ1aWxkX0JlZ2luPVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJTmV4dA0KDQoJQ2FsbCBNYWtlQmxvZ1JlQnVpbGRfQ29yZSgpDQoNCglTZXNzaW9uKCJiYXRjaHRpbWUiKT1TZXNzaW9uKCJiYXRjaHRpbWUiKStSdW5UaW1lDQoNCglDYWxsIFNldEJsb2dIaW50KFRydWUsRmFsc2UsRW1wdHkpDQoNCglNYWtlQmxvZ1JlQnVpbGQ9VHJ1ZQ0KDQoJJ3BsdWdpbiBub2RlDQoJYkFjdGlvbl9QbHVnaW5fTWFrZUJsb2dSZUJ1aWxkX0VuZD1GYWxzZQ0KCUZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX01ha2VCbG9nUmVCdWlsZF9FbmQgaW4gQWN0aW9uX1BsdWdpbl9NYWtlQmxvZ1JlQnVpbGRfRW5kDQoJCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX01ha2VCbG9nUmVCdWlsZF9FbmQpIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX01ha2VCbG9nUmVCdWlsZF9FbmQpDQoJCUlmIGJBY3Rpb25fUGx1Z2luX01ha2VCbG9nUmVCdWlsZF9FbmQ9VHJ1ZSBUaGVuIEV4aXQgRnVuY3Rpb24NCglOZXh0DQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIOaWh+S7tumHjeW7uiDmibnlpITnkIYg5YmN572uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBCZWZvcmVGaWxlUmVCdWlsZCgpDQoNCglJZiBaQ19QT1NUX1NUQVRJQ19NT0RFPD4iU1RBVElDIiBUaGVuIEV4aXQgRnVuY3Rpb24NCg0KCURpbSBvYmpSUw0KCURpbSBvYmpBcnRpY2xlDQoNCglTZXQgb2JqUlM9U2VydmVyLkNyZWF0ZU9iamVjdCgiQURPREIuUmVjb3Jkc2V0IikNCglvYmpSUy5DdXJzb3JUeXBlID0gYWRPcGVuS2V5c2V0DQoJb2JqUlMuTG9ja1R5cGUgPSBhZExvY2tSZWFkT25seQ0KCW9ialJTLkFjdGl2ZUNvbm5lY3Rpb249b2JqQ29ubg0KCW9ialJTLlNvdXJjZT0iU0VMRUNUIFtsb2dfSURdIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgW2xvZ19MZXZlbF0+MSINCglvYmpSUy5PcGVuKCkNCg0KCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCg0KCQlvYmpSUy5QYWdlU2l6ZSA9IFpDX1JFQlVJTERfRklMRV9DT1VOVA0KDQoJCURpbSBpDQoJCUZvciBpPTEgVG8gb2JqUlMuUGFnZUNvdW50DQoJCQlDYWxsIEFkZEJhdGNoKFpDX01TRzA3MyAmICI8IiZpJiI+IiwiQ2FsbCBNYWtlRmlsZVJlQnVpbGQoIiZpJiIpIikNCgkJTmV4dA0KDQoJRW5kIElmDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgQWxsIEZpbGVzIFJlQnVpbGQNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIE1ha2VGaWxlUmVCdWlsZChpbnRQYWdlKQ0KDQoJJ3BsdWdpbiBub2RlDQoJJ2JBY3Rpb25fUGx1Z2luX01ha2VGaWxlUmVCdWlsZF9CZWdpbj1GYWxzZQ0KCSdGb3IgRWFjaCBzQWN0aW9uX1BsdWdpbl9NYWtlRmlsZVJlQnVpbGRfQmVnaW4gaW4gQWN0aW9uX1BsdWdpbl9NYWtlRmlsZVJlQnVpbGRfQmVnaW4NCgknCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX01ha2VGaWxlUmVCdWlsZF9CZWdpbikgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fTWFrZUZpbGVSZUJ1aWxkX0JlZ2luKQ0KCScJSWYgYkFjdGlvbl9QbHVnaW5fTWFrZUZpbGVSZUJ1aWxkX0JlZ2luPVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJJ05leHQNCg0KCURpbSBpLGoNCg0KCURpbSBvYmpSUw0KCURpbSBvYmpBcnRpY2xlDQoNCglTZXQgb2JqUlM9U2VydmVyLkNyZWF0ZU9iamVjdCgiQURPREIuUmVjb3Jkc2V0IikNCglvYmpSUy5DdXJzb3JUeXBlID0gYWRPcGVuS2V5c2V0DQoJb2JqUlMuTG9ja1R5cGUgPSBhZExvY2tSZWFkT25seQ0KCW9ialJTLkFjdGl2ZUNvbm5lY3Rpb249b2JqQ29ubg0KCW9ialJTLlNvdXJjZT0iU0VMRUNUIFtsb2dfSURdIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgW2xvZ19MZXZlbF0+MSINCglvYmpSUy5PcGVuKCkNCg0KCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCg0KCQlvYmpSUy5QYWdlU2l6ZSA9IFpDX1JFQlVJTERfRklMRV9DT1VOVA0KDQoJCW9ialJTLkFic29sdXRlUGFnZSA9IGludFBhZ2UNCg0KCQlGb3IgaSA9IDEgVG8gb2JqUlMuUGFnZVNpemUNCg0KCQkJQ2FsbCBCdWlsZEFydGljbGUob2JqUlMoImxvZ19JRCIpLEZhbHNlLEZhbHNlKQ0KDQoJCQlvYmpSUy5Nb3ZlTmV4dA0KCQkJSWYgb2JqUlMuZW9mIFRoZW4gRXhpdCBGb3INCgkJCQ0KCQkJDQoJCU5leHQNCg0KCQlTZXNzaW9uKCJiYXRjaHRpbWUiKT1TZXNzaW9uKCJiYXRjaHRpbWUiKStSdW5UaW1lDQoNCglFbmQgSWYNCg0KCSdwbHVnaW4gbm9kZQ0KCSdiQWN0aW9uX1BsdWdpbl9NYWtlRmlsZVJlQnVpbGRfRW5kPUZhbHNlDQoJJ0ZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX01ha2VGaWxlUmVCdWlsZF9FbmQgaW4gQWN0aW9uX1BsdWdpbl9NYWtlRmlsZVJlQnVpbGRfRW5kDQoJJwlJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9NYWtlRmlsZVJlQnVpbGRfRW5kKSBUaGVuIENhbGwgRXhlY3V0ZShzQWN0aW9uX1BsdWdpbl9NYWtlRmlsZVJlQnVpbGRfRW5kKQ0KCScJSWYgYkFjdGlvbl9QbHVnaW5fTWFrZUZpbGVSZUJ1aWxkX0VuZD1UcnVlIFRoZW4gRXhpdCBGdW5jdGlvbg0KCSdOZXh0DQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgICBCYXRjaCBBTEwNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIEJhdGNoQWxsKCkNCg0KCU9uIEVycm9yIFJlc3VtZSBOZXh0DQoNCglTZXJ2ZXIuU2NyaXB0VGltZW91dCA9IDEyMDANCg0KCUlmIFJlcXVlc3QuUXVlcnlTdHJpbmcoImNhbmNlbCIpPSJ0cnVlIiBUaGVuDQoJCVNlc3Npb24oImJhdGNoIikuUmVtb3ZlQWxsDQoJCVNlc3Npb24oImJhdGNob3JkZXIiKT0wDQoJCVNlc3Npb24oImJhdGNodGltZSIpPTANCglFbmQgSWYgDQoJDQoJDQoJSWYgSXNPYmplY3QoU2Vzc2lvbigiYmF0Y2giKSkgVGhlbg0KCQ0KCQlEaW0gaQ0KCQlEaW0gYQ0KCQlTZXQgYSA9IFNlc3Npb24oImJhdGNoIikNCgkJRGltIGINCgkJYj1hLktleXMNCgkJRGltIGMNCgkJYz1hLkl0ZW1zDQoJDQoJCURpbSBpbnRBbGxUaW1lDQoJDQoJIA0KCQlJZiBhLkNvdW50ID4wIFRoZW4NCgkNCgkJCUZvciBpID0gMCBUbyAwDQoJDQoJCQkJUmVzcG9uc2UuV3JpdGUgIjwhRE9DVFlQRSBodG1sIFBVQkxJQyAiIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiIgIiJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS10cmFuc2l0aW9uYWwuZHRkIiI+PGh0bWw+PGhlYWQ+PG1ldGEgaHR0cC1lcXVpdj0iIkNvbnRlbnQtVHlwZSIiIGNvbnRlbnQ9IiJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiIi8+PG1ldGEgaHR0cC1lcXVpdj0iInJlZnJlc2giIiBjb250ZW50PSIiIiZaQ19SRUJVSUxEX0ZJTEVfSU5URVJWQUwmIjtVUkw9IiZCbG9nSG9zdCAmICJ6Yl9zeXN0ZW0vY21kLmFzcD9hY3Q9YmF0Y2giJiImYWxsPSImaW50QWxsVGltZSYiIiIvPjxzdHlsZT5ib2R5e3BhZGRpbmc6MDsgbWFyZ2luOjA7YmFja2dyb3VuZDojZGJlM2ZmO31pbWd7Ym9yZGVyOjA7cGFkZGluZzowOyBtYXJnaW46MDtiYWNrZ3JvdW5kOlRyYW5zcGFyZW50O308L3N0eWxlPjwvaGVhZD48Ym9keT4iDQoJCQkJUmVzcG9uc2UuV3JpdGUgIjxpbWcgc3JjPSdpbWFnZS9hZG1pbi9sb2FkaW5nLmdpZicgd2lkdGg9JzIwJz4iDQoJCQkJUmVzcG9uc2UuV3JpdGUgIjxzY3JpcHQgdHlwZT0iInRleHQvamF2YXNjcmlwdCIiPnBhcmVudC5CYXRjaDJUaXAoIiIiJmIoMCkgJiBaQ19NU0cxMDkmIiIiKTwvc2NyaXB0PiINCgkJCQlJZiBTZXNzaW9uKCJiYXRjaG9yZGVyIik9U2Vzc2lvbigiYmF0Y2giKS5Db3VudCBUaGVuDQoJCQkJCVJlc3BvbnNlLldyaXRlICI8c2NyaXB0IHR5cGU9IiJ0ZXh0L2phdmFzY3JpcHQiIj5wYXJlbnQuQmF0Y2hCZWdpbigpPC9zY3JpcHQ+Ig0KCQkJCUVuZCBJZg0KCQkJCVJlc3BvbnNlLldyaXRlICI8ZGl2IGNsYXNzPSIiaGlkZGVuIiI+Ig0KCQkJCUNhbGwgR2V0QmxvZ0hpbnQoKQ0KCQkJCVJlc3BvbnNlLldyaXRlICI8L2Rpdj4iDQoJDQoJCQkJUmVzcG9uc2UuRmx1c2gNCgkNCgkJCQlSZXNwb25zZS5Xcml0ZSAiPC9ib2R5PjwvaHRtbD4iDQoJDQoJCQkJQ2FsbCBFeGVjdXRlKGMoMCkpDQoJCQkJU2Vzc2lvbigiYmF0Y2giKS5SZW1vdmUoYigwKSkNCgkNCgkJCU5leHQNCgkNCgkJRWxzZQ0KCQ0KCQ0KCQkJUmVzcG9uc2UuV3JpdGUgIjwhRE9DVFlQRSBodG1sIFBVQkxJQyAiIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiIgIiJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS10cmFuc2l0aW9uYWwuZHRkIiI+PGh0bWw+PGhlYWQ+PG1ldGEgaHR0cC1lcXVpdj0iIkNvbnRlbnQtVHlwZSIiIGNvbnRlbnQ9IiJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiIi8+PHN0eWxlPmJvZHl7cGFkZGluZzowOyBtYXJnaW46MDtiYWNrZ3JvdW5kOiNkYmUzZmY7fWltZ3tib3JkZXI6MDtwYWRkaW5nOjA7IG1hcmdpbjowO2JhY2tncm91bmQ6VHJhbnNwYXJlbnQ7fTwvc3R5bGU+PC9oZWFkPjxib2R5PiINCgkJCVJlc3BvbnNlLldyaXRlICI8aW1nIHNyYz0naW1hZ2UvYWRtaW4vb2sucG5nJyB3aWR0aD0nMTYnPiINCgkJCVJlc3BvbnNlLldyaXRlICI8c2NyaXB0IHR5cGU9IiJ0ZXh0L2phdmFzY3JpcHQiIj5wYXJlbnQuQmF0Y2gyVGlwKCIiIiZaQ19NU0cyMjcgJiBSZXBsYWNlKFpDX01TRzE2OSwiJW4iLFNlc3Npb24oImJhdGNodGltZSIpLzEwMDApICYiIiIpPC9zY3JpcHQ+Ig0KCQkJUmVzcG9uc2UuV3JpdGUgIjxzY3JpcHQgdHlwZT0iInRleHQvamF2YXNjcmlwdCIiPnBhcmVudC5CYXRjaEVuZCgpPC9zY3JpcHQ+Ig0KCQ0KCQkJUmVzcG9uc2UuV3JpdGUgIjxkaXYgY2xhc3M9IiJoaWRkZW4iIj4iDQoJCQlDYWxsIEdldEJsb2dIaW50KCkNCgkJCVJlc3BvbnNlLldyaXRlICI8L2Rpdj4iDQoJCQlJZiBTZXNzaW9uKCJiYXRjaHRpbWUiKS8xMDAwPjAgVGhlbg0KCQkJCVJlc3BvbnNlLldyaXRlICI8c2NyaXB0IHR5cGU9IiJ0ZXh0L2phdmFzY3JpcHQiIj5wYXJlbnQuQmF0Y2hOb3RpZnkoKTs8L3NjcmlwdD4iDQoJCQlFbmQgSWYNCgkJCQ0KCQkJUmVzcG9uc2UuV3JpdGUgIjwvYm9keT48L2h0bWw+Ig0KCQ0KCQkJU2Vzc2lvbi5BYmFuZG9uDQoJDQoJCUVuZCBJZg0KCUVuZCBJZg0KDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgICBMaXN0IFVzZXIgUmlnaHRzDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBMaXN0VXNlcl9SaWdodHMoKQ0KDQoJRGltIHMNCglEaW0gaQ0KCURpbSB0DQoJRGltIHN0ckFjdGlvbg0KCURpbSBhcnlBY3Rpb24NCg0KCXN0ckFjdGlvbj0iUm9vdHxsb2dpbnx2ZXJpZnl8bG9nb3V0fGFkbWlufGNtdHx2cnN8cnNzfGJhdGNofEJsb2dSZUJ1aWxkfEZpbGVSZUJ1aWxkfEFydGljbGVNbmd8QXJ0aWNsZUVkdHxBcnRpY2xlUHN0fEFydGljbGVEZWx8Q2F0ZWdvcnlNbmd8Q2F0ZWdvcnlQc3R8Q2F0ZWdvcnlEZWx8Q29tbWVudE1uZ3xDb21tZW50RGVsfFVzZXJNbmd8VXNlckVkdHxVc2VyTW9kfFVzZXJDcnR8VXNlckRlbHxGaWxlTW5nfEZpbGVVcGxvYWR8RmlsZURlbHxTZWFyY2h8VGFnTW5nfFRhZ0VkdHxUYWdQc3R8VGFnRGVsfFNldHRpbmdNbmd8U2V0dGluZ1NhdnxQbHVnSW5Nbmd8RnVuY3Rpb25Nbmd8QXJ0aWNsZUFsbHxDb21tZW50QWxsfEZpbGVBbGwiDQoNCglhcnlBY3Rpb249U3BsaXQoc3RyQWN0aW9uLCAifCIpDQoNCglzPVNwbGl0KFpDX01TRzAxOSwiJXMiKQ0KDQoJUmVzcG9uc2UuV3JpdGUgIjwhRE9DVFlQRSBodG1sIFBVQkxJQyAiIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiIgIiJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS10cmFuc2l0aW9uYWwuZHRkIiI+PGh0bWwgeG1sbnM9IiJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiIgeG1sOmxhbmc9IiIiJlpDX0JMT0dfTEFOR1VBR0UmIiIiIGxhbmc9IiIiJlpDX0JMT0dfTEFOR1VBR0UmIiIiPjxoZWFkPjxtZXRhIGh0dHAtZXF1aXY9IiJDb250ZW50LVR5cGUiIiBjb250ZW50PSIidGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04IiIgLz48bWV0YSBodHRwLWVxdWl2PSIiQ29udGVudC1MYW5ndWFnZSIiIGNvbnRlbnQ9IiIiJlpDX0JMT0dfTEFOR1VBR0UmIiIiIC8+PGxpbmsgcmVsPSIic3R5bGVzaGVldCIiIHJldj0iInN0eWxlc2hlZXQiIiBocmVmPSIiY3NzL2FkbWluLmNzcyIiIHR5cGU9IiJ0ZXh0L2NzcyIiIG1lZGlhPSIic2NyZWVuIiIgLz48dGl0bGU+IiZaQ19CTE9HX1RJVExFICYgWkNfTVNHMDQ0ICYgWkNfTVNHMDIxJiI8L3RpdGxlPjwvaGVhZD48Ym9keSBjbGFzcz0iInNob3J0IiI+PGRpdiBjbGFzcz0iImJnIiI+PGRpdiBpZD0iIndyYXBwZXIiIj48ZGl2IGNsYXNzPSIibG9nbyIiPjxpbWcgc3JjPSIiaW1hZ2UvYWRtaW4vbm9uZS5naWYiIiB0aXRsZT0iIlotQmxvZyIiIGFsdD0iIlotQmxvZyIiLz48L2Rpdj48ZGl2IGNsYXNzPSIibG9naW4iIiBzdHlsZT0iIndpZHRoOjMwMHB4OyIiPjxmb3JtIGlkPSIiZnJtTG9naW4iIiBtZXRob2Q9IiJwb3N0IiIgYWN0aW9uPSIiIiI+PGRsPjxkZD4iDQoNCg0KCVJlc3BvbnNlLldyaXRlIFpDX01TRzAwMSAmICI6IiAmIEJMb2dVc2VyLk5hbWUgJiAiPGJyLz48YnIvPiINCglSZXNwb25zZS5Xcml0ZSBaQ19NU0cyNDkgJiAiOiIgJiBaVkFfVXNlcl9MZXZlbF9OYW1lKEJMb2dVc2VyLkxldmVsKSAmICI8YnIvPjxici8+Ig0KDQoJRm9yIGk9TEJvdW5kKGFyeUFjdGlvbikgVG8gVUJvdW5kKGFyeUFjdGlvbikNCgkJSWYgTm90IENoZWNrUmlnaHRzKGFyeUFjdGlvbihpKSkgVGhlbiB0PXQgJiAiPHAgc3R5bGU9J2Rpc3BsYXk6bm9uZTsnPiIgJiBSZXBsYWNlKHMoaSkgJiAiJXMiLCIlcyIsIjo8Zm9udCBjb2xvcj1SZWQ+ZmFpbDwvZm9udD4iJiIiLDEsMSkgJiAiPC9wPiIgRWxzZSB0PXQgJiAiPHA+IiAmIFJlcGxhY2UocyhpKSAmICIlcyIsIiVzIiwiOjxmb250IGNvbG9yPWdyZWVuPm9rPC9mb250PiImIiIsMSwxKSAmICI8L3A+PGJyLz4iIA0KCU5leHQNCg0KCVJlc3BvbnNlLldyaXRlIHQNCg0KCVJlc3BvbnNlLldyaXRlICI8L2RkPjwvZGw+PC9kaXY+PC9kaXY+PC9kaXY+PC9ib2R5PjwvaHRtbD4iDQoNCg0KCUxpc3RVc2VyX1JpZ2h0cz1UcnVlDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQoNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgU2F2ZSBCbG9nIFNldHRpbmcNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIFNhdmVTZXR0aW5nKCkNCg0KCU9uIEVycm9yIFJlc3VtZSBOZXh0DQoNCglJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfU1lOVEFYSElHSExJR0hURVJfRU5BQkxFIik9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NZTlRBWEhJR0hMSUdIVEVSX0VOQUJMRSIsRmFsc2UpDQoNCglJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfQ09ERU1JUlJPUl9FTkFCTEUiKT1GYWxzZSBUaGVuIENhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfQ09ERU1JUlJPUl9FTkFCTEUiLEZhbHNlKQ0KDQoJSWYgQmxvZ0NvbmZpZy5FeGlzdHMoIlpDX0FSVElDTEVfRVhDRVJQVF9NQVgiKT1GYWxzZSBUaGVuIENhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfQVJUSUNMRV9FWENFUlBUX01BWCIsMjUwKQ0KDQoJSWYgQmxvZ0NvbmZpZy5FeGlzdHMoIlpDX1BPU1RfU1RBVElDX01PREUiKT1GYWxzZSBUaGVuIENhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfUE9TVF9TVEFUSUNfTU9ERSIsIlNUQVRJQyIpDQoJDQoJSWYgQmxvZ0NvbmZpZy5FeGlzdHMoIlpDX0hUVFBfTEFTVE1PRElGSUVEIik9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX0hUVFBfTEFTVE1PRElGSUVEIixGYWxzZSkNCg0KCUlmIEJsb2dDb25maWcuRXhpc3RzKCJaQ19VTkNBVEVHT1JJWkVEX05BTUUiKT1GYWxzZSBUaGVuIENhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfVU5DQVRFR09SSVpFRF9OQU1FIixaQ19NU0cwNTkpDQoNCglJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfVU5DQVRFR09SSVpFRF9BTElBUyIpPUZhbHNlIFRoZW4gQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19VTkNBVEVHT1JJWkVEX0FMSUFTIiwiIikNCg0KCUlmIEJsb2dDb25maWcuRXhpc3RzKCJaQ19VTkNBVEVHT1JJWkVEX0NPVU5UIik9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1VOQ0FURUdPUklaRURfQ09VTlQiLDApDQoNCglJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfSFRUUF9MQVNUTU9ESUZJRUQiKT1GYWxzZSBUaGVuIENhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfSFRUUF9MQVNUTU9ESUZJRUQiLEZhbHNlKQ0KDQoJSWYgQmxvZ0NvbmZpZy5FeGlzdHMoIlpDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFIik9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFIixGYWxzZSkNCg0KCUlmIEJsb2dDb25maWcuRXhpc3RzKCJaQ19ERUZBVUxUX1BBR0VTX1RFTVBMQVRFIik9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX0RFRkFVTFRfUEFHRVNfVEVNUExBVEUiLCIiKQ0KDQoJSWYgQmxvZ0NvbmZpZy5FeGlzdHMoIlpDX1NJREVCQVJfT1JERVIiICk9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVIiLFpDX0RFRkFVTFRfU0lERUJBUikNCg0KCUlmIEJsb2dDb25maWcuRXhpc3RzKCJaQ19TSURFQkFSX09SREVSMiIpPUZhbHNlIFRoZW4gQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19TSURFQkFSX09SREVSMiIsIiIpDQoNCglJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfU0lERUJBUl9PUkRFUjMiKT1GYWxzZSBUaGVuIENhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfU0lERUJBUl9PUkRFUjMiLCIiKQ0KDQoJSWYgQmxvZ0NvbmZpZy5FeGlzdHMoIlpDX1NJREVCQVJfT1JERVI0Iik9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVI0IiwiIikNCg0KCUlmIEJsb2dDb25maWcuRXhpc3RzKCJaQ19TSURFQkFSX09SREVSNSIpPUZhbHNlIFRoZW4gQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19TSURFQkFSX09SREVSNSIsIiIpDQoNCglJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfU0lERUJBUl9PUkRFUl9PTEQiICk9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVJfT0xEIiAsIiIpDQoNCglJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfU0lERUJBUl9PUkRFUjJfT0xEIik9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVIyX09MRCIsIiIpDQoNCglJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfU0lERUJBUl9PUkRFUjNfT0xEIik9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVIzX09MRCIsIiIpDQoNCglJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfU0lERUJBUl9PUkRFUjRfT0xEIik9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVI0X09MRCIsIiIpDQoNCglJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfU0lERUJBUl9PUkRFUjVfT0xEIik9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVI1X09MRCIsIiIpDQoNCglJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfQVJDSElWRVNfT0xEX0xJU1RUWVBFIik9RmFsc2UgVGhlbiBDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX0FSQ0hJVkVTX09MRF9MSVNUVFlQRSIsIiIpDQoNCglEaW0gYSxiLGMsZCxlDQoJYj1Mb2FkRnJvbUZpbGUoQmxvZ1BhdGggJiJ6Yl91c2Vyc1xjX29wdGlvbi5hc3AiLCJ1dGYtOCIpDQoJU2V0IGQ9Q3JlYXRlT2JqZWN0KCJTY3JpcHRpbmcuRGljdGlvbmFyeSIpDQoJRm9yIEVhY2ggYSBJbiBCbG9nQ29uZmlnLk1ldGEuTmFtZXMNCgkJSWYgSW5TdHIoYiwiRGltICImIGEpPjAgVGhlbg0KCQkJSWYgYTw+IlpDX0JMT0dfVkVSU0lPTiIgQW5kIGE8PiIiIFRoZW4NCgkJCQlDYWxsIEV4ZWN1dGUoIkNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiIiImYSYiIiIsIiZhJiIpIikNCgkJCUVuZCBJZg0KCQlFbmQgSWYNCglOZXh0DQoJRXJyLkNsZWFyDQoNCglDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX0JMT0dfQ0xTSUQiLFpDX0JMT0dfQ0xTSURfT1JJR0lOQUwpDQoNCgllPSIiDQoJRm9yIEVhY2ggYSBJbiBSZXF1ZXN0LkZvcm0NCgkJZT1lICYgYSAmICJ8Ig0KCU5leHQNCg0KCUZvciBFYWNoIGEgSW4gUmVxdWVzdC5Gb3JtIA0KCQliPU1pZChhLDQsTGVuKGEpKQ0KCQlJZiBCbG9nQ29uZmlnLkV4aXN0cyhiKT1UcnVlIFRoZW4NCgkJCUlmIGI9IlpDX1VQTE9BRF9GSUxFU0laRSIgT3IgYj0iWkNfRElTUExBWV9DT1VOVCIgT3IgYj0iWkNfU0VBUkNIX0NPVU5UIiBPciBiPSJaQ19NVVRVQUxJVFlfQ09VTlQiIE9yIGI9IlpDX01VVFVBTElUWV9DT1VOVCIgT3IgYj0iWkNfQ09NTUVOVFNfRElTUExBWV9DT1VOVCIgIE9yIGI9IlpDX1JFQlVJTERfRklMRV9DT1VOVCIgIE9yIGI9IlpDX1JFQlVJTERfRklMRV9JTlRFUlZBTCIgT3IgYj0iWkNfRElTUExBWV9DT1VOVF9XQVAiICBPciBiPSJaQ19DT01NRU5UX0NPVU5UX1dBUCIgIE9yIGI9IlpDX1BBR0VCQVJfQ09VTlRfV0FQIiAgT3IgYj0iWkNfV0FQX01VVFVBTElUWV9MSU1JVCIgVGhlbg0KCQkJCWM9UmVxdWVzdC5Gb3JtKGEpDQoJCQkJQ2FsbCBDaGVja1BhcmFtZXRlcihjLCJpbnQiLDApDQoJCQkJZC5hZGQgYixDU3RyKGMpDQoJCQlFbHNlDQoJCQkJZC5hZGQgYixSZXF1ZXN0LkZvcm0oYSkNCgkJCUVuZCBJZg0KCQlFbmQgSWYNCglOZXh0DQoNCglJZiBCbG9nQ29uZmlnLlJlYWQoIlpDX1NUQVRJQ19ESVJFQ1RPUlkiKTw+ZC5JdGVtKCJaQ19TVEFUSUNfRElSRUNUT1JZIilUaGVuDQoJCUNhbGwgQ3JlYXREaXJlY3RvcnlCeUN1c3RvbURpcmVjdG9yeShkLkl0ZW0oIlpDX1NUQVRJQ19ESVJFQ1RPUlkiKSkNCgkJQ2FsbCBTZXRCbG9nSGludChFbXB0eSxFbXB0eSxUcnVlKQ0KCUVuZCBJZg0KDQoJSWYgQmxvZ0NvbmZpZy5SZWFkKCJaQ19CTE9HX0hPU1QiKTw+ZC5JdGVtKCJaQ19CTE9HX0hPU1QiKVRoZW4NCgkJSWYgTGVmdChkLkl0ZW0oIlpDX0JMT0dfSE9TVCIpLDcpPD4iaHR0cDovLyIgQW5kIExlZnQoZC5JdGVtKCJaQ19CTE9HX0hPU1QiKSw4KTw+Imh0dHBzOi8vIiBUaGVuDQoJCQlkLkl0ZW0oIlpDX0JMT0dfSE9TVCIpPSJodHRwOi8vIiAmIGQuSXRlbSgiWkNfQkxPR19IT1NUIikNCgkJRW5kIElmDQoJCUlmIFJpZ2h0KGQuSXRlbSgiWkNfQkxPR19IT1NUIiksMSk8PiIvIiBUaGVuDQoJCQlkLkl0ZW0oIlpDX0JMT0dfSE9TVCIpPWQuSXRlbSgiWkNfQkxPR19IT1NUIikgJiAiLyINCgkJRW5kIElmDQoJCUlmIGQuSXRlbSgiWkNfUEVSTUFORU5UX0RPTUFJTl9FTkFCTEUiKT0iVHJ1ZSIgVGhlbiBDYWxsIFNldEJsb2dIaW50KEVtcHR5LEVtcHR5LFRydWUpDQoJRW5kIElmDQoNCglJZiBCbG9nQ29uZmlnLlJlYWQoIlpDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFIik8PmQuSXRlbSgiWkNfUEVSTUFORU5UX0RPTUFJTl9FTkFCTEUiKSBUaGVuIENhbGwgU2V0QmxvZ0hpbnQoRW1wdHksRW1wdHksVHJ1ZSkNCglJZiBCbG9nQ29uZmlnLlJlYWQoIlpDX0JMT0dfVElUTEUiKTw+ZC5JdGVtKCJaQ19CTE9HX1RJVExFIilUaGVuIENhbGwgU2V0QmxvZ0hpbnQoRW1wdHksRW1wdHksVHJ1ZSkNCglJZiBCbG9nQ29uZmlnLlJlYWQoIlpDX0JMT0dfU1VCVElUTEUiKTw+ZC5JdGVtKCJaQ19CTE9HX1NVQlRJVExFIilUaGVuIENhbGwgU2V0QmxvZ0hpbnQoRW1wdHksRW1wdHksVHJ1ZSkNCgknSWYgQmxvZ0NvbmZpZy5SZWFkKCJaQ19CTE9HX05BTUUiKTw+ZC5JdGVtKCJaQ19CTE9HX05BTUUiKVRoZW4gQ2FsbCBTZXRCbG9nSGludChFbXB0eSxFbXB0eSxUcnVlKQ0KCSdJZiBCbG9nQ29uZmlnLlJlYWQoIlpDX0JMT0dfU1VCX05BTUUiKTw+ZC5JdGVtKCJaQ19CTE9HX1NVQl9OQU1FIilUaGVuIENhbGwgU2V0QmxvZ0hpbnQoRW1wdHksRW1wdHksVHJ1ZSkNCg0KCUlmIEJsb2dDb25maWcuUmVhZCgiWkNfQkxPR19DT1BZUklHSFQiKTw+ZC5JdGVtKCJaQ19CTE9HX0NPUFlSSUdIVCIpVGhlbiBDYWxsIFNldEJsb2dIaW50KEVtcHR5LEVtcHR5LFRydWUpDQoJSWYgQmxvZ0NvbmZpZy5SZWFkKCJaQ19CTE9HX0xBTkdVQUdFIik8PmQuSXRlbSgiWkNfQkxPR19MQU5HVUFHRSIpVGhlbiBDYWxsIFNldEJsb2dIaW50KEVtcHR5LEVtcHR5LFRydWUpDQoJSWYgQmxvZ0NvbmZpZy5SZWFkKCJaQ19CTE9HX0NPUFlSSUdIVCIpPD5kLkl0ZW0oIlpDX0JMT0dfQ09QWVJJR0hUIilUaGVuDQoJCWQuSXRlbSgiWkNfQkxPR19DT1BZUklHSFQiKT1SZXBsYWNlKFJlcGxhY2UoZC5JdGVtKCJaQ19CTE9HX0NPUFlSSUdIVCIpLHZiQ3IsIiIpLHZiTGYsIiIpDQoJCUNhbGwgU2V0QmxvZ0hpbnQoRW1wdHksRW1wdHksVHJ1ZSkNCglFbmQgSWYNCg0KCUlmIEJsb2dDb25maWcuUmVhZCgiWkNfQ09NTUVOVF9UVVJOT0ZGIik8PmQuSXRlbSgiWkNfQ09NTUVOVF9UVVJOT0ZGIilUaGVuIENhbGwgU2V0QmxvZ0hpbnQoRW1wdHksRW1wdHksVHJ1ZSkNCglJZiBCbG9nQ29uZmlnLlJlYWQoIlpDX0NPTU1FTlRfUkVWRVJTRV9PUkRFUl9FWFBPUlQiKTw+ZC5JdGVtKCJaQ19DT01NRU5UX1JFVkVSU0VfT1JERVJfRVhQT1JUIilUaGVuIENhbGwgU2V0QmxvZ0hpbnQoRW1wdHksRW1wdHksVHJ1ZSkNCglJZiBCbG9nQ29uZmlnLlJlYWQoIlpDX0NPTU1FTlRTX0RJU1BMQVlfQ09VTlQiKTw+ZC5JdGVtKCJaQ19DT01NRU5UU19ESVNQTEFZX0NPVU5UIilUaGVuIENhbGwgU2V0QmxvZ0hpbnQoRW1wdHksRW1wdHksVHJ1ZSkNCg0KCSdJZiBCbG9nQ29uZmlnLlJlYWQoIlpDX0JMT0dfQ0xTSUQiKTw+ZC5JdGVtKCJaQ19CTE9HX0NMU0lEIilUaGVuDQoJJwlJZiBDaGVja1JlZ0V4cChkLkl0ZW0oIlpDX0JMT0dfQ0xTSUQiKSwiW2d1aWRdIik9RmFsc2UgVGhlbiBkLkl0ZW0oIlpDX0JMT0dfQ0xTSUQiKT1SbmRHdWlkKCkNCgknCUNhbGwgU2V0QmxvZ0hpbnQoRW1wdHksRW1wdHksVHJ1ZSkNCgknRW5kIElmDQoNCglGb3IgRWFjaCBhIEluIGQuS2V5cw0KCQlJZiBTZWFyY2hJbkFycmF5cygiZWR0IiYgYSxTcGxpdChlLCJ8IikpPVRydWUgVGhlbg0KCQkJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKGEsZC5JdGVtKGEpKQ0KCQlFbmQgSWYNCglOZXh0DQoNCglDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX0JMT0dfTkFNRSIsQmxvZ0NvbmZpZy5SZWFkKCJaQ19CTE9HX1RJVExFIikpDQoJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19CTE9HX1NVQl9OQU1FIixCbG9nQ29uZmlnLlJlYWQoIlpDX0JMT0dfU1VCVElUTEUiKSkNCg0KCUNhbGwgU2F2ZUNvbmZpZzJPcHRpb24oKQ0KDQoJU2F2ZVNldHRpbmc9VHJ1ZQ0KDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgICBQb3N0IFRhZw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gUG9zdFRhZygpDQoNCglEaW0gb2JqVGFnDQoJU2V0IG9ialRhZz1OZXcgVFRhZw0KCW9ialRhZy5JRD1SZXF1ZXN0LkZvcm0oImVkdElEIikNCglvYmpUYWcuTmFtZT1SZXF1ZXN0LkZvcm0oImVkdE5hbWUiKQ0KCW9ialRhZy5PcmRlcj1SZXF1ZXN0LkZvcm0oImVkdE9yZGVyIikNCglvYmpUYWcuSW50cm89UmVxdWVzdC5Gb3JtKCJlZHRJbnRybyIpDQoJb2JqVGFnLkFsaWFzPVJlcXVlc3QuRm9ybSgiZWR0QWxpYXMiKQ0KCW9ialRhZy5UZW1wbGF0ZU5hbWU9UmVxdWVzdC5Gb3JtKCJlZHRUZW1wbGF0ZSIpDQoNCglJZiBDTG5nKG9ialRhZy5JRCk+MCBUaGVuIG9ialRhZy5NZXRhU3RyaW5nPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFt0YWdfTWV0YV0gRlJPTSBbYmxvZ19UYWddIFdIRVJFIFt0YWdfSURdPSImQ0xuZyhvYmpUYWcuSUQpKSgwKQ0KDQoJJ+aOpeWPow0KCUNhbGwgRmlsdGVyX1BsdWdpbl9Qb3N0VGFnX0NvcmUob2JqVGFnKQ0KDQoJSWYgb2JqVGFnLlBvc3QgVGhlbg0KCQlDYWxsIEdldFRhZ3NieVRhZ0lETGlzdCgieyImb2JqVGFnLklEJiJ9IikNCgkJQ2FsbCBTY2FuVGFnQ291bnQoInsiJm9ialRhZy5JRCYifSIpDQoJCVBvc3RUYWc9VHJ1ZQ0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fUG9zdFRhZ19TdWNjZWVkKG9ialRhZykNCglFbmQgSWYNCglTZXQgb2JqVGFnPU5vdGhpbmcNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIERlbCBUYWcNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIERlbFRhZyhpbnRJRCkNCg0KCURpbSBvYmpUYWcNCglTZXQgb2JqVGFnPU5ldyBUVGFnDQoJb2JqVGFnLklEPWludElEDQoNCglDYWxsIEdldFRhZ3NieVRhZ0lETGlzdCgieyImb2JqVGFnLklEJiJ9IikNCg0KCUlmIG9ialRhZy5EZWwgVGhlbiBEZWxUYWc9VHJ1ZQ0KCVNldCBvYmpUYWc9Tm90aGluZw0KDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgICBQb3N0IEtleVdvcmQNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIFBvc3RLZXlXb3JkKCkNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIERlbCBUYWcNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIERlbEtleVdvcmQoaW50SUQpDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8mg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gUG9zdFNpdGVGaWxlKHRwYXRoKQ0KCUlmIEluc3RyKGxjYXNlKHRwYXRoKSwiZ2xvYmFsLmFzYSIpIHRoZW4gcG9zdHNpdGVmaWxlPWZhbHNlOmV4aXQgZnVuY3Rpb24NCglEaW0gdHhhQ29udGVudA0KCXR4YUNvbnRlbnQ9UmVxdWVzdC5Gb3JtKCJ0eGFDb250ZW50IikNCg0KCUlmIElzRW1wdHkodHhhQ29udGVudCkgVGhlbiB0eGFDb250ZW50PU51bGwNCg0KCUlmIE5vdCBJc051bGwodHBhdGgpIFRoZW4NCg0KCQlJZiBOb3QgSXNOdWxsKHR4YUNvbnRlbnQpIFRoZW4NCg0KCQkJQ2FsbCBTYXZlVG9GaWxlKEJsb2dQYXRoICYgdHBhdGgsdHhhQ29udGVudCwidXRmLTgiLEZhbHNlKQ0KDQoJCQlQb3N0U2l0ZUZpbGU9VHJ1ZQ0KDQoJCUVuZCBJRg0KDQoJRW5kIElmDQoNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBEZWxTaXRlRmlsZSh0cGF0aCkNCg0KCURpbSBGc28NCglTZXQgRnNvID0gQ3JlYXRlb2JqZWN0KCJTY3JpcHRpbmcuRmlsZXN5c3RlbW9iamVjdCIpDQoJSWYgRnNvLkZpbGVFeGlzdHMoQmxvZ1BhdGggJiB0cGF0aCkgVGhlbg0KCQlGc28uRGVsZXRlZmlsZShCbG9nUGF0aCAmIHRwYXRoKQ0KCQlTZXQgRnNvID0gTm90aGluZw0KDQoJCURlbFNpdGVGaWxlPVRydWUNCg0KCQlFeGl0IEZ1bmN0aW9uDQoJRWxzZQ0KCQlTZXQgRnNvID0gTm90aGluZw0KCQlFeGl0IEZ1bmN0aW9uDQoJRW5kIElmDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8mg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gR2V0UmVhbFVybG9mVHJhY2tCYWNrVXJsKGludElEKQ0KDQoNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAg5a6h5qC46K+E6K66DQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBBdWRpdENvbW1lbnQoKQ0KDQoJT24gRXJyb3IgUmVzdW1lIE5leHQNCglEaW0gaSxqDQoJRGltIHMsdA0KCURpbSBhcnlBcnRpY2xlKCkNCglzPVJlcXVlc3QuRm9ybSgiZWR0QmF0Y2giKQ0KCUlmIGlzRW1wdHkocykgVGhlbiBzPVJlcXVlc3QuUXVlcnlTdHJpbmcoImlkIikNCglJZiBzPSJkZWxhbGwiIFRoZW4NCgkJb2JqQ29ubi5FeGVjdXRlICJERUxFVEUgRlJPTSBbYmxvZ19Db21tZW50XSBXSEVSRSBbY29tbV9pc0NoZWNrXTw+MCINCgkJQXVkaXRDb21tZW50PVRydWUNCgkJRXhpdCBGdW5jdGlvbg0KCUVuZCBJZg0KCXQ9U3BsaXQocywiLCIpDQoJDQoJUmVEaW0gUHJlc2VydmUgYXJ5QXJ0aWNsZShVQm91bmQodCkpDQoJRm9yIGo9MCBUbyBVQm91bmQodCktMQ0KCQlhcnlBcnRpY2xlKGopPTANCglOZXh0DQoNCglEaW0gb2JqQ29tbWVudA0KCURpbSBvYmpBcnRpY2xlDQoJRGltIG9ialJzDQoNCglGb3IgaT0wIFRvIFVCb3VuZCh0KSctMQ0KCQlJZiB0KGkpPSIiIFRoZW4gRXhpdCBGb3INCgkJU2V0IG9iakNvbW1lbnQ9TmV3IFRDb21tZW50DQoJCUlmIG9iakNvbW1lbnQuTG9hZEluZm9ieUlEKHQoaSkpIFRoZW4NCgkJCUlmIG9iakNvbW1lbnQubG9nX0lEPjAgVGhlbg0KCQkJCURpbSBvYmpUZXN0QXJ0aWNsZQ0KCQkJCVNldCBvYmpUZXN0QXJ0aWNsZT1OZXcgVEFydGljbGUNCgkJCQlJZiBvYmpUZXN0QXJ0aWNsZS5Mb2FkSW5mb2J5SUQob2JqQ29tbWVudC5sb2dfSUQpIFRoZW4NCg0KCQkJCQlGb3Igaj0wIFRvIFVCb3VuZCh0KQ0KCQkJCQkJSWYgYXJ5QXJ0aWNsZShqKT0wIFRoZW4NCgkJCQkJCQlhcnlBcnRpY2xlKGopPW9iakNvbW1lbnQubG9nX0lEDQoJCQkJCQlFbmQgSWYNCgkJCQkJCUlmIGFyeUFydGljbGUoaik9b2JqQ29tbWVudC5sb2dfSUQgVGhlbiBFeGl0IEZvcg0KCQkJCQlOZXh0DQoNCgkJCQkJSWYgTm90KChvYmpDb21tZW50LkF1dGhvcklEPUJsb2dVc2VyLklEKSBPciAob2JqVGVzdEFydGljbGUuQXV0aG9ySUQ9QmxvZ1VzZXIuSUQpIE9yIChDaGVja1JpZ2h0cygiUm9vdCIpPVRydWUpKSBUaGVuIEV4aXQgRnVuY3Rpb24NCgkJCQlFbHNlDQoJCQkJCUNhbGwgU2hvd0Vycm9yKDkpDQoJCQkJRW5kIElmDQoJCQkJU2V0IG9ialRlc3RBcnRpY2xlPU5vdGhpbmcNCg0KDQoJCQkJRGltIGFsbGNvbW0saWkNCgkJCQlJZiBTZWFyY2hDaGlsZENvbW1lbnRzKHQoaSksYWxsY29tbSk9VHJ1ZSBUaGVuDQoJCQkJCUZvciBFYWNoIGlpIEluIGFsbGNvbW0uS2V5cw0KCQkJCQkJRGltIG9ialN1YkNvbW1lbnQNCgkJCQkJCVNldCBvYmpTdWJDb21tZW50PU5ldyBUQ29tbWVudA0KCQkJCQkJSWYgb2JqU3ViQ29tbWVudC5Mb2FkSW5mb2J5SUQoaWkpIFRoZW4NCgkJCQkJCQlvYmpTdWJDb21tZW50LmlzQ2hlY2s9SUlmKG9ialN1YkNvbW1lbnQuaXNDaGVjayxGYWxzZSxUcnVlKQ0KCQkJCQkJCUNhbGwgRmlsdGVyX1BsdWdpbl9Db21tZW50QWR1aXRfQ29yZShvYmpTdWJDb21tZW50LFRydWUpDQoJCQkJCQkJb2JqU3ViQ29tbWVudC5Qb3N0DQoJCQkJCQlFbmQgSWYNCgkJCQkJTmV4dA0KCQkJCUVuZCBJZg0KDQoJCQlFbHNlDQoNCgkJCUVuZCBJZg0KDQoJCQlEZWxDaGlsZCBvYmpDb21tZW50LklEDQoJCQlvYmpDb21tZW50LmlzQ2hlY2s9SUlmKG9iakNvbW1lbnQuaXNDaGVjayxGYWxzZSxUcnVlKQ0KCQkJQ2FsbCBGaWx0ZXJfUGx1Z2luX0NvbW1lbnRBZHVpdF9Db3JlKG9iakNvbW1lbnQsRmFsc2UpDQoJCQlvYmpDb21tZW50LlBvc3QNCg0KCQlFbmQgSWYNCgkJU2V0IG9iakNvbW1lbnQ9Tm90aGluZw0KCU5leHQNCg0KDQoJRm9yIGo9MCBUbyBVQm91bmQodCkNCgkJSWYgYXJ5QXJ0aWNsZShqKT4wIFRoZW4NCgkJCUNhbGwgQnVpbGRBcnRpY2xlKGFyeUFydGljbGUoaiksRmFsc2UsRmFsc2UpDQoJCUVuZCBJZg0KCU5leHQNCg0KCUNhbGwgQmxvZ1JlQnVpbGRfQ29tbWVudHMNCglDYWxsIEJsb2dSZUJ1aWxkX0RlZmF1bHQNCg0KCUF1ZGl0Q29tbWVudD1UcnVlDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBEZWxDb21tZW50QmF0Y2goKQ0KCU9uIEVycm9yIFJlc3VtZSBOZXh0DQoJRGltIGksag0KCURpbSBzLHQNCglEaW0gYXJ5QXJ0aWNsZSgpDQoJcz1SZXF1ZXN0LkZvcm0oImVkdEJhdGNoIikNCgl0PVNwbGl0KHMsIiwiKQ0KDQoJUmVEaW0gUHJlc2VydmUgYXJ5QXJ0aWNsZShVQm91bmQodCkpDQoJRm9yIGo9MCBUbyBVQm91bmQodCktMQ0KCQlhcnlBcnRpY2xlKGopPTANCglOZXh0DQoNCglEaW0gb2JqQ29tbWVudA0KCURpbSBvYmpBcnRpY2xlDQoJRGltIG9ialJzDQoNCglGb3IgaT0wIFRvIFVCb3VuZCh0KS0xDQoJCVNldCBvYmpDb21tZW50PU5ldyBUQ29tbWVudA0KCQlJZiBvYmpDb21tZW50LkxvYWRJbmZvYnlJRCh0KGkpKSBUaGVuDQoJCQlJZiBvYmpDb21tZW50LmxvZ19JRD4wIFRoZW4NCgkJCQlEaW0gb2JqVGVzdEFydGljbGUNCgkJCQlTZXQgb2JqVGVzdEFydGljbGU9TmV3IFRBcnRpY2xlDQoJCQkJSWYgb2JqVGVzdEFydGljbGUuTG9hZEluZm9ieUlEKG9iakNvbW1lbnQubG9nX0lEKSBUaGVuDQoNCgkJCQkJRm9yIGo9MCBUbyBVQm91bmQodCktMQ0KCQkJCQkJSWYgYXJ5QXJ0aWNsZShqKT0wIFRoZW4NCgkJCQkJCQlhcnlBcnRpY2xlKGopPW9iakNvbW1lbnQubG9nX0lEDQoJCQkJCQlFbmQgSWYNCgkJCQkJCUlmIGFyeUFydGljbGUoaik9b2JqQ29tbWVudC5sb2dfSUQgVGhlbiBFeGl0IEZvcg0KCQkJCQlOZXh0DQoNCgkJCQkJSWYgTm90KChvYmpDb21tZW50LkF1dGhvcklEPUJsb2dVc2VyLklEKSBPciAob2JqVGVzdEFydGljbGUuQXV0aG9ySUQ9QmxvZ1VzZXIuSUQpIE9yIChDaGVja1JpZ2h0cygiUm9vdCIpPVRydWUpKSBUaGVuIEV4aXQgRnVuY3Rpb24NCgkJCQlFbHNlDQoJCQkJCUNhbGwgU2hvd0Vycm9yKDkpDQoJCQkJRW5kIElmDQoJCQkJU2V0IG9ialRlc3RBcnRpY2xlPU5vdGhpbmcNCg0KDQoJCQkJRGltIGFsbGNvbW0saWkNCgkJCQlJZiBTZWFyY2hDaGlsZENvbW1lbnRzKHQoaSksYWxsY29tbSk9VHJ1ZSBUaGVuDQoJCQkJCUZvciBFYWNoIGlpIEluIGFsbGNvbW0uS2V5cw0KCQkJCQkJRGltIG9ialN1YkNvbW1lbnQNCgkJCQkJCVNldCBvYmpTdWJDb21tZW50PU5ldyBUQ29tbWVudA0KCQkJCQkJSWYgb2JqU3ViQ29tbWVudC5Mb2FkSW5mb2J5SUQoaWkpIFRoZW4NCgkJCQkJCQlvYmpTdWJDb21tZW50LkRlbA0KCQkJCQkJRW5kIElmDQoJCQkJCU5leHQNCgkJCQlFbmQgSWYNCg0KCQkJRWxzZQ0KDQoJCQlFbmQgSWYNCg0KCQkJRGVsQ2hpbGQgb2JqQ29tbWVudC5JRA0KCQkJb2JqQ29tbWVudC5EZWwNCg0KCQlFbmQgSWYNCgkJU2V0IG9iakNvbW1lbnQ9Tm90aGluZw0KCU5leHQNCg0KDQoJRm9yIGo9MCBUbyBVQm91bmQodCktMQ0KCQlJZiBhcnlBcnRpY2xlKGopPjAgVGhlbg0KCQkJQ2FsbCBCdWlsZEFydGljbGUoYXJ5QXJ0aWNsZShqKSxGYWxzZSxGYWxzZSkNCgkJRW5kIElmDQoJTmV4dA0KDQoJQ2FsbCBCbG9nUmVCdWlsZF9Db21tZW50cw0KCUNhbGwgQmxvZ1JlQnVpbGRfRGVmYXVsdA0KDQoJRGVsQ29tbWVudEJhdGNoPVRydWUNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8mg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gRGVsQ2hpbGQoSUQpDQoJRGltIG9ialJzLHRtcFBhcmVudElELHRtcElEDQoJU2V0IG9ialJzPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIGNvbW1fUGFyZW50SUQsY29tbV9JRCBGUk9NIFtibG9nX0NvbW1lbnRdIFdIRVJFIGNvbW1fUGFyZW50SUQ9IiZJRCkNCglEbyBVbnRpbCBvYmpSUy5ib2YgT3Igb2JqUlMuZW9mDQoJCXRtcFBhcmVudElEPWNsbmcob2JqUnMoImNvbW1fUGFyZW50SUQiKSkNCgkJdG1wSUQ9Y2xuZyhvYmpScygiY29tbV9JRCIpKQ0KDQoJCUlmIHRtcFBhcmVudElEPjAgVGhlbg0KCQkJRGVsQ2hpbGQodG1wSUQpDQoJCUVuZCBJZg0KCQlvYmpDb25uLkV4ZWN1dGUgIkRFTEVURSBGUk9NIFtibG9nX0NvbW1lbnRdIFdIRVJFIGNvbW1fSUQ9IiZ0bXBJRA0KCQlvYmpSUy5Nb3ZlTmV4dA0KCUxvb3ANCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8mg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gRGVsVHJhY2tCYWNrQmF0Y2goKQ0KDQoJRGltIGksag0KCURpbSBzLHQNCglEaW0gYXJ5QXJ0aWNsZSgpDQoJcz1SZXF1ZXN0LkZvcm0oImVkdEJhdGNoIikNCgl0PVNwbGl0KHMsIiwiKQ0KDQoJUmVEaW0gUHJlc2VydmUgYXJ5QXJ0aWNsZShVQm91bmQodCkpDQoJRm9yIGo9MCBUbyBVQm91bmQodCktMQ0KCQlhcnlBcnRpY2xlKGopPTANCglOZXh0DQoNCglEaW0gb2JqVHJhY2tCYWNrDQoJRGltIG9iakFydGljbGUNCg0KCVNldCBvYmpBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KDQoNCglGb3IgaT0wIFRvIFVCb3VuZCh0KS0xDQoJCVNldCBvYmpUcmFja0JhY2s9TmV3IFRUcmFja0JhY2sNCgkJSWYgb2JqVHJhY2tCYWNrLkxvYWRJbmZvYnlJRCh0KGkpKSBUaGVuDQoJCQlEaW0gb2JqVGVzdEFydGljbGUNCgkJCVNldCBvYmpUZXN0QXJ0aWNsZT1OZXcgVEFydGljbGUNCgkJCUlmIG9ialRlc3RBcnRpY2xlLkxvYWRJbmZvYnlJRChvYmpUcmFja0JhY2subG9nX0lEKSBUaGVuDQoNCgkJCQlGb3Igaj0wIFRvIFVCb3VuZCh0KS0xDQoJCQkJCUlmIGFyeUFydGljbGUoaik9MCBUaGVuDQoJCQkJCQlhcnlBcnRpY2xlKGopPW9ialRyYWNrQmFjay5sb2dfSUQNCgkJCQkJRW5kIElmDQoJCQkJCUlmIGFyeUFydGljbGUoaik9b2JqVHJhY2tCYWNrLmxvZ19JRCBUaGVuIEV4aXQgRm9yDQoJCQkJTmV4dA0KDQoJCQkJSWYgTm90KChvYmpUZXN0QXJ0aWNsZS5BdXRob3JJRD1CbG9nVXNlci5JRCkgT3IgKENoZWNrUmlnaHRzKCJSb290Iik9VHJ1ZSkpIFRoZW4gRXhpdCBGdW5jdGlvbg0KCQkJRWxzZQ0KCQkJCUNhbGwgU2hvd0Vycm9yKDkpDQoJCQlFbmQgSWYNCgkJCVNldCBvYmpUZXN0QXJ0aWNsZT1Ob3RoaW5nDQoJCQlvYmpUcmFja0JhY2suRGVsDQoJCUVuZCBJZg0KCQlTZXQgb2JqVHJhY2tCYWNrPU5vdGhpbmcNCglOZXh0DQoNCg0KCUZvciBqPTAgVG8gVUJvdW5kKHQpLTENCgkJSWYgYXJ5QXJ0aWNsZShqKT4wIFRoZW4NCgkJCUNhbGwgQnVpbGRBcnRpY2xlKGFyeUFydGljbGUoaiksRmFsc2UsRmFsc2UpDQoJCUVuZCBJZg0KCU5leHQNCg0KCUJsb2dSZUJ1aWxkX1RyYWNrQmFja3MNCglEZWxUcmFja0JhY2tCYXRjaD1UcnVlDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgICAg5paH5Lu25Yig6ZmkDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBEZWxGaWxlQmF0Y2goKQ0KDQoJRGltIGksag0KCURpbSBzLHQNCg0KCXM9UmVxdWVzdC5Gb3JtKCJlZHRCYXRjaCIpDQoJdD1TcGxpdChzLCIsIikNCg0KCURpbSBvYmpVcExvYWRGaWxlDQoNCglGb3IgaT0wIFRvIFVCb3VuZCh0KS0xDQoJCXQoaSk9Q0xuZyh0KGkpKQ0KCQlJZiB0KGkpPjAgVGhlbg0KCQkJU2V0IG9ialVwTG9hZEZpbGU9TmV3IFRVcExvYWRGaWxlDQoJCQlJZiBvYmpVcExvYWRGaWxlLkxvYWRJbmZvQnlJRCh0KGkpKSBUaGVuDQoJCQkJSWYgKG9ialVwTG9hZEZpbGUuQXV0aG9ySUQ9QmxvZ1VzZXIuSUQpIE9yIChDaGVja1JpZ2h0cygiUm9vdCIpPVRydWUpIFRoZW4NCgkJCQkJb2JqVXBMb2FkRmlsZS5EZWwNCgkJCQlFbmQgSWYNCgkJCUVsc2UNCgkJCQlFeGl0IEZ1bmN0aW9uDQoJCQlFbmQgSWYNCgkJCVNldCBvYmpVcExvYWRGaWxlPU5vdGhpbmcNCgkJRW5kIElmDQoJTmV4dA0KDQoJRGVsRmlsZUJhdGNoPVRydWUNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIFNhdmUgVGhlbWUgU2V0dGluZw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gU2F2ZVRoZW1lKCkNCg0KCURpbSBpLGoNCglEaW0gcyx0DQoNCglEaW0gc3RyWkNfQkxPR19DU1MNCglEaW0gc3RyWkNfQkxPR19USEVNRQ0KDQoJc3RyWkNfQkxPR19DU1M9UmVxdWVzdC5Gb3JtKCJlZHRaQ19CTE9HX0NTUyIpDQoJc3RyWkNfQkxPR19USEVNRT1SZXF1ZXN0LkZvcm0oImVkdFpDX0JMT0dfVEhFTUUiKQ0KDQoJQ2FsbCBDaGVja1htbFZlcnNpb24oQmxvZ1BhdGggJiAiemJfdXNlcnNcVEhFTUVcIiZzdHJaQ19CTE9HX1RIRU1FJiJcdGhlbWUueG1sIikNCg0KCUNhbGwgU2NhblBsdWdpblRvVGhlbWVGaWxlKHN0clpDX0JMT0dfQ1NTLHN0clpDX0JMT0dfVEhFTUUpDQoNCglJZiBVQ2FzZShzdHJaQ19CTE9HX0NTUyk8PlVDYXNlKENTdHIoWkNfQkxPR19DU1MpKSBUaGVuIENhbGwgU2V0QmxvZ0hpbnQoRW1wdHksVHJ1ZSxFbXB0eSkNCglJZiBVQ2FzZShzdHJaQ19CTE9HX1RIRU1FKTw+VUNhc2UoQ1N0cihaQ19CTE9HX1RIRU1FKSkgVGhlbg0KCQlDYWxsIFNldEJsb2dIaW50KEVtcHR5LFRydWUsVHJ1ZSkNCgkJQ2FsbCBVbmluc3RhbGxQbHVnaW4oWkNfQkxPR19USEVNRSkNCgkJQ2FsbCBTY2FuRnVuY3Rpb25BbmRTaWRlYmFyVG9UaGVtZUZpbGUoc3RyWkNfQkxPR19USEVNRSkNCg0KCQlDYWxsIEdldEZ1bmN0aW9uKCkNCgkJRGltIGZ1bg0KCQlEaW0gRnNvDQoJCUZvciBFYWNoIGZ1biBJbiBGdW5jdGlvbnMNCgkJCUlmIElzT2JqZWN0KGZ1bik9VHJ1ZSBUaGVuDQoJCQkJSWYgZnVuLlNvdXJjZT0idGhlbWVfIiZaQ19CTE9HX1RIRU1FIFRoZW4NCgkJCQkJZnVuLkRlbA0KCQkJCUVuZCBJZg0KCQkJRW5kIElmDQoJCU5leHQNCgkNCglFbmQgSWYNCg0KCUNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfQkxPR19DU1MiLHN0clpDX0JMT0dfQ1NTKQ0KDQoJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19CTE9HX1RIRU1FIixzdHJaQ19CTE9HX1RIRU1FKQ0KDQoJQ2FsbCBTYXZlQ29uZmlnMk9wdGlvbigpDQoNCglDYWxsIENsZWFyR2xvYmVDYWNoZQ0KDQoJU2F2ZVRoZW1lPVRydWUNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBTY2FuRnVuY3Rpb25BbmRTaWRlYmFyVG9UaGVtZUZpbGUobmV3WkNfQkxPR19USEVNRSkNCglPbiBFcnJvciBSZXN1bWUgTmV4dA0KDQoJRGltIG9ialhtbEZpbGUsc3RyWG1sRmlsZSxzLHQNCg0KCURpbSBvbGRTQjEsb2xkU0IyLG9sZFNCMyxvbGRTQjQsb2xkU0I1DQoNCglzdHJYbWxGaWxlID1CbG9nUGF0aCAmICJ6Yl91c2Vycy90aGVtZS8iICYgbmV3WkNfQkxPR19USEVNRSAmICIvIiAmICJ0aGVtZS54bWwiDQoNCglTZXQgb2JqWG1sRmlsZT1TZXJ2ZXIuQ3JlYXRlT2JqZWN0KCJNaWNyb3NvZnQuWE1MRE9NIikNCglvYmpYbWxGaWxlLmFzeW5jID0gRmFsc2UNCglvYmpYbWxGaWxlLlZhbGlkYXRlT25QYXJzZT1GYWxzZQ0KCW9ialhtbEZpbGUubG9hZChzdHJYbWxGaWxlKQ0KCUlmIG9ialhtbEZpbGUucmVhZHlTdGF0ZT00IFRoZW4NCgkJSWYgb2JqWG1sRmlsZS5wYXJzZUVycm9yLmVycm9yQ29kZSA8PiAwIFRoZW4NCgkJRWxzZQ0KCQkJSWYgb2JqWG1sRmlsZS5kb2N1bWVudEVsZW1lbnQuc2VsZWN0Tm9kZXMoInNpZGViYXJzL3NpZGViYXIxIikubGVuZ3RoPjAgVGhlbg0KCQkJCW9sZFNCMT1aQ19TSURFQkFSX09SREVSDQoJCQkJSWYgb2xkU0IxPSIiIFRoZW4gb2xkU0IxPSIgIg0KCQkJCUNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfU0lERUJBUl9PUkRFUl9PTEQiLG9sZFNCMSkNCgkJCQlDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVIiLG9ialhtbEZpbGUuZG9jdW1lbnRFbGVtZW50LnNlbGVjdFNpbmdsZU5vZGUoInNpZGViYXJzL3NpZGViYXIxIikudGV4dCkgDQoJCQlFbHNlDQoJCQkJb2xkU0IxPUJsb2dDb25maWcuUmVhZCgiWkNfU0lERUJBUl9PUkRFUl9PTEQiKQ0KCQkJCUlmIG9sZFNCMTw+IiIgVGhlbg0KCQkJCQlJZiBvbGRTQjE9IiAiIFRoZW4gb2xkU0IxPSIiDQoJCQkJCUNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfU0lERUJBUl9PUkRFUiIsb2xkU0IxKQ0KCQkJCQlDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVJfT0xEIiwiIikNCgkJCQlFbmQgSWYNCgkJCUVuZCBJZg0KCQkJSWYgb2JqWG1sRmlsZS5kb2N1bWVudEVsZW1lbnQuc2VsZWN0Tm9kZXMoInNpZGViYXJzL3NpZGViYXIyIikubGVuZ3RoPjAgVGhlbg0KCQkJCW9sZFNCMj1aQ19TSURFQkFSX09SREVSMg0KCQkJCUlmIG9sZFNCMj0iIiBUaGVuIG9sZFNCMj0iICINCgkJCQlDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVIyX09MRCIsb2xkU0IyKQ0KCQkJCUNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfU0lERUJBUl9PUkRFUjIiLG9ialhtbEZpbGUuZG9jdW1lbnRFbGVtZW50LnNlbGVjdFNpbmdsZU5vZGUoInNpZGViYXJzL3NpZGViYXIyIikudGV4dCkNCgkJCUVsc2UNCgkJCQlvbGRTQjI9QmxvZ0NvbmZpZy5SZWFkKCJaQ19TSURFQkFSX09SREVSMl9PTEQiKQ0KCQkJCUlmIG9sZFNCMjw+IiIgVGhlbg0KCQkJCQlJZiBvbGRTQjI9IiAiIFRoZW4gb2xkU0IyPSIiDQoJCQkJCUNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfU0lERUJBUl9PUkRFUjIiLG9sZFNCMikNCgkJCQkJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19TSURFQkFSX09SREVSMl9PTEQiLCIiKQ0KCQkJCUVuZCBJZg0KCQkJRW5kIElmDQoJCQlJZiBvYmpYbWxGaWxlLmRvY3VtZW50RWxlbWVudC5zZWxlY3ROb2Rlcygic2lkZWJhcnMvc2lkZWJhcjMiKS5sZW5ndGg+MCBUaGVuDQoJCQkJb2xkU0IzPVpDX1NJREVCQVJfT1JERVIzDQoJCQkJSWYgb2xkU0IzPSIiIFRoZW4gb2xkU0IzPSIgIg0KCQkJCUNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfU0lERUJBUl9PUkRFUjNfT0xEIixvbGRTQjMpDQoJCQkJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19TSURFQkFSX09SREVSMyIsb2JqWG1sRmlsZS5kb2N1bWVudEVsZW1lbnQuc2VsZWN0U2luZ2xlTm9kZSgic2lkZWJhcnMvc2lkZWJhcjMiKS50ZXh0KQ0KCQkJRWxzZQ0KCQkJCW9sZFNCMz1CbG9nQ29uZmlnLlJlYWQoIlpDX1NJREVCQVJfT1JERVIzX09MRCIpDQoJCQkJSWYgb2xkU0IzPD4iIiBUaGVuDQoJCQkJCUlmIG9sZFNCMz0iICIgVGhlbiBvbGRTQjM9IiINCgkJCQkJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19TSURFQkFSX09SREVSMyIsb2xkU0IzKQ0KCQkJCQlDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVIzX09MRCIsIiIpDQoJCQkJRW5kIElmDQoJCQlFbmQgSWYNCgkJCUlmIG9ialhtbEZpbGUuZG9jdW1lbnRFbGVtZW50LnNlbGVjdE5vZGVzKCJzaWRlYmFycy9zaWRlYmFyNCIpLmxlbmd0aD4wIFRoZW4NCgkJCQlvbGRTQjQ9WkNfU0lERUJBUl9PUkRFUjQNCgkJCQlJZiBvbGRTQjQ9IiIgVGhlbiBvbGRTQjQ9IiAiDQoJCQkJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19TSURFQkFSX09SREVSNF9PTEQiLG9sZFNCNCkNCgkJCQlDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVI0IixvYmpYbWxGaWxlLmRvY3VtZW50RWxlbWVudC5zZWxlY3RTaW5nbGVOb2RlKCJzaWRlYmFycy9zaWRlYmFyNCIpLnRleHQpDQoJCQlFbHNlDQoJCQkJb2xkU0I0PUJsb2dDb25maWcuUmVhZCgiWkNfU0lERUJBUl9PUkRFUjRfT0xEIikNCgkJCQlJZiBvbGRTQjQ8PiIiIFRoZW4NCgkJCQkJSWYgb2xkU0I0PSIgIiBUaGVuIG9sZFNCND0iIg0KCQkJCQlDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVI0IixvbGRTQjQpDQoJCQkJCUNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfU0lERUJBUl9PUkRFUjRfT0xEIiwiIikNCgkJCQlFbmQgSWYNCgkJCUVuZCBJZg0KCQkJSWYgb2JqWG1sRmlsZS5kb2N1bWVudEVsZW1lbnQuc2VsZWN0Tm9kZXMoInNpZGViYXJzL3NpZGViYXI1IikubGVuZ3RoPjAgVGhlbg0KCQkJCW9sZFNCNT1aQ19TSURFQkFSX09SREVSNQ0KCQkJCUlmIG9sZFNCNT0iIiBUaGVuIG9sZFNCNT0iICINCgkJCQlDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1NJREVCQVJfT1JERVI1X09MRCIsb2xkU0I1KQ0KCQkJCUNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfU0lERUJBUl9PUkRFUjUiLG9ialhtbEZpbGUuZG9jdW1lbnRFbGVtZW50LnNlbGVjdFNpbmdsZU5vZGUoInNpZGViYXJzL3NpZGViYXI1IikudGV4dCkNCgkJCUVsc2UNCgkJCQlvbGRTQjU9QmxvZ0NvbmZpZy5SZWFkKCJaQ19TSURFQkFSX09SREVSNV9PTEQiKQ0KCQkJCUlmIG9sZFNCNTw+IiIgVGhlbg0KCQkJCQlJZiBvbGRTQjU9IiAiIFRoZW4gb2xkU0I1PSIiDQoJCQkJCUNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfU0lERUJBUl9PUkRFUjUiLG9sZFNCNSkNCgkJCQkJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19TSURFQkFSX09SREVSNV9PTEQiLCIiKQ0KCQkJCUVuZCBJZg0KCQkJRW5kIElmDQoNCgkJCURpbSBvYmpYbWxpdGVtcyxpdGVtDQoJCQlTZXQgb2JqWG1saXRlbXM9b2JqWG1sRmlsZS5kb2N1bWVudEVsZW1lbnQuU2VsZWN0Tm9kZXMoImZ1bmN0aW9ucy9mdW5jdGlvbiIpDQoJCQlmb3IgZWFjaCBpdGVtIGluIG9ialhtbGl0ZW1zDQoNCgkJCQlDYWxsIEFkZFRoZW1lRnVuY3Rpb24obmV3WkNfQkxPR19USEVNRSxpdGVtLmdldEF0dHJpYnV0ZSgibmFtZSIpLGl0ZW0uZ2V0QXR0cmlidXRlKCJmaWxlbmFtZSIpLGl0ZW0uZ2V0QXR0cmlidXRlKCJodG1saWQiKSxpdGVtLmdldEF0dHJpYnV0ZSgiZnR5cGUiKSxpdGVtLmdldEF0dHJpYnV0ZSgibWF4bGkiKSxpdGVtLmdldEF0dHJpYnV0ZSgiaGlkZXRpdGxlIiksaXRlbS50ZXh0KQ0KDQoJCQlOZXh0DQoNCgkJRW5kIElmDQoJRW5kIElmDQoJU2V0IG9ialhtbEZpbGU9Tm90aGluZw0KDQoJRXJyLkNsZWFyDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgU2F2ZSBMaW5rcw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gU2F2ZUxpbmsoKQ0KDQoJU2F2ZUxpbms9VHJ1ZQ0KDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgQWN0aXZlUGx1Z0luIEJ5IE5hbWUNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIEFjdGl2ZVBsdWdJbkJ5TmFtZShzdHJQbHVnaW5OYW1lKQ0KDQoJQ2FsbCBDaGVja1htbFZlcnNpb24oQmxvZ1BhdGggJiAiemJfdXNlcnNcUExVR0lOXCImc3RyUGx1Z2luTmFtZSYiXHBsdWdpbi54bWwiKQ0KDQoJRGltIHMsaSx0LGIsYSxhcnlBbGxYbWwsc3RyQ29udGVudA0KCWI9RmFsc2UNCglzPSBaQ19VU0lOR19QTFVHSU5fTElTVA0KDQoJSWYgcz0iIiBUaGVuDQoJCXM9c3RyUGx1Z2luTmFtZQ0KCUVsc2UNCgkJdD1TcGxpdChaQ19VU0lOR19QTFVHSU5fTElTVCwifCIpDQoJCUZvciBpPUxCb3VuZCh0KSBUbyBVQm91bmQodCkNCgkJCUlmIFVDYXNlKHQoaSkpPVVDYXNlKHN0clBsdWdpbk5hbWUpIFRoZW4NCgkJCQliPVRydWUNCgkJCUVuZCBJZg0KCQlOZXh0DQoJCUlmIGI8PlRydWUgVGhlbg0KCQkJcz1zICYgInwiICYgc3RyUGx1Z2luTmFtZQ0KCQlFbmQgSWYNCglFbmQgSWYNCgkNCglhcnlBbGxYbWw9R2V0QWxsWG1sUGF0aChzKQ0KCQ0KCUlmIGI9RmFsc2UgVGhlbg0KCQkn6LWw6LW377yBCQ0KCQkn56ysMeatpe+8muWIpOaWreS+nei1lgkNCg0KCQlJZiBDaGVja0RlcGVuZGVuY3koWkNfVVNJTkdfUExVR0lOX0xJU1Qsc3RyUGx1Z2luTmFtZSk9RmFsc2UgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCSfnrKwy5q2l77ya5b6X5Yiw5omA5pyJ5o+S5Lu2WE1M5paH5Lu257ud5a+55Zyw5Z2ADQoJCQ0KCQkn56ysM+atpe+8muivu+WPluaJgOaciVhNTOaWh+S7tg0KCQlzdHJDb250ZW50PUNoZWNrQ29uZmxpY3RSZVdyaXRlQW5kVG9GaWxlKHN0clBsdWdpbk5hbWUsYXJ5QWxsWG1sLFRydWUpDQoJCUlmIHN0ckNvbnRlbnQoMCk9RmFsc2UgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCSfnrKw05q2l77ya5Yik5pat5Yay56qBDQoJCSfnrKw15q2l77ya5Yik5pat6YeN5YaZDQoJRWxzZQ0KCQlzdHJDb250ZW50PUNoZWNrQ29uZmxpY3RSZVdyaXRlQW5kVG9GaWxlKHN0clBsdWdpbk5hbWUsYXJ5QWxsWG1sLEZhbHNlKQ0KCUVuZCBJZg0KDQoJRGltIHN0clpDX1VTSU5HX1BMVUdJTl9MSVNUDQoJDQoJc3RyWkNfVVNJTkdfUExVR0lOX0xJU1Q9cw0KDQoJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19VU0lOR19QTFVHSU5fTElTVCIsc3RyWkNfVVNJTkdfUExVR0lOX0xJU1QpDQoNCglDYWxsIFNhdmVDb25maWcyT3B0aW9uKCkNCg0KCUNhbGwgU2NhblBsdWdpblRvSW5jbHVkZUZpbGUoc3RyQ29udGVudCgyKSkNCg0KCWE9TG9hZEZyb21GaWxlKEJsb2dQYXRoICYgInpiX3VzZXJzXFBMVUdJTlwiJiBzdHJQbHVnaW5OYW1lICYiXGluY2x1ZGUuYXNwIiwidXRmLTgiKQ0KDQoJSWYgSW5TdHIoTENhc2UoYSksTENhc2UoIkluc3RhbGxQbHVnaW5fIikpPjAgVGhlbg0KCQlDYWxsIEFkZEJhdGNoKFpDX01TRzIwMiAmIHN0clBsdWdpbk5hbWUsIkNhbGwgSW5zdGFsbFBsdWdpbigiIiImc3RyUGx1Z2luTmFtZSYiIiIpIikNCglFbmQgSWYNCg0KCUFjdGl2ZVBsdWdJbkJ5TmFtZT1UcnVlDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgIOajgOafpVhNTOeJiOacrA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gQ2hlY2tYbWxWZXJzaW9uKHhtbHBhdGgpDQoJRGltIHN0clhtbEZpbGUsb2JqWG1sRmlsZQ0KCVNldCBvYmpYbWxGaWxlPVNlcnZlci5DcmVhdGVPYmplY3QoIk1pY3Jvc29mdC5YTUxET00iKQ0KCW9ialhtbEZpbGUuYXN5bmMgPSBGYWxzZQ0KCW9ialhtbEZpbGUuVmFsaWRhdGVPblBhcnNlPUZhbHNlDQoJb2JqWG1sRmlsZS5sb2FkKHhtbHBhdGgpDQoJSWYgb2JqWG1sRmlsZS5yZWFkeVN0YXRlPTQgVGhlbg0KCQlJZiBvYmpYbWxGaWxlLnBhcnNlRXJyb3IuZXJyb3JDb2RlIDw+IDAgVGhlbg0KCQlFbHNlDQoJCQlJZiBvYmpYbWxGaWxlLmRvY3VtZW50RWxlbWVudC5nZXRBdHRyaWJ1dGUoInZlcnNpb24iKTw+IjIuMCIgVGhlbg0KCQkJCUNhbGwgU2V0QmxvZ0hpbnRfQ3VzdG9tKFpWQV9FcnJvck1zZyg2NCkpDQoJCQkJUmVzcG9uc2UuUmVkaXJlY3QgUmVxdWVzdC5TZXJ2ZXJWYXJpYWJsZXMoIkh0dHBfUmVmZXJlciIpDQoJCQlFbmQgSWYNCgkJRW5kIElmDQoJRW5kIElmDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgIOmqjOivgeS+nei1lg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gQ2hlY2tEZXBlbmRlbmN5KHN0clBsdWdpbkxpc3Qsc3RyTmFtZSkNCglDaGVja0RlcGVuZGVuY3k9VHJ1ZQ0KCURpbSBzdHJUZW1wLHNwdFRlbXANCglzdHJUZW1wPVVDYXNlKCJ8IiZzdHJQbHVnaW5MaXN0JiJ8IikgJ+W+l+WIsOWFqOmDqOWQr+eUqOeahOaPkuS7tuWIl+ihqOS7peS+v0luU3RyDQoJRGltIG9ialhtbA0KCVNldCBvYmpYbWw9Q3JlYXRlT2JqZWN0KCJNaWNyb3NvZnQuWE1MRE9NIikJDQoJb2JqWG1sLmFzeW5jID0gRmFsc2UNCglvYmpYbWwuVmFsaWRhdGVPblBhcnNlPUZhbHNlDQoJb2JqWG1sLkxvYWQoQmxvZ1BhdGggJiAiemJfdXNlcnNccGx1Z2luXCIgJiBzdHJOYW1lICYgIlxwbHVnaW4ueG1sIikNCglzcHRUZW1wPVNwbGl0KFVDYXNlKFRyeVRvR2V0QWR2YW5jZWQob2JqWG1sLCJkZXBlbmRlbmN5IikpLCJ8IikNCglEaW0gaQ0KCURpbSBOb3RJbnN0YWxsZWRQbHVnaW4sYm9sTm90SW5zdGFsbA0KCUZvciBpPTAgVG8gVWJvdW5kKHNwdFRlbXApDQoJCUlmIEluU3RyKHN0clRlbXAsInwiJnNwdFRlbXAoaSkmInwiKTw9MCBUaGVuDQoJCQlOb3RJbnN0YWxsZWRQbHVnaW49Tm90SW5zdGFsbGVkUGx1Z2luICYgc3B0VGVtcChpKSAmICIgIg0KCQkJYm9sTm90SW5zdGFsbD1UcnVlDQoJCUVuZCBJZg0KCU5leHQNCglJZiBib2xOb3RJbnN0YWxsIFRoZW4NCgkJU2V0QmxvZ0hpbnRfQ3VzdG9tIFpDX01TRzI4MiAmIE5vdEluc3RhbGxlZFBsdWdpbg0KCQlDaGVja0RlcGVuZGVuY3k9RmFsc2UNCglFbmQgSWYNCglTZXQgb2JqWG1sPU5vdGhpbmcNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgIOWBnOeUqOaXtumqjOivgeS+nei1lg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gQ2hlY2tEZXBlbmRlbmN5RGlzYWJsZShhcnlQbHVnaW5MaXN0LHN0clBsdWdpbk5hbWUpDQoNCglEaW0gc3RyWG1sRmlsZSxvYmpYbWxGaWxlDQoJRGltIHN0ckRlcGVuZGVuY3ksc3RyUmV0dXJuRGVwZW5kZW5jeSxib2xEZXBlbmRlbmN5LHN0ckluY2x1ZGUsc3RySUQNCglEaW0gYXJ5Ug0KCURpbSBqLGksaw0KCWJvbERlcGVuZGVuY3k9RmFsc2UNCgkNCglTZXQgb2JqWG1sRmlsZT1TZXJ2ZXIuQ3JlYXRlT2JqZWN0KCJNaWNyb3NvZnQuWE1MRE9NIikNCglvYmpYbWxGaWxlLmFzeW5jID0gRmFsc2UNCglvYmpYbWxGaWxlLlZhbGlkYXRlT25QYXJzZT1GYWxzZQ0KCSdTdG9wDQoJRm9yIGo9MCBUbyBVYm91bmQoYXJ5UGx1Z2luTGlzdCkNCgkJc3RyWG1sRmlsZSA9YXJ5UGx1Z2luTGlzdChqKQ0KCQlvYmpYbWxGaWxlLmxvYWQoc3RyWG1sRmlsZSkNCgkJSWYgb2JqWG1sRmlsZS5yZWFkeVN0YXRlPTQgVGhlbg0KCQkJSWYgb2JqWG1sRmlsZS5wYXJzZUVycm9yLmVycm9yQ29kZSA8PiAwIFRoZW4NCgkJCUVsc2UNCgkJCQlzdHJJRD1vYmpYbWxGaWxlLmRvY3VtZW50RWxlbWVudC5zZWxlY3RTaW5nbGVOb2RlKCJpZCIpLnRleHQNCgkJCQlzdHJJbmNsdWRlPW9ialhtbEZpbGUuZG9jdW1lbnRFbGVtZW50LnNlbGVjdFNpbmdsZU5vZGUoImluY2x1ZGUiKS50ZXh0DQoJCQkJc3RyRGVwZW5kZW5jeT1TcGxpdChVQ2FzZShUcnlUb0dldEFkdmFuY2VkKG9ialhtbEZpbGUsImRlcGVuZGVuY3kiKSksInwiKQ0KCQkJCUlmIFRyaW0oc3RySW5jbHVkZSk8PiIiIFRoZW4NCgkJCQkJSWYgTGVuKExvYWRGcm9tRmlsZShCbG9nUGF0aCAmICJ6Yl91c2Vycy9wbHVnaW4vIiAmIHN0cklEICYgIi8iICYgc3RySW5jbHVkZSwidXRmLTgiKSk+MCBUaGVuDQoJCQkJCQlGb3IgaT0wIFRvIFVib3VuZChzdHJEZXBlbmRlbmN5KQ0KCQkJCQkJCUlmIHN0ckRlcGVuZGVuY3koaSk9VUNhc2Uoc3RyUGx1Z2luTmFtZSkgVGhlbg0KCQkJCQkJCQlzdHJSZXR1cm5EZXBlbmRlbmN5PXN0clJldHVybkRlcGVuZGVuY3kgJiBzdHJJRCAmICIgIg0KCQkJCQkJCQlpPVVib3VuZChzdHJEZXBlbmRlbmN5KSsxDQoJCQkJCQkJCWJvbERlcGVuZGVuY3k9VHJ1ZQ0KCQkJCQkJCUVuZCBJZg0KCQkJCQkJTmV4dA0KCQkJCQlFbmQgSWYNCgkJCQlFbmQgSWYNCgkJCUVuZCBJZg0KCQlFbmQgSWYNCglOZXh0DQoJSWYgYm9sRGVwZW5kZW5jeSBUaGVuIFNldEJsb2dIaW50X0N1c3RvbSBaQ19NU0cyODMgJiBzdHJSZXR1cm5EZXBlbmRlbmN5DQoJQ2hlY2tEZXBlbmRlbmN5RGlzYWJsZT1Ob3QoYm9sRGVwZW5kZW5jeSkNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgIOW+l+WIsOWFqOmDqFhNTOWcsOWdgA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gR2V0QWxsWG1sUGF0aChuZXdaQ19VU0lOR19QTFVHSU5fTElTVCkNCg0KCURpbSBhcnlQTCxpLGoscyx0DQoJYXJ5UEw9U3BsaXQobmV3WkNfVVNJTkdfUExVR0lOX0xJU1QsInwiKQ0KDQoJSWYgbmV3WkNfVVNJTkdfUExVR0lOX0xJU1Q8PiIiIFRoZW4NCgkJaT1VQm91bmQoYXJ5UEwpDQoJRWxzZQ0KCQlpPTANCgkJR2V0QWxsWG1sUGF0aD1hcnlQTA0KCQlFeGl0IEZ1bmN0aW9uDQoJRW5kIElmDQoNCglEaW0gZnNvLCBmLCBmMSwgZmMNCglEaW0gYXJ5WG1sRmlsZSgpDQoJUmVkaW0gYXJ5WG1sRmlsZSgtMSkNCglTZXQgZnNvID0gQ3JlYXRlT2JqZWN0KCJTY3JpcHRpbmcuRmlsZVN5c3RlbU9iamVjdCIpDQoJU2V0IGYgPSBmc28uR2V0Rm9sZGVyKEJsb2dQYXRoICYgInpiX3VzZXJzL3BsdWdpbi8iKQ0KCVNldCBmYyA9IGYuU3ViRm9sZGVycw0KCUZvciBqPTAgVG8gaQ0KCQlJZiBmc28uRmlsZUV4aXN0cyhCbG9nUGF0aCAmICJ6Yl91c2Vycy9wbHVnaW4vIiAmIGFyeVBMKGopICYgIi8iICYgInBsdWdpbi54bWwiKSBUaGVuDQoJCQlJZiBDaGVja1BsdWdpblN0YXRlQnlOZXdWYWx1ZShhcnlQTChqKSxuZXdaQ19VU0lOR19QTFVHSU5fTElTVCkgVGhlbg0KCQkJCVJlZGltIFByZXNlcnZlIGFyeVhtbEZpbGUoVWJvdW5kKGFyeVhtbEZpbGUpKzEpDQoJCQkJYXJ5WG1sRmlsZShVYm91bmQoYXJ5WG1sRmlsZSkpPUJsb2dQYXRoICYgInpiX3VzZXJzL3BsdWdpbi8iICYgYXJ5UEwoaikgJiAiLyIgJiAicGx1Z2luLnhtbCINCgkJCUVuZCBJZg0KCQlFbmQgSWYNCglOZXh0DQoJR2V0QWxsWG1sUGF0aD1hcnlYbWxGaWxlDQoJU2V0IGY9Tm90aGluZw0KCVNldCBmc289Tm90aGluZw0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICDlhbzlrrnogIHniYjmnKxaLUJMT0cyLjDvvIzpmLLmraLlh7rplJkNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIFRyeVRvR2V0QWR2YW5jZWQob2JqWG1sLHNpbmdsZU5vZGUpDQoJT24gRXJyb3IgUmVzdW1lIE5leHQNCglUcnlUb0dldEFkdmFuY2VkPSIiDQoJVHJ5VG9HZXRBZHZhbmNlZD1vYmpYbWwuZG9jdW1lbnRFbGVtZW50LnNlbGVjdFNpbmdsZU5vZGUoImFkdmFuY2VkLyImc2luZ2xlTm9kZSkudGV4dA0KCUVyci5DbGVhcg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICDpqozor4HlhrLnqoHjgIHph43lhpnku6Xlj4rlhpnlhaXmlofku7bjgJDlpb3nu5Xlj6PvvIzmnJvlpKnjgJENCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIENoZWNrQ29uZmxpY3RSZVdyaXRlQW5kVG9GaWxlKHN0clBsdWdpbk5hbWUsYXJ5RmlsZVBhdGgsYm9sQ2hlY2spDQoJRGltIFJldHVybkFycmF5KDIpDQoJUmV0dXJuQXJyYXkoMCk9VHJ1ZSAgJ0NvbmZsaWN0DQoJUmV0dXJuQXJyYXkoMSk9VHJ1ZSAgJ1JlV3JpdGUNCglSZXR1cm5BcnJheSgyKT1GYWxzZSAnR2V0VGV4dA0KCURpbSBzdHJYbWxGaWxlLG9ialhtbEZpbGUsYXJ5Sm9pblRleHQsc3RySUQsc3RySW5jbHVkZSxzdHJDb25mbGljdCxzdHJSZXdyaXRlDQoJRGltIHRoaXNSZXdyaXRlLHRoaXNDb25mbGljdA0KCURpbSBzdHJSZXNwb25zZUNvbmZsaWN0LHN0clJlc3BvbnNlUmV3cml0ZQ0KCURpbSBhcnlSDQoJUmVkaW0gYXJ5Sm9pblRleHQoVWJvdW5kKGFyeUZpbGVQYXRoKSkNCglEaW0gaixpLGsNCgkNCglTZXQgb2JqWG1sRmlsZT1TZXJ2ZXIuQ3JlYXRlT2JqZWN0KCJNaWNyb3NvZnQuWE1MRE9NIikNCglvYmpYbWxGaWxlLmFzeW5jID0gRmFsc2UNCglvYmpYbWxGaWxlLlZhbGlkYXRlT25QYXJzZT1GYWxzZQ0KCSflhYjor7vkuIDpgY3oh6rlt7HnmoTphY3nva7mlofku7blvpfliLDph43lhpnlkozlhrLnqoHkv6Hmga/vvIzlhrLnqoHlkI7pnaLkuIDkuKrkuIDkuKrmr5Tlr7kNCglJZiBib2xDaGVjayBUaGVuDQoJCXN0clhtbEZpbGUgPSBCbG9nUGF0aCAmICJ6Yl91c2Vycy9wbHVnaW4vIiAmIHN0clBsdWdpbk5hbWUgJiAiLyIgJiAicGx1Z2luLnhtbCINCgkJb2JqWG1sRmlsZS5sb2FkKHN0clhtbEZpbGUpDQoJCXRoaXNSZXdyaXRlPVNwbGl0KFVDYXNlKFRyeVRvR2V0QWR2YW5jZWQob2JqWG1sRmlsZSwicmV3cml0ZWZ1bmN0aW9ucyIpKSwifCIpDQoJCXRoaXNDb25mbGljdD1TcGxpdChVQ2FzZShUcnlUb0dldEFkdmFuY2VkKG9ialhtbEZpbGUsImNvbmZsaWN0IikpLCJ8IikNCglFbmQgSWYNCgkNCgknU3RvcA0KCUZvciBqPTAgVG8gVWJvdW5kKGFyeUZpbGVQYXRoKQ0KCQlzdHJYbWxGaWxlID1hcnlGaWxlUGF0aChqKQ0KCQlvYmpYbWxGaWxlLmxvYWQoc3RyWG1sRmlsZSkNCgkJSWYgb2JqWG1sRmlsZS5yZWFkeVN0YXRlPTQgVGhlbg0KCQkJSWYgb2JqWG1sRmlsZS5wYXJzZUVycm9yLmVycm9yQ29kZSA8PiAwIFRoZW4NCgkJCUVsc2UNCgkJCQlzdHJJRD1vYmpYbWxGaWxlLmRvY3VtZW50RWxlbWVudC5zZWxlY3RTaW5nbGVOb2RlKCJpZCIpLnRleHQNCgkJCQlzdHJJbmNsdWRlPW9ialhtbEZpbGUuZG9jdW1lbnRFbGVtZW50LnNlbGVjdFNpbmdsZU5vZGUoImluY2x1ZGUiKS50ZXh0DQoJCQkJc3RyUmV3cml0ZT1TcGxpdChVQ2FzZShUcnlUb0dldEFkdmFuY2VkKG9ialhtbEZpbGUsInJld3JpdGVmdW5jdGlvbnMiKSksInwiKQ0KCQkJCXN0ckNvbmZsaWN0PVNwbGl0KFVDYXNlKFRyeVRvR2V0QWR2YW5jZWQob2JqWG1sRmlsZSwiY29uZmxpY3QiKSksInwiKQ0KCQkJCUlmIFRyaW0oc3RySW5jbHVkZSk8PiIiIFRoZW4NCgkJCQkJSWYgTGVuKExvYWRGcm9tRmlsZShCbG9nUGF0aCAmICJ6Yl91c2Vycy9wbHVnaW4vIiAmIHN0cklEICYgIi8iICYgc3RySW5jbHVkZSwidXRmLTgiKSk+MCBUaGVuDQoJCQkJCQlhcnlKb2luVGV4dChqKT0iPCEtLSImIiAjaW5jbHVkZSBmaWxlPSIiIiZfDQoJCQkJCQkJCQkJc3RySUQgJl8NCgkJCQkJCQkJCQkiLyImXw0KCQkJCQkJCQkJCXN0ckluY2x1ZGUgJl8NCgkJCQkJCQkJCQkiIiIgLS0+Ig0KCQkJCQkJSWYgYm9sQ2hlY2sgVGhlbg0KCQkJCQkJCSflhYjliKTmlq3mmK/lkKblhrLnqoHvvIzku47kuKTkuKrmlrnpnaLliKTmlq3jgIINCgkJCQkJCQkn56ys5LiA5q2l77ya5Yik5pat5b6F5ZCv55So5o+S5Lu25piv5ZCm5LiO6K+l5o+S5Lu25Yay56qB4oCU4oCUDQoJCQkJCQkJRm9yIGk9MCBUbyBVYm91bmQodGhpc0NvbmZsaWN0KQ0KCQkJCQkJCQlJZiB0aGlzQ29uZmxpY3QoaSk9VUNhc2Uoc3RySUQpIFRoZW4NCgkJCQkJCQkJCVJldHVybkFycmF5KDApPUZhbHNlDQoJCQkJCQkJCQlzdHJSZXNwb25zZUNvbmZsaWN0PXN0clJlc3BvbnNlQ29uZmxpY3QgJiBzdHJJRCAmICIgIg0KCQkJCQkJCQlFbmQgSWYNCgkJCQkJCQlOZXh0DQoJCQkJCQkJJ+esrOS6jOatpe+8muWIpOaWreivpeaPkuS7tuaYr+WQpuS4juW+heWQr+eUqOaPkuS7tuWGsueqgeKAlOKAlA0KCQkJCQkJCUZvciBpPTAgVG8gVWJvdW5kKHN0ckNvbmZsaWN0KQ0KCQkJCQkJCQlJZiBzdHJDb25mbGljdChpKT1VQ2FzZShzdHJQbHVnaW5OYW1lKSBUaGVuDQoJCQkJCQkJCQlSZXR1cm5BcnJheSgwKT1GYWxzZQ0KCQkJCQkJCQkJSWYgSW5TdHIoc3RyUmVzcG9uc2VDb25mbGljdCxzdHJJRCk8PTAgVGhlbiBzdHJSZXNwb25zZUNvbmZsaWN0PXN0clJlc3BvbnNlQ29uZmxpY3QgJiBzdHJJRCAmICIgIg0KCQkJCQkJCQlFbmQgSWYNCgkJCQkJCQlOZXh0DQoJCQkJCQkJDQoJCQkJCQkJJ+aOpeedgOWIpOaWremHjeWGmeWHveaVsOOAgg0KCQkJCQkJCSfnm7TmjqXliKTmlq3lvoXlkK/nlKjmj5Lku7bmmK/lkKbkuI7or6Xmj5Lku7bmnInph43lhpnlh73mlbDljbPlj6/vvIzkuI3pnIDopoHlho3liIbkuKTkuKrlvqrnjq/liKTmlq0NCgkJCQkJCQkn5LiN6L+H6LKM5Ly86ZyA6KaB5Y+M6YeN5b6q546v4oCm4oCm77yfDQoJCQkJCQkJDQoJCQkJCQkJRm9yIGk9MCBUbyBVYm91bmQodGhpc1Jld3JpdGUpDQoJCQkJCQkJCUZvciBrPTAgVG8gVWJvdW5kKHN0clJld3JpdGUpDQoJCQkJCQkJCQlJZiB0aGlzUmV3cml0ZShpKT1zdHJSZXdyaXRlKGspIEFuZCBzdHJJRDw+c3RyUGx1Z2luTmFtZSBUaGVuDQoJCQkJCQkJCQkJUmV0dXJuQXJyYXkoMSk9RmFsc2UNCgkJCQkJCQkJCQlJZiBJblN0cihzdHJSZXNwb25zZVJld3JpdGUsc3RyUmV3cml0ZShrKSk8PTAgVGhlbiBzdHJSZXNwb25zZVJld3JpdGU9c3RyUmVzcG9uc2VSZXdyaXRlICYgc3RySUQgJiAiICINCgkJCQkJCQkJCUVuZCBJZg0KCQkJCQkJCQlOZXh0DQoJCQkJCQkJTmV4dA0KCQkJCQkJRW5kIElmDQoJCQkJCUVuZCBJZg0KCQkJCUVuZCBJZg0KCQkJRW5kIElmDQoJCUVuZCBJZg0KCU5leHQNCglJZiBSZXR1cm5BcnJheSgwKT1GYWxzZSBUaGVuIFNldEJsb2dIaW50X0N1c3RvbShaQ19NU0cyODMgJiBzdHJSZXNwb25zZUNvbmZsaWN0KQ0KCUlmIFJldHVybkFycmF5KDEpPUZhbHNlIEFuZCBSZXR1cm5BcnJheSgwKT1UcnVlIFRoZW4gU2V0QmxvZ0hpbnRfQ3VzdG9tKFpDX01TRzI4NSAmIHN0clJlc3BvbnNlUmV3cml0ZSkNCglSZXR1cm5BcnJheSgyKT1Kb2luKGFyeUpvaW5UZXh0LHZiQ3JsZikNCglDaGVja0NvbmZsaWN0UmVXcml0ZUFuZFRvRmlsZT1SZXR1cm5BcnJheQ0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAgRGlzYWJsZVBsdWdJbiBCeSBOYW1lDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBEaXNhYmxlUGx1Z0luQnlOYW1lKHN0clBsdWdpbk5hbWUpDQoNCglDYWxsIFVuaW5zdGFsbFBsdWdpbihzdHJQbHVnaW5OYW1lKQ0KDQoJRGltIHMsaSx0DQoNCglzPVNwbGl0KFpDX1VTSU5HX1BMVUdJTl9MSVNULCJ8IikNCg0KCUZvciBpPUxCb3VuZChzKSBUbyBVQm91bmQocykNCg0KCQlJZiBVQ2FzZShzKGkpKTw+VUNhc2Uoc3RyUGx1Z2luTmFtZSkgVGhlbg0KDQoJCQlJZiB0PSIiIFRoZW4NCgkJCQl0PXMoaSkNCgkJCUVsc2UNCgkJCQl0PXQgJiAifCIgJiBzKGkpDQoJCQlFbmQgSWYNCgkJCQ0KCQkJDQoJCUVuZCBJZg0KDQoJTmV4dA0KCQ0KCURpbSBhcnlBbGxYbWxQYXRoDQoJYXJ5QWxsWG1sUGF0aD1HZXRBbGxYbWxQYXRoKHQpDQoJDQoJSWYgQ2hlY2tEZXBlbmRlbmN5RGlzYWJsZShhcnlBbGxYbWxQYXRoLHN0clBsdWdpbk5hbWUpPUZhbHNlIFRoZW4gRXhpdCBGdW5jdGlvbg0KDQoJRGltIHN0ckNvbnRlbnQNCglEaW0gc3RyWkNfVVNJTkdfUExVR0lOX0xJU1QNCg0KCXN0clpDX1VTSU5HX1BMVUdJTl9MSVNUPXQNCg0KCUNhbGwgQmxvZ0NvbmZpZy5Xcml0ZSgiWkNfVVNJTkdfUExVR0lOX0xJU1QiLHN0clpDX1VTSU5HX1BMVUdJTl9MSVNUKQ0KDQoJQ2FsbCBTYXZlQ29uZmlnMk9wdGlvbigpDQoJDQoJdD1DaGVja0NvbmZsaWN0UmVXcml0ZUFuZFRvRmlsZShzdHJQbHVnaW5OYW1lLGFyeUFsbFhtbFBhdGgsRmFsc2UpKDIpDQoJQ2FsbCBTY2FuUGx1Z2luVG9JbmNsdWRlRmlsZSh0KQ0KDQoJRGlzYWJsZVBsdWdJbkJ5TmFtZT1UcnVlDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8mg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gU2NhblBsdWdpblRvSW5jbHVkZUZpbGUocykNCg0KCUNhbGwgU2F2ZVRvRmlsZShCbG9nUGF0aCAmICJ6Yl91c2Vycy9QTFVHSU4vcF9pbmNsdWRlLmFzcCIscywidXRmLTgiLEZhbHNlKQ0KDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIFNjYW5QbHVnaW5Ub1RoZW1lRmlsZShuZXdaQ19CTE9HX0NTUyxuZXdaQ19CTE9HX1RIRU1FKQ0KDQoJT24gRXJyb3IgUmVzdW1lIE5leHQNCg0KCURpbSBvYmpYbWxGaWxlLHN0clhtbEZpbGUscyx0DQoNCglzdHJYbWxGaWxlID1CbG9nUGF0aCAmICJ6Yl91c2Vycy90aGVtZS8iICYgbmV3WkNfQkxPR19USEVNRSAmICIvIiAmICJ0aGVtZS54bWwiDQoNCglTZXQgb2JqWG1sRmlsZT1TZXJ2ZXIuQ3JlYXRlT2JqZWN0KCJNaWNyb3NvZnQuWE1MRE9NIikNCglvYmpYbWxGaWxlLmFzeW5jID0gRmFsc2UNCglvYmpYbWxGaWxlLlZhbGlkYXRlT25QYXJzZT1GYWxzZQ0KCW9ialhtbEZpbGUubG9hZChzdHJYbWxGaWxlKQ0KCUlmIG9ialhtbEZpbGUucmVhZHlTdGF0ZT00IFRoZW4NCgkJSWYgb2JqWG1sRmlsZS5wYXJzZUVycm9yLmVycm9yQ29kZSA8PiAwIFRoZW4NCgkJRWxzZQ0KCQkJSWYgTENhc2Uob2JqWG1sRmlsZS5kb2N1bWVudEVsZW1lbnQuc2VsZWN0U2luZ2xlTm9kZSgiaWQiKS50ZXh0KT1MQ2FzZShuZXdaQ19CTE9HX1RIRU1FKSBUaGVuDQoJCQkJRGltIGZzbw0KCQkJCVNldCBmc28gPSBDcmVhdGVPYmplY3QoIlNjcmlwdGluZy5GaWxlU3lzdGVtT2JqZWN0IikNCgkJCQlJZiBmc28uRmlsZUV4aXN0cyhCbG9nUGF0aCAmICJ6Yl91c2Vycy90aGVtZS8iICYgb2JqWG1sRmlsZS5kb2N1bWVudEVsZW1lbnQuc2VsZWN0U2luZ2xlTm9kZSgiaWQiKS50ZXh0ICYiL3BsdWdpbi8iICYgb2JqWG1sRmlsZS5kb2N1bWVudEVsZW1lbnQuc2VsZWN0U2luZ2xlTm9kZSgicGx1Z2luL2luY2x1ZGUiKS50ZXh0KSBUaGVuDQoJCQkJCUlmIFRyaW0ob2JqWG1sRmlsZS5kb2N1bWVudEVsZW1lbnQuc2VsZWN0U2luZ2xlTm9kZSgicGx1Z2luL2luY2x1ZGUiKS50ZXh0KTw+IiIgVGhlbg0KCQkJCQkJdD1Mb2FkRnJvbUZpbGUoQmxvZ1BhdGggJiAiemJfdXNlcnMvdGhlbWUvIiAmIG9ialhtbEZpbGUuZG9jdW1lbnRFbGVtZW50LnNlbGVjdFNpbmdsZU5vZGUoImlkIikudGV4dCAmIi9wbHVnaW4vIiAmIG9ialhtbEZpbGUuZG9jdW1lbnRFbGVtZW50LnNlbGVjdFNpbmdsZU5vZGUoInBsdWdpbi9pbmNsdWRlIikudGV4dCwidXRmLTgiKQ0KCQkJCQkJSWYgSW5TdHIoTENhc2UodCksTENhc2UoIkluc3RhbGxQbHVnaW5fIikpPjAgVGhlbg0KCQkJCQkJCUNhbGwgQWRkQmF0Y2goWkNfTVNHMjAyICYgb2JqWG1sRmlsZS5kb2N1bWVudEVsZW1lbnQuc2VsZWN0U2luZ2xlTm9kZSgiaWQiKS50ZXh0LCJDYWxsIEluc3RhbGxQbHVnaW4oIiIiJm9ialhtbEZpbGUuZG9jdW1lbnRFbGVtZW50LnNlbGVjdFNpbmdsZU5vZGUoImlkIikudGV4dCYiIiIpIikJDQoJCQkJCQlFbmQgSWYNCgkJCQkJCXM9cyAmICI8IS0tICNpbmNsdWRlIGZpbGU9IiIuLi90aGVtZS8iJiBvYmpYbWxGaWxlLmRvY3VtZW50RWxlbWVudC5zZWxlY3RTaW5nbGVOb2RlKCJpZCIpLnRleHQgJiIvcGx1Z2luLyImIG9ialhtbEZpbGUuZG9jdW1lbnRFbGVtZW50LnNlbGVjdFNpbmdsZU5vZGUoInBsdWdpbi9pbmNsdWRlIikudGV4dCAmIiIiIC0tPiIgJiB2YkNyTGYNCgkJCQkJRW5kIElmDQoJCQkJRW5kIElmDQoJCQlFbmQgSWYNCgkJRW5kIElmDQoJRW5kIElmDQoJU2V0IG9ialhtbEZpbGU9Tm90aGluZw0KDQoJQ2FsbCBTYXZlVG9GaWxlKEJsb2dQYXRoICYgInpiX3VzZXJzL1BMVUdJTi9wX3RoZW1lLmFzcCIscywidXRmLTgiLEZhbHNlKQ0KDQoJRXJyLkNsZWFyDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8mg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gU2NhblRhZ0NvdW50KHN0clRhZ3MpDQonc3RyVGFncz0iezF9ezJ9ezN9ezR9ezV9Ig0KCURpbSB0LGkscw0KCURpbSBvYmpSUyxqLGsNCg0KCUlmIHN0clRhZ3M8PiIiIFRoZW4NCg0KCQlzPXN0clRhZ3MNCgkJcz1SZXBsYWNlKHMsIn0iLCIiKQ0KCQl0PVNwbGl0KHMsInsiKQ0KDQoJCUZvciBpPUxCb3VuZCh0KSBUbyBVQm91bmQodCkNCg0KCQkJSWYgdChpKTw+IiIgVGhlbg0KDQoJCQkJaz10KGkpDQoJCQkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIENPVU5UKFtsb2dfSURdKSBGUk9NIFtibG9nX0FydGljbGVdIFdIRVJFIFtsb2dfTGV2ZWxdPjEgQU5EIFtsb2dfVGFnXSBMSUtFICcleyIgJiBrICYgIn0lJyIpDQoJCQkJaj1vYmpSUygwKQ0KCQkJCW9iakNvbm4uRXhlY3V0ZSgiVVBEQVRFIFtibG9nX1RhZ10gU0VUIFt0YWdfQ291bnRdPSImaiYiIFdIRVJFIFt0YWdfSURdID0iICYgaykNCgkJCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJCQlFbmQgSWYNCg0KCQlOZXh0DQoNCgkJcz1Kb2luKHQsIiwiKQ0KCQlzPVJpZ2h0KHMsTGVuKHMpLTEpDQoNCgkJc3RyVGFncz1zDQoNCglFbmQgSWYNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8mg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KRnVuY3Rpb24gU2F2ZVNpZGViYXJPcmRlcihzMSxzMixzMyxzNCxzNSkNCg0KCUlmIFJpZ2h0KHMxLDEpPSI6IiBUaGVuIHMxPUxlZnQoczEsTGVuKHMxKS0xKQ0KCUlmIFJpZ2h0KHMyLDEpPSI6IiBUaGVuIHMyPUxlZnQoczIsTGVuKHMyKS0xKQ0KCUlmIFJpZ2h0KHMzLDEpPSI6IiBUaGVuIHMzPUxlZnQoczMsTGVuKHMzKS0xKQ0KCUlmIFJpZ2h0KHM0LDEpPSI6IiBUaGVuIHM0PUxlZnQoczQsTGVuKHM0KS0xKQ0KCUlmIFJpZ2h0KHM1LDEpPSI6IiBUaGVuIHM1PUxlZnQoczUsTGVuKHM1KS0xKQ0KDQoJWkNfU0lERUJBUl9PUkRFUj1zMQ0KCVpDX1NJREVCQVJfT1JERVIyPXMyDQoJWkNfU0lERUJBUl9PUkRFUjM9czMNCglaQ19TSURFQkFSX09SREVSND1zNA0KCVpDX1NJREVCQVJfT1JERVI1PXM1DQoNCglTYXZlU2lkZWJhck9yZGVyPVRydWUNCg0KRW5kIEZ1bmN0aW9uDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpGdW5jdGlvbiBTYXZlRnVuY3Rpb24oKQ0KDQoJRGltIG9iakZ1bmN0aW9uDQoJU2V0IG9iakZ1bmN0aW9uPU5ldyBURnVuY3Rpb24NCg0KCUlmIENMbmcoUmVxdWVzdC5Gb3JtKCJpbnBJRCIpKT4wIFRoZW4gb2JqRnVuY3Rpb24uTG9hZEluZm9CeUlEKFJlcXVlc3QuRm9ybSgiaW5wSUQiKSkNCg0KCW9iakZ1bmN0aW9uLklEPVJlcXVlc3QuRm9ybSgiaW5wSUQiKQ0KCW9iakZ1bmN0aW9uLk5hbWU9UmVxdWVzdC5Gb3JtKCJpbnBOYW1lIikNCglJZiBvYmpGdW5jdGlvbi5Jc1N5c3RlbT1GYWxzZSBUaGVuIG9iakZ1bmN0aW9uLkZpbGVOYW1lPVJlcXVlc3QuRm9ybSgiaW5wRmlsZU5hbWUiKQ0KCUlmIG9iakZ1bmN0aW9uLklzU3lzdGVtPUZhbHNlIFRoZW4gb2JqRnVuY3Rpb24uRnR5cGU9UmVxdWVzdC5Gb3JtKCJpbnBGdHlwZSIpDQoJb2JqRnVuY3Rpb24uSHRtbElEPVJlcXVlc3QuRm9ybSgiaW5wSHRtbElEIikNCglvYmpGdW5jdGlvbi5PcmRlcj1SZXF1ZXN0LkZvcm0oImlucE9yZGVyIikNCglvYmpGdW5jdGlvbi5NYXhMaT1SZXF1ZXN0LkZvcm0oImlucE1heExpIikNCglvYmpGdW5jdGlvbi5TaWRlYmFySUQ9UmVxdWVzdC5Gb3JtKCJpbnBTaWRlYmFySUQiKQ0KCW9iakZ1bmN0aW9uLkNvbnRlbnQ9UmVwbGFjZShSZXF1ZXN0LkZvcm0oImlucENvbnRlbnQiKSxWQkNybGYsIiIpDQoJb2JqRnVuY3Rpb24uVmlld1R5cGU9UmVxdWVzdC5Gb3JtKCJpbnBWaWV3VHlwZSIpDQoJb2JqRnVuY3Rpb24uU291cmNlPVJlcXVlc3QuRm9ybSgiaW5wU291cmNlIikNCglvYmpGdW5jdGlvbi5Jc0hpZGRlbj1Ob3QgKFJlcXVlc3QuRm9ybSgiaW5wSXNIaWRkZW4iKT0iVHJ1ZSIpDQoJb2JqRnVuY3Rpb24uSXNIaWRlVGl0bGU9KFJlcXVlc3QuRm9ybSgiaW5wSXNIaWRlVGl0bGUiKT0iVHJ1ZSIpDQoJSWYgUmVxdWVzdC5Gb3JtKCJpbnBGaWxlTmFtZSIpPSJuYXZiYXIiIFRoZW4NCgkJQ2FsbCBHZXRGdW5jdGlvbigpDQoJCUlmIFRyYW5zZmVySFRNTChvYmpGdW5jdGlvbi5Db250ZW50LCJbYW50aS16Y19ibG9nX2hvc3RdIik8PkZ1bmN0aW9ucyhGdW5jdGlvbk1ldGFzLkdldFZhbHVlKCJuYXZiYXIiKSkuQ29udGVudCBUaGVuDQoJCQlDYWxsIFNldEJsb2dIaW50KEVtcHR5LEVtcHR5LFRydWUpDQoJCUVuZCBJZg0KCUVuZCBJZg0KDQoJJ+aOpeWPow0KCSdDYWxsIEZpbHRlcl9QbHVnaW5fU2F2ZUZ1bmN0aW9uX0NvcmUob2JqRnVuY3Rpb24pDQoJSWYgb2JqRnVuY3Rpb24uU291cmNlPD4ic3lzdGVtIiBUaGVuDQoJCUlmIFNlYXJjaEluQXJyYXlzKG9iakZ1bmN0aW9uLkZpbGVOYW1lLFNwbGl0KCJuYXZiYXI6IiZaQ19ERUZBVUxUX1NJREVCQVIsIjoiKSk9VHJ1ZSBUaGVuIG9iakZ1bmN0aW9uLkZpbGVOYW1lPW9iakZ1bmN0aW9uLkZpbGVOYW1lICYgTGVmdChDU3RyKFJuZCgpKjEwMDAwKSw0KQ0KCUVuZCBJZg0KDQoJSWYgb2JqRnVuY3Rpb24uUG9zdCBUaGVuDQoNCgkJU2F2ZUZ1bmN0aW9uPVRydWUNCgkJJ0NhbGwgRmlsdGVyX1BsdWdpbl9TYXZlRnVuY3Rpb25fU3VjY2VlZChvYmpGdW5jdGlvbikNCglFbmQgSWYNCglTZXQgb2JqRnVuY3Rpb249Tm90aGluZw0KDQpFbmQgRnVuY3Rpb24NCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkZ1bmN0aW9uIERlbEZ1bmN0aW9uKGludElEKQ0KDQoJRGltIG9iakZ1bmN0aW9uDQoNCglTZXQgb2JqRnVuY3Rpb249TmV3IFRGdW5jdGlvbg0KDQoJSWYgb2JqRnVuY3Rpb24uTG9hZEluZm9ieUlEKGludElEKSBUaGVuDQoNCgkJSWYgb2JqRnVuY3Rpb24uRGVsIFRoZW4NCgkJCURlbEZ1bmN0aW9uPVRydWUNCgkJRW5kIElmDQoNCglFbmQgSWYNCg0KCVNldCBvYmpGdW5jdGlvbj1Ob3RoaW5nDQoNCkVuZCBGdW5jdGlvbg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJT4=</file>
	<file name='zb_system\FUNCTION\c_system_lib.asp' crc32='790F3484'  dt:dt='bin.base64'>77u/PCUNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQonLy8gICAgICAgICAgICAgIFotQmxvZw0KJy8vIOS9nCAgICDogIU6ICAgIOacseeFiih6eC5hc2QpDQonLy8g54mI5p2D5omA5pyJOiAgICBSYWluYm93U29mdCBTdHVkaW8NCicvLyDmioDmnK/mlK/mjIE6ICAgIHJhaW5ib3dzb2Z0QDE2My5jb20NCicvLyDnqIvluo/lkI3np7A6DQonLy8g56iL5bqP54mI5pysOg0KJy8vIOWNleWFg+WQjeensDogICAgY19zeXN0ZW1fbGliLmFzcA0KJy8vIOW8gOWni+aXtumXtDogICAgMjAwNC4wNy4yNQ0KJy8vIOacgOWQjuS/ruaUuTogICAgMjAwNy0xLTQNCicvLyDlpIcgICAg5rOoOiAgICDlupPmqKHlnZcNCicvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIOWumuS5iVRDYXRlZ29yeeexuw0KJyDovpPlhaXvvJogICAg5pegDQonIOi/lOWbnu+8miAgICDml6ANCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkNsYXNzIFRDYXRlZ29yeQ0KDQoJUHVibGljIElEDQoJUHVibGljIE5hbWUNCglQdWJsaWMgSW50cm8NCglQdWJsaWMgT3JkZXINCglQdWJsaWMgQ291bnQNCglQdWJsaWMgQWxpYXMNCglQdWJsaWMgUGFyZW50SUQNCglQdWJsaWMgRnVsbFVybA0KCVB1YmxpYyBNZXRhDQoJUHVibGljIFRlbXBsYXRlTmFtZQ0KCVB1YmxpYyBMb2dUZW1wbGF0ZQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBNZXRhU3RyaW5nDQoJCU1ldGFTdHJpbmc9TWV0YS5TYXZlU3RyaW5nDQoJRW5kIFByb3BlcnR5DQoJUHVibGljIFByb3BlcnR5IExldCBNZXRhU3RyaW5nKHMpDQoJCU1ldGEuTG9hZFN0cmluZz1zDQoJRW5kIFByb3BlcnR5DQoNCg0KCVByaXZhdGUgRnRlbXBsYXRlDQoJUHVibGljIFByb3BlcnR5IExldCBUZW1wbGF0ZShzdHJGaWxlTmFtZSkNCgkJRnRlbXBsYXRlPUdldFRlbXBsYXRlKCJURU1QTEFURV8iICYgc3RyRmlsZU5hbWUpDQoJRW5kIFByb3BlcnR5DQoJUHVibGljIFByb3BlcnR5IEdldCBUZW1wbGF0ZQ0KCQlJZiBGdGVtcGxhdGU8PiIiIFRoZW4NCgkJCVRlbXBsYXRlID0gRnRlbXBsYXRlDQoJCQlFeGl0IFByb3BlcnR5DQoJCUVsc2UNCgkJCUlmIFRlbXBsYXRlTmFtZTw+IiIgVGhlbg0KCQkJCURpbSBzDQoJCQkJcz1HZXRUZW1wbGF0ZSgiVEVNUExBVEVfIiAmVGVtcGxhdGVOYW1lKQ0KCQkJCUlmIHM8PiIiIFRoZW4NCgkJCQkJRnRlbXBsYXRlID0gcw0KCQkJCUVsc2UNCgkJCQkJRnRlbXBsYXRlPUdldFRlbXBsYXRlKCJURU1QTEFURV9DQVRBTE9HIikNCgkJCQlFbmQgSWYNCgkJCUVsc2UNCgkJCQlGdGVtcGxhdGU9R2V0VGVtcGxhdGUoIlRFTVBMQVRFX0NBVEFMT0ciKQ0KCQkJRW5kIElmDQoJCQlUZW1wbGF0ZSA9IEZ0ZW1wbGF0ZQ0KCQlFbmQgSWYNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBGdW5jdGlvbiBHZXREZWZhdWx0VGVtcGxhdGVOYW1lDQoJCUlmIFRlbXBsYXRlTmFtZTw+IiIgVGhlbg0KCQkJR2V0RGVmYXVsdFRlbXBsYXRlTmFtZT1UZW1wbGF0ZU5hbWUNCgkJRWxzZQ0KCQkJR2V0RGVmYXVsdFRlbXBsYXRlTmFtZT0iQ0FUQUxPRyINCgkJRW5kIElmDQoJRW5kIEZ1bmN0aW9uDQoNCglQdWJsaWMgRnVuY3Rpb24gR2V0RGVmYXVsdExvZ1RlbXBsYXRlTmFtZQ0KCQlJZiBMb2dUZW1wbGF0ZTw+IiIgIFRoZW4NCgkJCUdldERlZmF1bHRMb2dUZW1wbGF0ZU5hbWU9TG9nVGVtcGxhdGUNCgkJRWxzZQ0KCQkJR2V0RGVmYXVsdExvZ1RlbXBsYXRlTmFtZT0iU0lOR0xFIg0KCQlFbmQgSUYNCglFbmQgRnVuY3Rpb24NCg0KCVByaXZhdGUgRmZ1bGxyZWdleA0KCVB1YmxpYyBQcm9wZXJ0eSBMZXQgRnVsbFJlZ2V4KHMpDQoJCUZmdWxscmVnZXg9cw0KCUVuZCBQcm9wZXJ0eQ0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgRnVsbFJlZ2V4DQoJCUlmIEZmdWxscmVnZXg8PiIiIFRoZW4gDQoJCQlGdWxsUmVnZXg9RmZ1bGxyZWdleA0KCQlFbHNlDQoJCQlGdWxsUmVnZXg9WkNfQ0FURUdPUllfUkVHRVgNCgkJRW5kIElmDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgaHRtbA0KDQoJUHVibGljIFByb3BlcnR5IEdldCBGdWxsUGF0aA0KCQlGdWxsUGF0aD1QYXJzZUN1c3RvbURpcmVjdG9yeUZvclBhdGgoRnVsbFJlZ2V4LFpDX1NUQVRJQ19ESVJFQ1RPUlksIiIsIiIsIiIsIiIsIiIsSUQsTmFtZSxTdGF0aWNOYW1lKQ0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBVcmwNCg0KCQkncGx1Z2luIG5vZGUNCgkJYkFjdGlvbl9QbHVnaW5fVENhdGVnb3J5X1VybD1GYWxzZQ0KCQlGb3IgRWFjaCBzQWN0aW9uX1BsdWdpbl9UQ2F0ZWdvcnlfVXJsIGluIEFjdGlvbl9QbHVnaW5fVENhdGVnb3J5X1VybA0KCQkJSWYgTm90IElzRW1wdHkoc0FjdGlvbl9QbHVnaW5fVENhdGVnb3J5X1VybCkgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fVENhdGVnb3J5X1VybCkNCgkJCUlmIGJBY3Rpb25fUGx1Z2luX1RDYXRlZ29yeV9Vcmw9VHJ1ZSBUaGVuIEV4aXQgUHJvcGVydHkNCgkJTmV4dA0KCQkNCgkJVXJsID1QYXJzZUN1c3RvbURpcmVjdG9yeUZvclVybChGdWxsUmVnZXgsWkNfU1RBVElDX0RJUkVDVE9SWSwiIiwiIiwiIiwiIiwiIixJRCxOYW1lLFN0YXRpY05hbWUpDQoJCUlmIFJpZ2h0KFVybCwxMik9ImRlZmF1bHQuaHRtbCIgVGhlbiBVcmw9TGVmdChVcmwsTGVuKFVybCktMTIpDQoNCgkJVXJsPVJlcGxhY2UoUmVwbGFjZShVcmwsIi8vIiwiLyIpLCI6LyIsIjovLyIsMSwxKQ0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UQ2F0ZWdvcnlfVXJsKFVybCkNCg0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBSc3NVcmwNCgkJUnNzVXJsID0gQmxvZ0hvc3QgJiAiZmVlZC5hc3A/Y2F0ZT0iICYgSUQNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgSHRtbE5hbWUNCgkJSHRtbE5hbWU9VHJhbnNmZXJIVE1MKE5hbWUsIltodG1sLWZvcm1hdF0iKQ0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBIdG1sVXJsDQoJCUh0bWxVcmw9VHJhbnNmZXJIVE1MKFVybCwiW2h0bWwtZm9ybWF0XSIpDQoJRW5kIFByb3BlcnR5DQoJDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFN0YXRpY05hbWUNCgkJSWYgSXNOdWxsKEFsaWFzKSBPciBJc0VtcHR5KEFsaWFzKSBPciBBbGlhcz0iIiBUaGVuDQoJCQlTdGF0aWNOYW1lID0gTmFtZQ0KCQlFbHNlDQoJCQlTdGF0aWNOYW1lID0gQWxpYXMNCgkJRW5kIElmDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUmVDb3VudA0KCVB1YmxpYyBFeElEICfljp9JRA0KDQoJUHVibGljIEZ1bmN0aW9uIFBvc3QoKQ0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UQ2F0ZWdvcnlfUG9zdChJRCxOYW1lLEludHJvLE9yZGVyLENvdW50LFBhcmVudElELEFsaWFzLFRlbXBsYXRlTmFtZSxMb2dUZW1wbGF0ZSxGdWxsVXJsLE1ldGFTdHJpbmcpDQoNCgkJQ2FsbCBDaGVja1BhcmFtZXRlcihJRCwiaW50IiwwKQ0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKE9yZGVyLCJpbnQiLDApDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoUGFyZW50SUQsImludCIsMCkNCg0KCQknSUTlj6/ku6XkuLowDQoJCU5hbWU9RmlsdGVyU1FMKE5hbWUpDQoJCUFsaWFzPVRyYW5zZmVySFRNTChBbGlhcywiW2RpcmVjdG9yeSZmaWxlXSIpDQoJCUlmIExlZnQoQWxpYXMsMSk9Ii8iIFRoZW4gQWxpYXM9UmlnaHQoQWxpYXMsTGVuKEFsaWFzKS0xKQ0KCQlJZiBSaWdodChBbGlhcywxKT0iLyIgVGhlbiBBbGlhcz1MZWZ0KEFsaWFzLExlbihBbGlhcyktMSkNCgkJQWxpYXM9RmlsdGVyU1FMKEFsaWFzKQ0KCQlJbnRybz1GaWx0ZXJTUUwoSW50cm8pDQoNCgkJVGVtcGxhdGVOYW1lPVVDYXNlKEZpbHRlclNRTChUZW1wbGF0ZU5hbWUpKQ0KCQlJZiBUZW1wbGF0ZU5hbWU9IkNBVEFMT0ciIFRoZW4gVGVtcGxhdGVOYW1lPSIiDQoNCgkJTG9nVGVtcGxhdGU9VUNhc2UoRmlsdGVyU1FMKExvZ1RlbXBsYXRlKSkNCgkJSWYgTG9nVGVtcGxhdGU9IlNJTkdMRSIgVGhlbiBMb2dUZW1wbGF0ZT0iIg0KDQoJCUlmIExlbihOYW1lKT0wIFRoZW4gUG9zdD1GYWxzZTpFeGl0IEZ1bmN0aW9uDQoNCgkJSWYgSUQ9MCBUaGVuDQoNCgkJCUlmIE5vdCBQYXJlbnRJRD0wIFRoZW4NCgkJCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgW2NhdGVfSURdLFtjYXRlX1BhcmVudElEXSBGUk9NIFtibG9nX0NhdGVnb3J5XSBXSEVSRSBbY2F0ZV9JRF09IiAmIFBhcmVudElEKQ0KCQkJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCgkJCQkJSWYgTm90IG9ialJTKCJjYXRlX1BhcmVudElEIik9MCBUaGVuIFNob3dFcnJvcig1MSkNCgkJCQlFbHNlDQoJCQkJCVNob3dFcnJvcig1MCkNCgkJCQlFbmQgSWYNCgkJCUVuZCBJZg0KDQoJCQlvYmpDb25uLkV4ZWN1dGUoIklOU0VSVCBJTlRPIFtibG9nX0NhdGVnb3J5XShbY2F0ZV9OYW1lXSxbY2F0ZV9PcmRlcl0sW2NhdGVfSW50cm9dLFtjYXRlX1BhcmVudElEXSxbY2F0ZV9VcmxdLFtjYXRlX1RlbXBsYXRlXSxbY2F0ZV9Mb2dUZW1wbGF0ZV0sW2NhdGVfRnVsbFVybF0sW2NhdGVfTWV0YV0pIFZBTFVFUyAoJyImTmFtZSYiJywiJk9yZGVyJiIsJyImSW50cm8mIicsIiZQYXJlbnRJRCYiLCciJkFsaWFzJiInLCciJlRlbXBsYXRlTmFtZSYiJywnIiZMb2dUZW1wbGF0ZSYiJywnIiZGdWxsVXJsJiInLCciJk1ldGFTdHJpbmcmIicpIikNCg0KCQkJRGltIG9ialJTDQoJCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgTUFYKFtjYXRlX0lEXSkgRlJPTSBbYmxvZ19DYXRlZ29yeV0iKQ0KCQkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KCQkJCUlEPW9ialJTKDApDQoJCQlFbmQgSWYNCgkJCVNldCBvYmpSUz1Ob3RoaW5nDQoNCgkJCUlmIFBhcmVudElEPUlEIFRoZW4NCgkJCQlQYXJlbnRJRD0wDQoJCQkJb2JqQ29ubi5FeGVjdXRlKCJVUERBVEUgW2Jsb2dfQ2F0ZWdvcnldIHNldCBbY2F0ZV9OYW1lXT0nIiZOYW1lJiInLFtjYXRlX09yZGVyXT0iJk9yZGVyJiIsW2NhdGVfSW50cm9dPSciJkludHJvJiInLFtjYXRlX1BhcmVudElEXT0iJlBhcmVudElEJiIsW2NhdGVfVXJsXT0nIiZBbGlhcyYiJyxbY2F0ZV9UZW1wbGF0ZV09JyImVGVtcGxhdGVOYW1lJiInLFtjYXRlX0xvZ1RlbXBsYXRlXT0nIiZMb2dUZW1wbGF0ZSYiJyxbY2F0ZV9GdWxsVXJsXT0nIiZGdWxsVXJsJiInLFtjYXRlX01ldGFdPSciJk1ldGFTdHJpbmcmIicgV0hFUkUgW2NhdGVfSURdID0iICYgSUQpDQoJCQlFbmQgSWYNCg0KCQlFbHNlDQoNCgkJCSflpoLmnpzpgInmi6nkuobniLbliIbnsbssIOmcgOimgei/m+ihjOS7peS4i+WIpOaWrQ0KCQkJSWYgTm90IFBhcmVudElEPTAgVGhlbg0KCQkJCSfniLbliIbnsbvkuI3og73kuLroh6rouqsNCgkJCQlJZiBQYXJlbnRJRD1JRCBUaGVuIFBhcmVudElEPTANCgkJCQkn5LiN6IO95bCG5YiG57G7572u5LqO5a2Q5YiG57G75LiLLCDlhbzliKTmlq3pgInmi6nnmoTniLbliIbnsbvmmK/lkKblrZjlnKguDQoJCQkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFtjYXRlX0lEXSxbY2F0ZV9QYXJlbnRJRF0gRlJPTSBbYmxvZ19DYXRlZ29yeV0gV0hFUkUgW2NhdGVfSURdPSIgJiBQYXJlbnRJRCkNCgkJCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoJCQkJCUlmIE5vdCBvYmpSUygiY2F0ZV9QYXJlbnRJRCIpPTAgVGhlbiBTaG93RXJyb3IoNTEpDQoJCQkJRWxzZQ0KCQkJCQlTaG93RXJyb3IoNTApDQoJCQkJRW5kIElmDQoJCQkJJ+S4jeiDveWwhuWQq+acieWtkOWIhuexu+eahOWIhuexu+e9ruS6juWFtuWug+WIhuexu+S4iy4NCgkJCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgW2NhdGVfSURdIEZST00gW2Jsb2dfQ2F0ZWdvcnldIFdIRVJFIFtjYXRlX1BhcmVudElEXT0iICYgSUQpDQoJCQkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbiAgU2hvd0Vycm9yKDUxKQ0KCQkJCVNldCBvYmpSUz1Ob3RoaW5nDQoJCQlFbmQgSWYNCg0KCQkJb2JqQ29ubi5FeGVjdXRlKCJVUERBVEUgW2Jsb2dfQ2F0ZWdvcnldIHNldCBbY2F0ZV9OYW1lXT0nIiZOYW1lJiInLFtjYXRlX09yZGVyXT0iJk9yZGVyJiIsW2NhdGVfSW50cm9dPSciJkludHJvJiInLFtjYXRlX1BhcmVudElEXT0iJlBhcmVudElEJiIsW2NhdGVfVXJsXT0nIiZBbGlhcyYiJyxbY2F0ZV9UZW1wbGF0ZV09JyImVGVtcGxhdGVOYW1lJiInLFtjYXRlX0xvZ1RlbXBsYXRlXT0nIiZMb2dUZW1wbGF0ZSYiJyxbY2F0ZV9GdWxsVXJsXT0nIiZGdWxsVXJsJiInLFtjYXRlX01ldGFdPSciJk1ldGFTdHJpbmcmIicgV0hFUkUgW2NhdGVfSURdID0iICYgSUQpDQoNCgkJRW5kIElmDQoNCgkJUG9zdD1UcnVlDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIExvYWRJbmZvQnlJRChjYXRlX0lEKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoY2F0ZV9JRCwiaW50IiwwKQ0KDQoJCUlmIGNhdGVfSUQ9MCBUaGVuDQoJCQlJZiBCbG9nQ29uZmlnLkV4aXN0cygiWkNfVU5DQVRFR09SSVpFRF9OQU1FIik9VHJ1ZSBUaGVuIE5hbWU9QmxvZ0NvbmZpZy5SZWFkKCJaQ19VTkNBVEVHT1JJWkVEX05BTUUiKQ0KCQkJSWYgQmxvZ0NvbmZpZy5FeGlzdHMoIlpDX1VOQ0FURUdPUklaRURfQUxJQVMiKT1UcnVlIFRoZW4gQWxpYXM9QmxvZ0NvbmZpZy5SZWFkKCJaQ19VTkNBVEVHT1JJWkVEX0FMSUFTIikNCgkJCUlmIEJsb2dDb25maWcuRXhpc3RzKCJaQ19VTkNBVEVHT1JJWkVEX0NPVU5UIik9VHJ1ZSBUaGVuIA0KCQkJCURpbSBpbnRVbkNhdGVDb3VudA0KCQkJCWludFVuQ2F0ZUNvdW50PUJsb2dDb25maWcuUmVhZCgiWkNfVU5DQVRFR09SSVpFRF9DT1VOVCIpDQoJCQkJQ2FsbCBDaGVja1BhcmFtZXRlcihpbnRVbkNhdGVDb3VudCwiaW50IiwwKQ0KCQkJCUNvdW50PWludFVuQ2F0ZUNvdW50DQoJCQlFbmQgaWYgDQoJCQlMb2FkSW5mb0J5SUQ9VHJ1ZQ0KCQkJRXhpdCBGdW5jdGlvbg0KCQlFbmQgSWYNCg0KCQlEaW0gb2JqUlMNCgkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFtjYXRlX0lEXSxbY2F0ZV9OYW1lXSxbY2F0ZV9JbnRyb10sW2NhdGVfT3JkZXJdLFtjYXRlX0NvdW50XSxbY2F0ZV9QYXJlbnRJRF0sW2NhdGVfVXJsXSxbY2F0ZV9UZW1wbGF0ZV0sW2NhdGVfTG9nVGVtcGxhdGVdLFtjYXRlX0Z1bGxVcmxdLFtjYXRlX01ldGFdIEZST00gW2Jsb2dfQ2F0ZWdvcnldIFdIRVJFIFtjYXRlX0lEXT0iICYgY2F0ZV9JRCkNCg0KCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoNCgkJCUlEPW9ialJTKCJjYXRlX0lEIikNCgkJCU5hbWU9b2JqUlMoImNhdGVfTmFtZSIpDQoJCQlBbGlhcz1vYmpSUygiY2F0ZV9VcmwiKQ0KCQkJT3JkZXI9b2JqUlMoImNhdGVfT3JkZXIiKQ0KCQkJQ291bnQ9b2JqUlMoImNhdGVfQ291bnQiKQ0KCQkJUGFyZW50SUQ9b2JqUlMoImNhdGVfUGFyZW50SUQiKQ0KCQkJSW50cm89b2JqUlMoImNhdGVfSW50cm8iKQ0KCQkJVGVtcGxhdGVOYW1lPW9ialJTKCJjYXRlX1RlbXBsYXRlIikNCgkJCUxvZ1RlbXBsYXRlPW9ialJTKCJjYXRlX0xvZ1RlbXBsYXRlIikNCgkJCUZ1bGxVcmw9b2JqUlMoImNhdGVfRnVsbFVybCIpDQoJCQlNZXRhU3RyaW5nPW9ialJTKCJjYXRlX01ldGEiKQ0KCQkJTG9hZEluZm9CeUlEPVRydWUNCg0KCQlFbmQgSWYNCg0KCQlvYmpSUy5DbG9zZQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UQ2F0ZWdvcnlfTG9hZEluZm9CeUlEKElELE5hbWUsSW50cm8sT3JkZXIsQ291bnQsUGFyZW50SUQsQWxpYXMsVGVtcGxhdGVOYW1lLExvZ1RlbXBsYXRlLEZ1bGxVcmwsTWV0YVN0cmluZykNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gTG9hZEluZm9CeUFycmF5KGFyeUNhdGVJbmZvKQ0KDQoJCUlmIElzQXJyYXkoYXJ5Q2F0ZUluZm8pPVRydWUgVGhlbg0KCQkJSUQ9YXJ5Q2F0ZUluZm8oMCkNCgkJCU5hbWU9YXJ5Q2F0ZUluZm8oMSkNCgkJCUludHJvPWFyeUNhdGVJbmZvKDIpDQoJCQlPcmRlcj1hcnlDYXRlSW5mbygzKQ0KCQkJQ291bnQ9YXJ5Q2F0ZUluZm8oNCkNCgkJCVBhcmVudElEPWFyeUNhdGVJbmZvKDUpDQoJCQlBbGlhcz1hcnlDYXRlSW5mbyg2KQ0KCQkJVGVtcGxhdGVOYW1lPWFyeUNhdGVJbmZvKDcpDQoJCQlMb2dUZW1wbGF0ZT1hcnlDYXRlSW5mbyg4KQ0KCQkJRnVsbFVybD1hcnlDYXRlSW5mbyg5KQ0KCQkJTWV0YVN0cmluZz1hcnlDYXRlSW5mbygxMCkNCgkJRW5kIElmDQoNCgkJTG9hZEluZm9CeUFycmF5PVRydWUNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVENhdGVnb3J5X0xvYWRJbmZvQnlBcnJheShJRCxOYW1lLEludHJvLE9yZGVyLENvdW50LFBhcmVudElELEFsaWFzLFRlbXBsYXRlTmFtZSxMb2dUZW1wbGF0ZSxGdWxsVXJsLE1ldGFTdHJpbmcpDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIERlbCgpDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RDYXRlZ29yeV9EZWwoSUQsTmFtZSxJbnRybyxPcmRlcixDb3VudCxQYXJlbnRJRCxBbGlhcyxUZW1wbGF0ZU5hbWUsTG9nVGVtcGxhdGUsRnVsbFVybCxNZXRhU3RyaW5nKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoSUQsImludCIsMCkNCgkJSWYgKElEPTApIFRoZW4gRGVsPUZhbHNlOkV4aXQgRnVuY3Rpb24NCgkJRGltIG9ialJTDQoJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBbbG9nX0lEXSBGUk9NIFtibG9nX0FydGljbGVdIFdIRVJFIFtsb2dfQ2F0ZUlEXT0iICYgSUQpDQoJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4gIFNob3dFcnJvcigxMykNCg0KCQkn5LiN6IO95Yig6Zmk5ZCr5pyJ5a2Q5YiG57G755qE5YiG57G7Lg0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgW2NhdGVfSURdIEZST00gW2Jsb2dfQ2F0ZWdvcnldIFdIRVJFIFtjYXRlX1BhcmVudElEXT0iICYgSUQpDQoJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4gIFNob3dFcnJvcig0OSkNCg0KCQlvYmpDb25uLkV4ZWN1dGUoIkRFTEVURSBGUk9NIFtibG9nX0NhdGVnb3J5XSBXSEVSRSBbY2F0ZV9JRF0gPSIgJiBJRCkNCg0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJCURlbD1UcnVlDQoNCglFbmQgRnVuY3Rpb24NCg0KCVByaXZhdGUgU3ViIENsYXNzX0luaXRpYWxpemUoKQ0KCQlJRD0wDQoJCU5hbWU9WkNfTVNHMDU5DQoJCVJlQ291bnQ9MA0KCQlPcmRlcj0wDQoJCUV4SUQ9LTEgJ+ihqOekuuaXoOWOn0lE77yM5paH56ug5YiG57G75peg5Y+Y5YyWDQoJCVNldCBNZXRhPU5ldyBUTWV0YQ0KCUVuZCBTdWINCg0KRW5kIENsYXNzDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIOWumuS5iVRBcnRpY2xl57G7DQonIOi+k+WFpe+8miAgICDml6ANCicg6L+U5Zue77yaICAgIOaXoA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KQ2xhc3MgVEFydGljbGUNCg0KCVB1YmxpYyBJRA0KCVB1YmxpYyBDYXRlSUQNCglQdWJsaWMgQXV0aG9ySUQNCglQdWJsaWMgTGV2ZWwNCg0KCVB1YmxpYyBUaXRsZQ0KCVB1YmxpYyBJbnRybw0KCVB1YmxpYyBDb250ZW50DQoJUHVibGljIFBvc3RUaW1lDQoNCglQdWJsaWMgVGFnDQoJUHVibGljIEFsaWFzDQoNCglQdWJsaWMgQ29tbU51bXMNCglQdWJsaWMgVmlld051bXMNCglQdWJsaWMgVHJhY2tCYWNrTnVtcw0KDQoJUHJpdmF0ZSBJUA0KDQoJUHVibGljIElzdG9wDQoJUHVibGljIEZ1bGxVcmwNCglQdWJsaWMgRlR5cGUNCglQdWJsaWMgTWV0YQ0KCVB1YmxpYyBUZW1wbGF0ZU5hbWUNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgTWV0YVN0cmluZw0KCQlNZXRhU3RyaW5nPU1ldGEuU2F2ZVN0cmluZw0KCUVuZCBQcm9wZXJ0eQ0KCVB1YmxpYyBQcm9wZXJ0eSBMZXQgTWV0YVN0cmluZyhzKQ0KCQlNZXRhLkxvYWRTdHJpbmc9cw0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHJpdmF0ZSBUZW1wbGF0ZV9BcnRpY2xlX1RyYWNrYmFjaw0KCVByaXZhdGUgVGVtcGxhdGVfQXJ0aWNsZV9Db21tZW50DQoJUHJpdmF0ZSBUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnRfUGFnZWJhcg0KCVByaXZhdGUgVGVtcGxhdGVfQXJ0aWNsZV9Db21tZW50cG9zdA0KCVByaXZhdGUgVGVtcGxhdGVfQXJ0aWNsZV9UYWcNCglQcml2YXRlIFRlbXBsYXRlX0FydGljbGVfTmF2YmFyX0wNCglQcml2YXRlIFRlbXBsYXRlX0FydGljbGVfTmF2YmFyX1INCglQcml2YXRlIFRlbXBsYXRlX0FydGljbGVfQ29tbWVudHBvc3RfVmVyaWZ5DQoJUHJpdmF0ZSBUZW1wbGF0ZV9BcnRpY2xlX011dHVhbGl0eQ0KCVByaXZhdGUgVGVtcGxhdGVfQ2FsZW5kYXINCg0KDQoJUHJpdmF0ZSBEaXNhYmxlX0V4cG9ydF9UYWcNCglQcml2YXRlIERpc2FibGVfRXhwb3J0X0NNVGFuZFRCDQoJUHJpdmF0ZSBEaXNhYmxlX0V4cG9ydF9Db21tZW50UG9zdA0KCVByaXZhdGUgRGlzYWJsZV9FeHBvcnRfTXV0dWFsaXR5DQoJUHJpdmF0ZSBEaXNhYmxlX0V4cG9ydF9OYXZCYXINCg0KCVByaXZhdGUgSGFzVGFnDQoJUHJpdmF0ZSBIYXNDTVRhbmRUQg0KCVByaXZhdGUgSGFzTXV0dWFsaXR5DQoNCglQdWJsaWMgaHRtbA0KCVB1YmxpYyBzdWJodG1sDQoJUHVibGljIHN1Ymh0bWxfVGVtcGxhdGVOYW1lDQoNCglQdWJsaWMgSXNEeW5hbWljTG9hZFNpbGRiYXINCglQdWJsaWMgU2VhcmNoVGV4dA0KCVB1YmxpYyBDb21tZW50c1BhZ2UNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgSXNQYWdlDQoJCUlmIEZUeXBlPTEgVGhlbg0KCQkJSXNQYWdlPVRydWUNCgkJRWxzZSANCgkJCUlzUGFnZT1GYWxzZQ0KCQlFbmQgSWYNCglFbmQgUHJvcGVydHkNCg0KCVByaXZhdGUgRnRlbXBsYXRlDQoJUHVibGljIFByb3BlcnR5IExldCBUZW1wbGF0ZShzdHJGaWxlTmFtZSkNCgkJRnRlbXBsYXRlPUdldFRlbXBsYXRlKCJURU1QTEFURV8iICYgc3RyRmlsZU5hbWUpDQoJRW5kIFByb3BlcnR5DQoJUHVibGljIFByb3BlcnR5IEdldCBUZW1wbGF0ZQ0KCQlJZiBGdGVtcGxhdGU8PiIiIFRoZW4NCgkJCVRlbXBsYXRlID0gRnRlbXBsYXRlDQoJCQlFeGl0IFByb3BlcnR5DQoJCUVsc2UNCgkJCUlmIFRlbXBsYXRlTmFtZTw+IiIgVGhlbg0KCQkJCURpbSBzDQoJCQkJcz1HZXRUZW1wbGF0ZSgiVEVNUExBVEVfIiAmVGVtcGxhdGVOYW1lKQ0KCQkJCUlmIHM8PiIiIFRoZW4NCgkJCQkJRnRlbXBsYXRlID0gcw0KCQkJCQlUZW1wbGF0ZSA9IEZ0ZW1wbGF0ZQ0KCQkJCQlFeGl0IFByb3BlcnR5DQoJCQkJRW5kIElmDQoJCQlFbmQgSWYNCgkJCUlmIElzUGFnZT1GYWxzZSBBbmQgQ2F0ZWdvcnlzKENhdGVJRCkuTG9nVGVtcGxhdGU8PiIiIFRoZW4NCgkJCQlEaW0gdA0KCQkJCXQ9R2V0VGVtcGxhdGUoIlRFTVBMQVRFXyIgJkNhdGVnb3J5cyhDYXRlSUQpLkxvZ1RlbXBsYXRlKQ0KCQkJCUlmIHQ8PiIiIFRoZW4NCgkJCQkJRnRlbXBsYXRlID0gdA0KCQkJCQlUZW1wbGF0ZSA9IEZ0ZW1wbGF0ZQ0KCQkJCQlFeGl0IFByb3BlcnR5DQoJCQkJRW5kIElmDQoJCQlFbmQgSWYNCgkJCUlmIElzUGFnZT1UcnVlIFRoZW4NCgkJCQlGdGVtcGxhdGU9R2V0VGVtcGxhdGUoIlRFTVBMQVRFX1BBR0UiKQ0KCQkJRWxzZQ0KCQkJCUZ0ZW1wbGF0ZT1HZXRUZW1wbGF0ZSgiVEVNUExBVEVfU0lOR0xFIikNCgkJCUVuZCBJZg0KDQoJCQlUZW1wbGF0ZSA9IEZ0ZW1wbGF0ZQ0KCQlFbmQgSWYNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBGdW5jdGlvbiBHZXREZWZhdWx0VGVtcGxhdGVOYW1lDQoJCUlmIFRlbXBsYXRlTmFtZTw+IiIgVGhlbg0KCQkJR2V0RGVmYXVsdFRlbXBsYXRlTmFtZT1UZW1wbGF0ZU5hbWUNCgkJRWxzZQ0KCQkJSWYgSXNQYWdlPVRydWUgVGhlbg0KCQkJCUdldERlZmF1bHRUZW1wbGF0ZU5hbWU9IlBBR0UiDQoJCQlFbHNlDQoJCQkJSWYgQ2F0ZWdvcnlzKENhdGVJRCkuTG9nVGVtcGxhdGU8PiIiIFRoZW4NCgkJCQkJR2V0RGVmYXVsdFRlbXBsYXRlTmFtZT1DYXRlZ29yeXMoQ2F0ZUlEKS5Mb2dUZW1wbGF0ZQ0KCQkJCUVsc2UNCgkJCQkJR2V0RGVmYXVsdFRlbXBsYXRlTmFtZT0iU0lOR0xFIg0KCQkJCUVuZCBJZg0KCQkJRW5kIElmDQoJCUVuZCBJZg0KCUVuZCBGdW5jdGlvbg0KDQoJUHJpdmF0ZSBGZnVsbHJlZ2V4DQoJUHVibGljIFByb3BlcnR5IExldCBGdWxsUmVnZXgocykNCgkJRmZ1bGxyZWdleD1zDQoJRW5kIFByb3BlcnR5DQoJUHVibGljIFByb3BlcnR5IEdldCBGdWxsUmVnZXgNCgkJSWYgRmZ1bGxyZWdleDw+IiIgVGhlbiANCgkJCUZ1bGxSZWdleD1GZnVsbHJlZ2V4DQoJCUVsc2UNCgkJCUlmIElzUGFnZT1UcnVlIFRoZW4NCgkJCQlGdWxsUmVnZXg9WkNfUEFHRV9SRUdFWA0KCQkJRWxzZQ0KCQkJCUZ1bGxSZWdleD1aQ19BUlRJQ0xFX1JFR0VYDQoJCQlFbmQgSWYNCgkJRW5kIElmDQoJRW5kIFByb3BlcnR5DQoNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgRnVsbFBhdGgNCgkJQ2FsbCBHZXRVc2Vyc2J5VXNlcklETGlzdChBdXRob3JJRCkNCgkJRnVsbFBhdGg9UGFyc2VDdXN0b21EaXJlY3RvcnlGb3JQYXRoKEZ1bGxSZWdleCxaQ19TVEFUSUNfRElSRUNUT1JZLENhdGVnb3J5cyhDYXRlSUQpLlN0YXRpY05hbWUsVXNlcnMoQXV0aG9ySUQpLlN0YXRpY05hbWUsWWVhcihQb3N0VGltZSksTW9udGgoUG9zdFRpbWUpLERheShQb3N0VGltZSksSUQsU3RhdGljTmFtZSxTdGF0aWNOYW1lKQ0KCUVuZCBQcm9wZXJ0eQ0KDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFVybA0KDQoJCSdwbHVnaW4gbm9kZQ0KCQliQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9Vcmw9RmFsc2UNCgkJRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fVEFydGljbGVfVXJsIGluIEFjdGlvbl9QbHVnaW5fVEFydGljbGVfVXJsDQoJCQlJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9VcmwpIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX1VybCkNCgkJCUlmIGJBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX1VybD1UcnVlIFRoZW4gRXhpdCBQcm9wZXJ0eQ0KCQlOZXh0DQoNCgkJSWYgTGV2ZWw8PTIgVGhlbg0KCQkJVXJsID0gQmxvZ0hvc3QgJiAidmlldy5hc3A/aWQ9IiAmIElEDQoJCUVsc2UNCgkJCUNhbGwgR2V0VXNlcnNieVVzZXJJRExpc3QoQXV0aG9ySUQpDQoJCQlVcmwgPVBhcnNlQ3VzdG9tRGlyZWN0b3J5Rm9yVXJsKEZ1bGxSZWdleCxaQ19TVEFUSUNfRElSRUNUT1JZLENhdGVnb3J5cyhDYXRlSUQpLlN0YXRpY05hbWUsVXNlcnMoQXV0aG9ySUQpLlN0YXRpY05hbWUsWWVhcihQb3N0VGltZSksTW9udGgoUG9zdFRpbWUpLERheShQb3N0VGltZSksSUQsU3RhdGljTmFtZSxTdGF0aWNOYW1lKQ0KCQkJSWYgUmlnaHQoVXJsLDEyKT0iZGVmYXVsdC5odG1sIiBUaGVuIFVybD1MZWZ0KFVybCxMZW4oVXJsKS0xMikNCgkJCSdJZiBSaWdodChVcmwsMTApPSJpbmRleC5odG1sIiBUaGVuIFVybD1MZWZ0KFVybCxMZW4oVXJsKS0xMCkNCgkJRW5kIElmDQoNCgkJVXJsPVJlcGxhY2UoUmVwbGFjZShVcmwsIi8vIiwiLyIpLCI6LyIsIjovLyIsMSwxKQ0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UQXJ0aWNsZV9VcmwoVXJsKQ0KDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFN0YXRpY05hbWUNCgkJSWYgSXNOdWxsKEFsaWFzKSBPciBJc0VtcHR5KEFsaWFzKSBPciBBbGlhcz0iIiBUaGVuDQoJCQlTdGF0aWNOYW1lID0gSUQNCgkJRWxzZQ0KCQkJU3RhdGljTmFtZSA9IEFsaWFzDQoJCUVuZCBJZg0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHJpdmF0ZSBGVHJhY2tCYWNrS2V5DQoJUHVibGljIFByb3BlcnR5IEdldCBUcmFja0JhY2tLZXkNCgkJSWYgSXNOdWxsKEZUcmFja0JhY2tLZXkpIE9yIElzRW1wdHkoRlRyYWNrQmFja0tleSkgT3IgRlRyYWNrQmFja0tleT0iIiBUaGVuDQoJCQknRlRyYWNrQmFja0tleT1MZWZ0KE1ENShaQ19CTE9HX0NMU0lEICYgQ1N0cihJRCkgJiBDU3RyKFRyYWNrQmFja051bXMpKSw4KQ0KCQkJRlRyYWNrQmFja0tleT1FbXB0eQ0KCQlFbmQgSWYNCgkJVHJhY2tCYWNrS2V5PUZUcmFja0JhY2tLZXkNCglFbmQgUHJvcGVydHkNCg0KCVByaXZhdGUgRkNvbW1lbnRLZXkNCglQdWJsaWMgUHJvcGVydHkgR2V0IENvbW1lbnRLZXkNCgkJSWYgSXNOdWxsKEZDb21tZW50S2V5KSBPciBJc0VtcHR5KEZDb21tZW50S2V5KSBPciBGQ29tbWVudEtleT0iIiBUaGVuDQoJCQlGQ29tbWVudEtleT1MZWZ0KE1ENShaQ19CTE9HX0NMU0lEICYgQ1N0cihJRCkpLDgpDQoJCUVuZCBJZg0KCQlDb21tZW50S2V5PUZDb21tZW50S2V5DQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFRyYWNrQmFjaw0KCQlUcmFja0JhY2sgPSBCbG9nSG9zdCAmICJ6Yl9zeXN0ZW0vY21kLmFzcD9hY3Q9dGImaWQ9IiYgSUQgJiIma2V5PSIgJiBUcmFja0JhY2tLZXkNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgUHJlVHJhY2tCYWNrDQoJCVByZVRyYWNrQmFjayA9IEJsb2dIb3N0ICYgInpiX3N5c3RlbS9jbWQuYXNwP2FjdD1nZXR0YnVybCZpZD0iICYgSUQNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgVHJhY2tCYWNrVXJsDQoJCVRyYWNrQmFja1VybCA9IFRyYWNrQmFjaw0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBDb21tZW50VXJsDQoJCUNvbW1lbnRVcmwgPSBVcmwgJiAiI2NvbW1lbnQiDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFdmd0NvbW1lbnQNCgkJV2Z3Q29tbWVudCA9IEJsb2dIb3N0DQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFdmd0NvbW1lbnRSc3MNCgkJV2Z3Q29tbWVudFJzcyA9IEJsb2dIb3N0ICYgImZlZWQuYXNwP2NtdD0iICYgSUQNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgV0FQVXJsDQoJCVdBUFVybCA9IEJsb2dIb3N0ICYgIndhcC5hc3A/YWN0PVZpZXcmaWQ9IiAmIElEDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IEh0bWxXQVBVcmwNCgkJSHRtbFdBUFVybD1UcmFuc2ZlckhUTUwoV0FQVXJsLCJbaHRtbC1mb3JtYXRdIikNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgQ29tbWVudFBvc3RVcmwNCgkJQ29tbWVudFBvc3RVcmwgPSBCbG9nSG9zdCAmICJ6Yl9zeXN0ZW0vY21kLmFzcD9hY3Q9Y210JmtleT0iICYgQ29tbWVudEtleQ0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBIdG1sQ29udGVudA0KCQlIdG1sQ29udGVudD1UcmFuc2ZlckhUTUwoVUJCQ29kZShDb250ZW50LCJbZmFjZV1bbGlua11bZW1haWxdW2F1dG9saW5rXVtmb250XVtjb2RlXVtpbWFnZV1bdHlwZXNldF1bbWVkaWFdW2ZsYXNoXVtrZXldIiksIltodG1sLWphcGFuXVt1cGxvYWRdIikNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgSHRtbFRpdGxlDQoJCUh0bWxUaXRsZT1UcmFuc2ZlckhUTUwoVGl0bGUsIltodG1sLWphcGFuXVtodG1sLWZvcm1hdF0iKQ0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBIdG1sSW50cm8NCgkJSHRtbEludHJvPVRyYW5zZmVySFRNTChVQkJDb2RlKEludHJvLCJbZmFjZV1bbGlua11bZW1haWxdW2F1dG9saW5rXVtmb250XVtjb2RlXVtpbWFnZV1bdHlwZXNldF1bbWVkaWFdW2ZsYXNoXVtrZXldIiksIltodG1sLWphcGFuXVt1cGxvYWRdIikNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgSHRtbFVybA0KCQlIdG1sVXJsPVRyYW5zZmVySFRNTChUcmFuc2ZlckhUTUwoRnVsbFVybCwiW3pjX2Jsb2dfaG9zdF0iKSwiW2h0bWwtZm9ybWF0XSIpDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFRhZ1RvTmFtZQ0KDQoJCURpbSB0LGkscw0KDQoJCUlmIFRhZzw+IiIgVGhlbg0KCQkJQ2FsbCBHZXRUYWdzYnlUYWdJRExpc3QoVGFnKQ0KCQkJcz1UYWcNCgkJCXM9UmVwbGFjZShzLCJ9IiwiIikNCgkJCXQ9U3BsaXQocywieyIpDQoNCgkJCUZvciBpPUxCb3VuZCh0KSBUbyBVQm91bmQodCkNCgkJCQlJZiB0KGkpPD4iIiBUaGVuDQoJCQkJCUlmIElzRW1wdHkoRmlyc3RUYWdJbnRybykgVGhlbiBGaXJzdFRhZ0ludHJvPVRhZ3ModChpKSkuSW50cm8NCgkJCQkJdChpKT1UYWdzKHQoaSkpLk5hbWUNCgkJCQlFbmQgSWYNCgkJCU5leHQNCg0KCQkJcz1Kb2luKHQsIiwiKQ0KCQkJcz1SaWdodChzLExlbihzKS0xKQ0KDQoJCQlUYWdUb05hbWU9cw0KCQlFbmQgSWYNCg0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIEZpcnN0VGFnSW50cm8NCg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gTG9hZEluZm9ieUlEKGxvZ19JRCkNCg0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKGxvZ19JRCwiaW50IiwwKQ0KDQoJCURpbSBvYmpSUw0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgW2xvZ19JRF0sW2xvZ19UYWddLFtsb2dfQ2F0ZUlEXSxbbG9nX1RpdGxlXSxbbG9nX0ludHJvXSxbbG9nX0NvbnRlbnRdLFtsb2dfTGV2ZWxdLFtsb2dfQXV0aG9ySURdLFtsb2dfUG9zdFRpbWVdLFtsb2dfQ29tbU51bXNdLFtsb2dfVmlld051bXNdLFtsb2dfVHJhY2tCYWNrTnVtc10sW2xvZ19VcmxdLFtsb2dfSXN0b3BdLFtsb2dfVGVtcGxhdGVdLFtsb2dfRnVsbFVybF0sW2xvZ19UeXBlXSxbbG9nX01ldGFdIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgW2xvZ19JRF09IiAmIGxvZ19JRCkNCg0KCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoNCgkJCUlEPW9ialJTKCJsb2dfSUQiKQ0KCQkJVGFnPW9ialJTKCJsb2dfVGFnIikNCgkJCUNhdGVJRD1vYmpSUygibG9nX0NhdGVJRCIpDQoJCQlUaXRsZT1vYmpSUygibG9nX1RpdGxlIikNCgkJCUludHJvPW9ialJTKCJsb2dfSW50cm8iKQ0KCQkJQ29udGVudD1vYmpSUygibG9nX0NvbnRlbnQiKQ0KCQkJTGV2ZWw9b2JqUlMoImxvZ19MZXZlbCIpDQoJCQlBdXRob3JJRD1vYmpSUygibG9nX0F1dGhvcklEIikNCgkJCVBvc3RUaW1lPW9ialJTKCJsb2dfUG9zdFRpbWUiKQ0KCQkJQ29tbU51bXM9b2JqUlMoImxvZ19Db21tTnVtcyIpDQoJCQlWaWV3TnVtcz1vYmpSUygibG9nX1ZpZXdOdW1zIikNCgkJCVRyYWNrQmFja051bXM9b2JqUlMoImxvZ19UcmFja0JhY2tOdW1zIikNCgkJCUFsaWFzPW9ialJTKCJsb2dfVXJsIikNCgkJCUlzdG9wPW9ialJTKCJsb2dfSXN0b3AiKQ0KCQkJVGVtcGxhdGVOYW1lPW9ialJTKCJsb2dfVGVtcGxhdGUiKQ0KCQkJRnVsbFVybD1vYmpSUygibG9nX0Z1bGxVcmwiKQ0KCQkJRlR5cGU9b2JqUlMoImxvZ19UeXBlIikNCgkJCU1ldGFTdHJpbmc9b2JqUlMoImxvZ19NZXRhIikNCg0KCQkJQ29udGVudD1UcmFuc2ZlckhUTUwoQ29udGVudCwiW3VwbG9hZF1bemNfYmxvZ19ob3N0XSIpDQoJCQlJbnRybz1UcmFuc2ZlckhUTUwoSW50cm8sIlt1cGxvYWRdW3pjX2Jsb2dfaG9zdF0iKQ0KDQoJCQlJZiBaQ19QT1NUX1NUQVRJQ19NT0RFPD4iU1RBVElDIiBUaGVuIEZ1bGxVcmw9UmVwbGFjZShVcmwsQmxvZ0hvc3QsIjwjWkNfQkxPR19IT1NUIz4iKQ0KDQoJCQlQb3N0VGltZSA9IFllYXIoUG9zdFRpbWUpICYgIi0iICYgTW9udGgoUG9zdFRpbWUpICYgIi0iICYgRGF5KFBvc3RUaW1lKSAmICIgIiAmIEhvdXIoUG9zdFRpbWUpICYgIjoiICYgTWludXRlKFBvc3RUaW1lKSAmICI6IiAmIFNlY29uZChQb3N0VGltZSkNCg0KCQlFbHNlDQoJCQlFeGl0IEZ1bmN0aW9uDQoJCUVuZCBJZg0KDQoJCW9ialJTLkNsb3NlDQoJCVNldCBvYmpSUz1Ob3RoaW5nDQoNCgkJTG9hZEluZm9ieUlEPVRydWUNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVEFydGljbGVfTG9hZEluZm9ieUlEKElELFRhZyxDYXRlSUQsVGl0bGUsSW50cm8sQ29udGVudCxMZXZlbCxBdXRob3JJRCxQb3N0VGltZSxDb21tTnVtcyxWaWV3TnVtcyxUcmFja0JhY2tOdW1zLEFsaWFzLElzdG9wLFRlbXBsYXRlTmFtZSxGdWxsVXJsLEZUeXBlLE1ldGFTdHJpbmcpDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gTG9hZEluZm9CeUFycmF5KGFyeUFydGljbGVJbmZvKQ0KDQoJCSdbbG9nX0lEXSxbbG9nX1RhZ10sW2xvZ19DYXRlSURdLFtsb2dfVGl0bGVdLFtsb2dfSW50cm9dLFtsb2dfQ29udGVudF0sW2xvZ19MZXZlbF0sW2xvZ19BdXRob3JJRF0sW2xvZ19Qb3N0VGltZV0sW2xvZ19Db21tTnVtc10sW2xvZ19WaWV3TnVtc10sW2xvZ19UcmFja0JhY2tOdW1zXSxbbG9nX1VybF0sW2xvZ19Jc3RvcF0sW2xvZ19UZW1wbGF0ZV0sW2xvZ19GdWxsVXJsXSxbbG9nX1R5cGVdLFtsb2dfTWV0YV0NCg0KCQlJZiBJc0FycmF5KGFyeUFydGljbGVJbmZvKT1UcnVlIFRoZW4NCg0KCQkJSUQ9YXJ5QXJ0aWNsZUluZm8oMCkNCgkJCVRhZz1hcnlBcnRpY2xlSW5mbygxKQ0KCQkJQ2F0ZUlEPWFyeUFydGljbGVJbmZvKDIpDQoJCQlUaXRsZT1hcnlBcnRpY2xlSW5mbygzKQ0KCQkJSW50cm89YXJ5QXJ0aWNsZUluZm8oNCkNCgkJCUNvbnRlbnQ9YXJ5QXJ0aWNsZUluZm8oNSkNCgkJCUxldmVsPWFyeUFydGljbGVJbmZvKDYpDQoJCQlBdXRob3JJRD1hcnlBcnRpY2xlSW5mbyg3KQ0KCQkJUG9zdFRpbWU9YXJ5QXJ0aWNsZUluZm8oOCkNCgkJCUNvbW1OdW1zPWFyeUFydGljbGVJbmZvKDkpDQoJCQlWaWV3TnVtcz1hcnlBcnRpY2xlSW5mbygxMCkNCgkJCVRyYWNrQmFja051bXM9YXJ5QXJ0aWNsZUluZm8oMTEpDQoJCQlBbGlhcz1hcnlBcnRpY2xlSW5mbygxMikNCgkJCUlzdG9wPWFyeUFydGljbGVJbmZvKDEzKQ0KCQkJVGVtcGxhdGVOYW1lPWFyeUFydGljbGVJbmZvKDE0KQ0KCQkJRnVsbFVybD1hcnlBcnRpY2xlSW5mbygxNSkNCgkJCUZUeXBlPWFyeUFydGljbGVJbmZvKDE2KQ0KCQkJTWV0YVN0cmluZz1hcnlBcnRpY2xlSW5mbygxNykNCg0KCQkJQ29udGVudD1UcmFuc2ZlckhUTUwoQ29udGVudCwiW3VwbG9hZF1bemNfYmxvZ19ob3N0XSIpDQoJCQlJbnRybz1UcmFuc2ZlckhUTUwoSW50cm8sIlt1cGxvYWRdW3pjX2Jsb2dfaG9zdF0iKQ0KDQoJCQlQb3N0VGltZSA9IFllYXIoUG9zdFRpbWUpICYgIi0iICYgTW9udGgoUG9zdFRpbWUpICYgIi0iICYgRGF5KFBvc3RUaW1lKSAmICIgIiAmIEhvdXIoUG9zdFRpbWUpICYgIjoiICYgTWludXRlKFBvc3RUaW1lKSAmICI6IiAmIFNlY29uZChQb3N0VGltZSkNCg0KCQkJSWYgWkNfUE9TVF9TVEFUSUNfTU9ERTw+IlNUQVRJQyIgVGhlbiBGdWxsVXJsPVJlcGxhY2UoVXJsLEJsb2dIb3N0LCI8I1pDX0JMT0dfSE9TVCM+IikNCg0KCQlFbmQgSWYNCg0KCQlMb2FkSW5mb0J5QXJyYXk9VHJ1ZQ0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UQXJ0aWNsZV9Mb2FkSW5mb0J5QXJyYXkoSUQsVGFnLENhdGVJRCxUaXRsZSxJbnRybyxDb250ZW50LExldmVsLEF1dGhvcklELFBvc3RUaW1lLENvbW1OdW1zLFZpZXdOdW1zLFRyYWNrQmFja051bXMsQWxpYXMsSXN0b3AsVGVtcGxhdGVOYW1lLEZ1bGxVcmwsRlR5cGUsTWV0YVN0cmluZykNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBQb3N0KCkNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVEFydGljbGVfUG9zdChJRCxUYWcsQ2F0ZUlELFRpdGxlLEludHJvLENvbnRlbnQsTGV2ZWwsQXV0aG9ySUQsUG9zdFRpbWUsQ29tbU51bXMsVmlld051bXMsVHJhY2tCYWNrTnVtcyxBbGlhcyxJc3RvcCxUZW1wbGF0ZU5hbWUsRnVsbFVybCxGVHlwZSxNZXRhU3RyaW5nKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoSUQsImludCIsMCkNCgkJQ2FsbCBDaGVja1BhcmFtZXRlcihDYXRlSUQsImludCIsMCkNCgkJQ2FsbCBDaGVja1BhcmFtZXRlcihBdXRob3JJRCwiaW50IiwwKQ0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKExldmVsLCJpbnQiLDApDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoUG9zdFRpbWUsImR0bSIsRW1wdHkpDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoSXN0b3AsImJvb2wiLEZhbHNlKQ0KDQoJCSdJROWPr+S7peS4ujANCgkJJ0lmIChDYXRlSUQ9MCkgVGhlbiBQb3N0PUZhbHNlOkV4aXQgRnVuY3Rpb24NCgkJSWYgKEF1dGhvcklEPTApIFRoZW4gUG9zdD1GYWxzZTpFeGl0IEZ1bmN0aW9uDQoJCUlmIElzRW1wdHkoUG9zdFRpbWUpIFRoZW4gUG9zdD1GYWxzZTpFeGl0IEZ1bmN0aW9uDQoNCgkJVGl0bGU9RmlsdGVyU1FMKFRpdGxlKQ0KCQlJbnRybz1GaWx0ZXJTUUwoSW50cm8pDQoJCUNvbnRlbnQ9RmlsdGVyU1FMKENvbnRlbnQpDQoJCVRhZz1GaWx0ZXJTUUwoVGFnKQ0KCQlJUD1GaWx0ZXJTUUwoSVApDQoNCgkJVGl0bGU9VHJhbnNmZXJIVE1MKFRpdGxlLCJbamFwYW4taHRtbF0iKQ0KCQlJbnRybz1UcmFuc2ZlckhUTUwoSW50cm8sIltqYXBhbi1odG1sXSIpDQoJCUNvbnRlbnQ9VHJhbnNmZXJIVE1MKENvbnRlbnQsIltqYXBhbi1odG1sXSIpDQoNCgkJSW50cm89VHJhbnNmZXJIVE1MKEludHJvLCJbYW50aS11cGxvYWRdIikNCgkJQ29udGVudD1UcmFuc2ZlckhUTUwoQ29udGVudCwiW2FudGktdXBsb2FkXSIpDQoNCgkJJ+WFiOi/m+ihjCJbYW50aS11cGxvYWRdIu+8jOWGjeabv+aNojwjWkNfQkxPR19IT1NUIz4NCgkJSW50cm89VHJhbnNmZXJIVE1MKEludHJvLCJbYW50aS16Y19ibG9nX2hvc3RdIikNCgkJQ29udGVudD1UcmFuc2ZlckhUTUwoQ29udGVudCwiW2FudGktemNfYmxvZ19ob3N0XSIpDQoNCgkJQWxpYXM9VHJhbnNmZXJIVE1MKEFsaWFzLCJbZGlyZWN0b3J5JmZpbGVdIikNCgkJSWYgTGVmdChBbGlhcywxKT0iLyIgVGhlbiBBbGlhcz1SaWdodChBbGlhcyxMZW4oQWxpYXMpLTEpDQoJCUlmIFJpZ2h0KEFsaWFzLDEpPSIvIiBUaGVuIEFsaWFzPUxlZnQoQWxpYXMsTGVuKEFsaWFzKS0xKQ0KCQlBbGlhcz1GaWx0ZXJTUUwoQWxpYXMpDQoNCgkJQ2FsbCBHZXRVc2Vyc2J5VXNlcklETGlzdChBdXRob3JJRCkNCg0KCQkn5qOA5p+l4oCc5Yir5ZCN4oCd5piv5ZCm5pyJ6YeN5ZCNDQoJCUlmIEFsaWFzPD4iIiBUaGVuDQoJCQlEaW0gb2JqUlNzdWINCgkJCVNldCBvYmpSU3N1Yj1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBbbG9nX0lEXSBGUk9NIFtibG9nX0FydGljbGVdIFdIRVJFIFtsb2dfSURdPD4iJiBJRCAmIiBBTkQgW2xvZ19VcmxdPSciJiBBbGlhcyAmIiciICkNCgkJCUlmIChOb3Qgb2JqUlNzdWIuYm9mKSBBbmQgKE5vdCBvYmpSU3N1Yi5lb2YpIFRoZW4NCgkJCQlSYW5kb21pemUNCgkJCQlBbGlhcz1BbGlhcyAmICJfIiAmIENTdHIoSW50KCg5ICogUm5kKSArIDEpKSAmIENTdHIoSW50KCg5ICogUm5kKSArIDEpKSAmIENTdHIoSW50KCg5ICogUm5kKSArIDEpKSAmIENTdHIoSW50KCg5ICogUm5kKSArIDEpKQ0KCQkJRW5kIElmDQoJCQlTZXQgb2JqUlNzdWI9Tm90aGluZw0KCQlFbmQgSWYNCg0KCQlJZiBMZW4oVGl0bGUpPTAgVGhlbiBQb3N0PUZhbHNlOkV4aXQgRnVuY3Rpb24NCgkJSWYgTGVuKENvbnRlbnQpPTAgVGhlbiBQb3N0PUZhbHNlOkV4aXQgRnVuY3Rpb24NCgkJJ0lmIExlbihJbnRybyk9MCBUaGVuIEludHJvPUxlZnQoQ29udGVudCxaQ19BUlRJQ0xFX0VYQ0VSUFRfTUFYKSAmICIuLi4iDQoNCgkJVGVtcGxhdGVOYW1lPVVDYXNlKEZpbHRlclNRTChUZW1wbGF0ZU5hbWUpKQ0KDQoJCUlmIElzUGFnZT1GYWxzZSBUaGVuDQoJCQlJZiBDYXRlZ29yeXMoQ2F0ZUlEKS5Mb2dUZW1wbGF0ZTw+IiIgVGhlbg0KCQkJCUlmIFRlbXBsYXRlTmFtZT1DYXRlZ29yeXMoQ2F0ZUlEKS5Mb2dUZW1wbGF0ZSBUaGVuIFRlbXBsYXRlTmFtZT0iIg0KCQkJRWxzZQ0KCQkJCUlmIFRlbXBsYXRlTmFtZT0iU0lOR0xFIiBUaGVuIFRlbXBsYXRlTmFtZT0iIg0KCQkJRW5kIElmDQoJCUVsc2UNCgkJCUlmIFRlbXBsYXRlTmFtZT0iUEFHRSIgVGhlbiBUZW1wbGF0ZU5hbWU9IiINCgkJRW5kIElmDQoNCgkJRGltIG9ialJTDQoJCUlmIElEPTAgVGhlbg0KCQkJb2JqQ29ubi5FeGVjdXRlKCJJTlNFUlQgSU5UTyBbYmxvZ19BcnRpY2xlXShbbG9nX0NhdGVJRF0sW2xvZ19BdXRob3JJRF0sW2xvZ19MZXZlbF0sW2xvZ19UaXRsZV0sW2xvZ19JbnRyb10sW2xvZ19Db250ZW50XSxbbG9nX1Bvc3RUaW1lXSxbbG9nX0lQXSxbbG9nX1RhZ10sW2xvZ19VcmxdLFtsb2dfSXN0b3BdLFtsb2dfVGVtcGxhdGVdLFtsb2dfRnVsbFVybF0sW2xvZ19WaWV3TnVtc10sW2xvZ19UeXBlXSxbbG9nX01ldGFdKSBWQUxVRVMgKCImQ2F0ZUlEJiIsIiZBdXRob3JJRCYiLCImTGV2ZWwmIiwnIiZUaXRsZSYiJywnIiZJbnRybyYiJywnIiZDb250ZW50JiInLCciJlBvc3RUaW1lJiInLCciJklQJiInLCciJlRhZyYiJywnIiZBbGlhcyYiJywiJkNMbmcoSXN0b3ApJiIsJyImVGVtcGxhdGVOYW1lJiInLCciJkZ1bGxVcmwmIicsMCwiJkNMbmcoRlR5cGUpJiIsJyImTWV0YVN0cmluZyYiJykiKQ0KCQkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIE1BWChbbG9nX0lEXSkgRlJPTSBbYmxvZ19BcnRpY2xlXSIpDQoJCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoJCQkJSUQ9b2JqUlMoMCkNCgkJCUVuZCBJZg0KCQkJU2V0IG9ialJTPU5vdGhpbmcNCg0KCQkJRnVsbFVybD1SZXBsYWNlKFVybCxCbG9nSG9zdCwiPCNaQ19CTE9HX0hPU1QjPiIpDQoJCQlvYmpDb25uLkV4ZWN1dGUoIlVQREFURSBbYmxvZ19BcnRpY2xlXSBTRVQgW2xvZ19GdWxsVXJsXT0nIiZGdWxsVXJsJiInIFdIRVJFIFtsb2dfSURdID0iICYgSUQpDQoJCUVsc2UNCgkJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBbbG9nX0NhdGVJRF0sW2xvZ19BdXRob3JJRF0gRlJPTSBbYmxvZ19BcnRpY2xlXSBXSEVSRSBbbG9nX0lEXSA9IiAmIElEKQ0KCQkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KCQkJCUlmIG9ialJTKDApPD5DYXRlSUQgVGhlbg0KCQkJCQlDYXRlZ29yeXMoQ2F0ZUlEKS5FeElEPW9ialJTKDApDQoJCQkJRW5kIElmIA0KCQkJCUlmIG9ialJTKDEpPD5BdXRob3JJRCBUaGVuDQoJCQkJCVVzZXJzKEF1dGhvcklEKS5FeElEPW9ialJTKDEpDQoJCQkJRW5kIElmIA0KCQkJRW5kIElmDQoJCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJCQlGdWxsVXJsPVJlcGxhY2UoVXJsLEJsb2dIb3N0LCI8I1pDX0JMT0dfSE9TVCM+IikNCg0KCQkJb2JqQ29ubi5FeGVjdXRlKCJVUERBVEUgW2Jsb2dfQXJ0aWNsZV0gU0VUIFtsb2dfQ2F0ZUlEXT0iJkNhdGVJRCYiLFtsb2dfQXV0aG9ySURdPSImQXV0aG9ySUQmIixbbG9nX0xldmVsXT0iJkxldmVsJiIsW2xvZ19UaXRsZV09JyImVGl0bGUmIicsW2xvZ19JbnRyb109JyImSW50cm8mIicsW2xvZ19Db250ZW50XT0nIiZDb250ZW50JiInLFtsb2dfUG9zdFRpbWVdPSciJlBvc3RUaW1lJiInLFtsb2dfSVBdPSciJklQJiInLFtsb2dfVGFnXT0nIiZUYWcmIicsW2xvZ19VcmxdPSciJkFsaWFzJiInLFtsb2dfSXN0b3BdPSImQ0xuZyhJc3RvcCkmIixbbG9nX1RlbXBsYXRlXT0nIiZUZW1wbGF0ZU5hbWUmIicsW2xvZ19GdWxsVXJsXT0nIiZGdWxsVXJsJiInLFtsb2dfVHlwZV09IiZDTG5nKEZUeXBlKSYiLFtsb2dfTWV0YV09JyImTWV0YVN0cmluZyYiJyBXSEVSRSBbbG9nX0lEXSA9IiAmIElEKQ0KCQlFbmQgSWYNCg0KCQlQb3N0PVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBFeHBvcnRfVGFnDQoNCgkJSWYgRGlzYWJsZV9FeHBvcnRfVGFnPVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoNCgkJJ3BsdWdpbiBub2RlDQoJCWJBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9UYWdfQmVnaW49RmFsc2UNCgkJRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X1RhZ19CZWdpbiBpbiBBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9UYWdfQmVnaW4NCgkJCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9UYWdfQmVnaW4pIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9UYWdfQmVnaW4pDQoJCQlJZiBiQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfVGFnX0JlZ2luPVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCU5leHQNCg0KCQlDYWxsIEdldFRhZ3NieVRhZ0lETGlzdChUYWcpDQoNCgkJJ1RhZw0KCQlEaW0gdCxpLHMsag0KDQoJCUlmIFRhZzw+IiIgVGhlbg0KDQoJCQlIYXNUYWc9VHJ1ZQ0KDQoJCQlzPVJlcGxhY2UoVGFnLCJ9IiwiIikNCgkJCXQ9U3BsaXQocywieyIpDQoJCQlGb3IgaT1MQm91bmQodCkgVG8gVUJvdW5kKHQpDQoJCQkJSWYgdChpKTw+IiIgVGhlbg0KDQoJCQkJCUlmIElzT2JqZWN0KFRhZ3ModChpKSkpPVRydWUgVGhlbg0KCQkJCQkJaj1HZXRUZW1wbGF0ZSgiVEVNUExBVEVfQl9BUlRJQ0xFX1RBRyIpDQoNCgkJCQkJCVRlbXBsYXRlX0FydGljbGVfVGFnPVRlbXBsYXRlX0FydGljbGVfVGFnICYgVGFncyh0KGkpKS5NYWtlVGVtcGxhdGUoaikNCgkJCQkJRW5kIElmDQoJCQkJRW5kIElmDQoJCQlOZXh0DQoNCgkJRW5kIElmDQoNCgkJVGVtcGxhdGVfQXJ0aWNsZV9UYWc9VHJhbnNmZXJIVE1MKFRlbXBsYXRlX0FydGljbGVfVGFnLCJbYW50aS16Y19ibG9nX2hvc3RdIikNCg0KCQlFeHBvcnRfVGFnPVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCg0KDQoJRnVuY3Rpb24gRXhwb3J0X0NNVGFuZFRCKGludFBhZ2UpDQoNCgkJSWYgRGlzYWJsZV9FeHBvcnRfQ01UYW5kVEI9VHJ1ZSBUaGVuIEV4aXQgRnVuY3Rpb24NCg0KCQlJZiBaQ19DT01NRU5UX1RVUk5PRkY9VHJ1ZSBUaGVuIA0KCQkJVGVtcGxhdGVfQXJ0aWNsZV9Db21tZW50PSIiDQoJCQlFeGl0IEZ1bmN0aW9uDQoJCUVuZCBJZg0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoaW50UGFnZSwiaW50IiwxKQ0KDQoJCSdwbHVnaW4gbm9kZQ0KCQliQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfQ01UYW5kVEJfQmVnaW49RmFsc2UNCgkJRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X0NNVGFuZFRCX0JlZ2luIGluIEFjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X0NNVGFuZFRCX0JlZ2luDQoJCQlJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfQ01UYW5kVEJfQmVnaW4pIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9DTVRhbmRUQl9CZWdpbikNCgkJCUlmIGJBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9DTVRhbmRUQl9CZWdpbj1UcnVlIFRoZW4gRXhpdCBGdW5jdGlvbg0KCQlOZXh0DQoJCQ0KCQlEaW0gaW50Q29tbW51bXMNCgkJaW50Q29tbW51bXM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgQ09VTlQoW2xvZ19JRF0pIEZST00gW2Jsb2dfQ29tbWVudF0gV0hFUkUgW2xvZ19JRF0gPSIgJiBJRCAmICIgQU5EIFtjb21tX2lzQ2hlY2tdPTAgQU5EIFtjb21tX1BhcmVudElEXT0wIikoMCkNCgkJSWYgaW50Q29tbW51bXMgPiAwIFRoZW4NCg0KCQkJSGFzQ01UYW5kVEI9VHJ1ZQ0KDQoJCQlEaW0gc3RyQ19Db3VudCxzdHJDLHN0clRfQ291bnQsc3RyVA0KDQoJCQlEaW0gb2JqQ29tbWVudA0KCQkJRGltIG9ialRyYWNrQmFjaw0KDQoJCQlEaW0gaSxqLHMsdA0KDQoJCQlEaW0gY29tbWVudHNfSUQoKQ0KCQkJRGltIGNvbW1lbnRzX1BhcmVudElEKCkNCgkJCURpbSBjb21tZW50c19UZW1wbGF0ZSgpDQoNCg0KCQkJRGltIElEYW5kVGVtcA0KCQkJU2V0IElEYW5kVGVtcCA9IENyZWF0ZU9iamVjdCgiU2NyaXB0aW5nLkRpY3Rpb25hcnkiKQ0KDQoJCQlEaW0gdHJlZQ0KCQkJU2V0IHRyZWUgPSBDcmVhdGVPYmplY3QoIlNjcmlwdGluZy5EaWN0aW9uYXJ5IikNCg0KCQkJRGltIGFsbA0KCQkJU2V0IGFsbCA9IENyZWF0ZU9iamVjdCgiU2NyaXB0aW5nLkRpY3Rpb25hcnkiKQ0KDQoNCgkJCURpbSBhbGx0ZW1wbGF0ZQ0KCQkJU2V0IGFsbHRlbXBsYXRlID0gQ3JlYXRlT2JqZWN0KCJTY3JpcHRpbmcuRGljdGlvbmFyeSIpDQoNCgkJCURpbSBvYmpSUw0KDQoJCQlEaW0gb3JkZXINCgkJCW9yZGVyPUlJZihaQ19DT01NRU5UX1JFVkVSU0VfT1JERVJfRVhQT1JULCJERVNDIiwiQVNDIikgDQoNCgkJCXN0ckNfQ291bnQ9MA0KCQkJU2V0IG9ialJTPVNlcnZlci5DcmVhdGVPYmplY3QoIkFET0RCLlJlY29yZHNldCIpDQoJCQlvYmpSUy5DdXJzb3JUeXBlID0gYWRPcGVuS2V5c2V0DQoJCQlvYmpSUy5Mb2NrVHlwZSA9IGFkTG9ja1JlYWRPbmx5DQoJCQlvYmpSUy5BY3RpdmVDb25uZWN0aW9uPW9iakNvbm4NCgkJCVpDX0NPTU1FTlRTX0RJU1BMQVlfQ09VTlQ9SUlGKFpDX0NPTU1FTlRTX0RJU1BMQVlfQ09VTlQ9MCwxMDAwMCxaQ19DT01NRU5UU19ESVNQTEFZX0NPVU5UKQ0KCQkJRGltIFBhZ2VTaXplMixQYWdlU2l6ZTMNCgkJCVBhZ2VTaXplMj1aQ19DT01NRU5UU19ESVNQTEFZX0NPVU5UDQoJCQlQYWdlU2l6ZTM9WkNfQ09NTUVOVFNfRElTUExBWV9DT1VOVA0KCQkJSWYgaW50UGFnZTwxIFRoZW4gaW50UGFnZT0xDQoJCQlJZiBQYWdlU2l6ZTMqaW50UGFnZT5pbnRDb21tbnVtcyBUaGVuDQoJCQkJUGFnZVNpemUyPUNMbmcoaW50Q29tbW51bXMgTW9kIFBhZ2VTaXplMykNCgkJCQlJZiBQYWdlU2l6ZTMqKGludFBhZ2UtMSkrUGFnZVNpemUyPmludENvbW1udW1zIFRoZW4NCgkJCQkJVGVtcGxhdGVfQXJ0aWNsZV9Db21tZW50PSI8aW5zIHN0eWxlPSIiZGlzcGxheTpub25lOyIiIGlkPSIiQWpheENvbW1lbnRCZWdpbiIiPjwvaW5zPiIgJiBUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnQgJiAiPGlucyBzdHlsZT0iImRpc3BsYXk6bm9uZTsiIiBpZD0iIkFqYXhDb21tZW50RW5kIiI+PC9pbnM+Ig0KCQkJCQlFeHBvcnRfQ01UYW5kVEI9VHJ1ZQ0KCQkJCQlFeGl0IEZ1bmN0aW9uDQoJCQkJRW5kIElmDQoJCQlFbmQgSWYNCgkJCWo9UGFnZVNpemUyDQoJCQkNCgkJCW9ialJTLlNvdXJjZT0iU0VMRUNUICogRlJPTSAoU0VMRUNUIFRPUCAiJlBhZ2VTaXplMiYiICogIEZST00gKFNFTEVDVCBUT1AgIiYoUGFnZVNpemUzKmludFBhZ2UpJiIgKiBGUk9NIFtibG9nX0NvbW1lbnRdICBXSEVSRSAoW2xvZ19JRF09IiZpZCYiIEFORCBbY29tbV9pc0NoZWNrXT0wIEFORCBbY29tbV9QYXJlbnRJRF09MCkgT1JERVIgQlkgW2NvbW1faWRdICImb3JkZXImIikgQXMgW1Rlc3RdIE9SREVSIEJZIFtjb21tX2lkXSAiJklJZihaQ19DT01NRU5UX1JFVkVSU0VfT1JERVJfRVhQT1JULCJBU0MiLCJERVNDIikmIiApIEFzIFt0ZXN0XSBvcmRlciBieSBbY29tbV9wb3N0dGltZV0gIiZvcmRlcg0KCQkJb2JqUlMuT3BlbigpDQoJCQlqPVBhZ2VTaXplMg0KCQkJRGltIGludFBhZ2VBbGwNCgkJCUlmIChpbnRDb21tbnVtcyBNb2QgUGFnZVNpemUzKT0wIFRoZW4gDQoJCQkJaW50UGFnZUFsbD1JbnQoaW50Q29tbW51bXMvUGFnZVNpemUzKQ0KCQkJRWxzZSANCgkJCQlpbnRQYWdlQWxsPUludChpbnRDb21tbnVtcy9QYWdlU2l6ZTMpKzENCgkJCUVuZCBJZg0KDQoNCgkJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCg0KDQoJCQkJc3RyQz1HZXRUZW1wbGF0ZSgiVEVNUExBVEVfQl9BUlRJQ0xFX0NPTU1FTlQiKQ0KCQkJCUZvciBpPTEgVG8gag0KDQoNCgkJCQkJU2V0IG9iakNvbW1lbnQ9TmV3IFRDb21tZW50DQoJCQkJCW9iakNvbW1lbnQuTG9hZEluZm9CeUFycmF5KEFycmF5KG9ialJTKCJjb21tX0lEIiksb2JqUlMoImxvZ19JRCIpLG9ialJTKCJjb21tX0F1dGhvcklEIiksb2JqUlMoImNvbW1fQXV0aG9yIiksb2JqUlMoImNvbW1fQ29udGVudCIpLG9ialJTKCJjb21tX0VtYWlsIiksb2JqUlMoImNvbW1fSG9tZVBhZ2UiKSxvYmpSUygiY29tbV9Qb3N0VGltZSIpLG9ialJTKCJjb21tX0lQIiksb2JqUlMoImNvbW1fQWdlbnQiKSxvYmpSUygiY29tbV9SZXBseSIpLG9ialJTKCJjb21tX0xhc3RSZXBseUlQIiksb2JqUlMoImNvbW1fTGFzdFJlcGx5VGltZSIpLG9ialJTKCJjb21tX1BhcmVudElEIiksb2JqUlMoImNvbW1fSXNDaGVjayIpLG9ialJzKCJjb21tX01ldGEiKSkpDQoNCgkJCQkJQ2FsbCBHZXRVc2Vyc2J5VXNlcklETGlzdChvYmpSUygiY29tbV9BdXRob3JJRCIpKQ0KDQoJCQkJCSdvYmpDb21tZW50LkNvdW50PTANCgkJCQkJb2JqQ29tbWVudC5Db3VudD1JSWYoWkNfQ09NTUVOVF9SRVZFUlNFX09SREVSX0VYUE9SVCxpbnRDb21tbnVtcy0oKGludFBhZ2UtMSkqWkNfQ09NTUVOVFNfRElTUExBWV9DT1VOVCtpKSsxLChpbnRQYWdlLTEpKlpDX0NPTU1FTlRTX0RJU1BMQVlfQ09VTlQraSkNCg0KCQkJCQl0cmVlLmFkZCBvYmpDb21tZW50LklELCBvYmpDb21tZW50Lk1ha2VUZW1wbGF0ZShzdHJDKSdvYmpDb21tZW50DQoNCgkJCQkJSWYgWkNfQ09NTUVOVF9SRVZFUlNFX09SREVSX0VYUE9SVCBUaGVuIA0KCQkJCQkJdD1vYmpSUygiY29tbV9JRCIpDQoJCQkJCUVsc2VJZiBpPTEgVGhlbiANCgkJCQkJCXQ9b2JqUlMoImNvbW1fSUQiKQ0KCQkJCQlFbmQgSWYgDQoNCgkJCQkJU2V0IG9iakNvbW1lbnQ9Tm90aGluZw0KDQoJCQkJCW9ialJTLk1vdmVOZXh0DQoJCQkJCUlmIG9ialJTLmVvZiBUaGVuIEV4aXQgRm9yDQoNCgkJCQlOZXh0DQoNCgkJCQlEaW0gb2JqUlMyDQoNCgkJCQlTZXQgb2JqUlMyPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUICogRlJPTSBbYmxvZ19Db21tZW50XSBXSEVSRSAoW2xvZ19JRF09IiAmIElEICYiIEFORCBbY29tbV9pc0NoZWNrXT0wIEFORCBbY29tbV9QYXJlbnRJRF08PjAgQW5kIFtjb21tX0lEXT4iJnQmIikgIE9SREVSIEJZIFtjb21tX1Bvc3RUaW1lXSBERVNDIikNCgkJCQlJZiAoTm90IG9ialJTMi5ib2YpIEFuZCAoTm90IG9ialJTMi5lb2YpIFRoZW4NCgkJCQkJRG8gV2hpbGUgTm90IG9ialJTMi5lb2YNCg0KCQkJCQkJU2V0IG9iakNvbW1lbnQ9TmV3IFRDb21tZW50DQoJCQkJCQlvYmpDb21tZW50LkxvYWRJbmZvQnlBcnJheShBcnJheShvYmpSUzIoImNvbW1fSUQiKSxvYmpSUzIoImxvZ19JRCIpLG9ialJTMigiY29tbV9BdXRob3JJRCIpLG9ialJTMigiY29tbV9BdXRob3IiKSxvYmpSUzIoImNvbW1fQ29udGVudCIpLG9ialJTMigiY29tbV9FbWFpbCIpLG9ialJTMigiY29tbV9Ib21lUGFnZSIpLG9ialJTMigiY29tbV9Qb3N0VGltZSIpLG9ialJTMigiY29tbV9JUCIpLG9ialJTMigiY29tbV9BZ2VudCIpLG9ialJTMigiY29tbV9SZXBseSIpLG9ialJTMigiY29tbV9MYXN0UmVwbHlJUCIpLG9ialJTMigiY29tbV9MYXN0UmVwbHlUaW1lIiksb2JqUlMyKCJjb21tX1BhcmVudElEIiksb2JqUlMyKCJjb21tX0lzQ2hlY2siKSxvYmpSUzIoImNvbW1fTWV0YSIpKSkNCgkJCQkJCSdDYWxsIEdldFVzZXJzYnlVc2VySURMaXN0KG9ialJTMigiY29tbV9BdXRob3JJRCIpKQ0KCQkJCQkJb2JqQ29tbWVudC5Db3VudD0wDQoJCQkJCQlhbGwuYWRkIG9iakNvbW1lbnQuSUQsIG9iakNvbW1lbnQuUGFyZW50SUQNCgkJCQkJCWFsbHRlbXBsYXRlLmFkZCBvYmpDb21tZW50LklELG9iakNvbW1lbnQuTWFrZVRlbXBsYXRlKHN0ckMpDQoJCQkJCQlTZXQgb2JqQ29tbWVudD1Ob3RoaW5nDQoJCQkJCQlvYmpSUzIuTW92ZU5leHQNCgkJCQkJTG9vcA0KCQkJCUVuZCBJZg0KCQkJCW9ialJTMi5DbG9zZQ0KCQkJCVNldCBvYmpSUzI9Tm90aGluZw0KDQoJCQlFbmQgaWYNCg0KCQkJb2JqUlMuQ2xvc2UoKQ0KCQkJU2V0IG9ialJTPU5vdGhpbmcNCg0KDQoJCQlGb3IgRWFjaCBzIEluIHRyZWUuS2V5cw0KCQkJCXQ9IjwhLS1yZXYiJnMmIi0tPiINCgkJCQlJZiBTZWFyY2hDaGlsZENvbW1lbnRzSW5EaWMocyx0LGFsbCxhbGx0ZW1wbGF0ZSk9VHJ1ZSBUaGVuDQoJCQkJCXRyZWUuSXRlbShzKSA9UmVwbGFjZSh0cmVlLkl0ZW0ocyksIjwhLS1yZXYiJnMmIi0tPiIsdCkNCgkJCQlFbmQgSWYNCgkJCQl0PSIiDQoNCgkJCU5leHQNCg0KCQkJJ+i+k+WHuuagkQ0KCQkJRm9yIEVhY2ggcyBJbiB0cmVlLkl0ZW1zDQoJCQkJJ0lmIFpDX0NPTU1FTlRfUkVWRVJTRV9PUkRFUl9FWFBPUlQ9VHJ1ZSBUaGVuDQoJCQkJCVRlbXBsYXRlX0FydGljbGVfQ29tbWVudD1UZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnQgJiBzDQoJCQkJJ0Vsc2UNCgkJCQknCVRlbXBsYXRlX0FydGljbGVfQ29tbWVudD1zICYgVGVtcGxhdGVfQXJ0aWNsZV9Db21tZW50DQoJCQkJJ0VuZCBJZg0KCQkJTmV4dA0KDQoJCUVuZCBJZg0KDQoJCUNhbGwgRXhwb3J0Q01UYW5kVEJCYXIoaW50UGFnZSxpbnRQYWdlQWxsKQ0KDQoJCVRlbXBsYXRlX0FydGljbGVfQ29tbWVudD0iPGlucyBpZD0iIkFqYXhDb21tZW50QmVnaW4iIiBzdHlsZT0iImRpc3BsYXk6bm9uZTtjbGVhcjpib3RoOyIiPjwvaW5zPiIgJiBUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnQgJiBUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnRfUGFnZWJhciAmIjxpbnMgaWQ9IiJBamF4Q29tbWVudEVuZCIiIHN0eWxlPSIiZGlzcGxheTpub25lO2NsZWFyOmJvdGg7IiI+PC9pbnM+Ig0KDQoJCVRlbXBsYXRlX0FydGljbGVfQ29tbWVudD1SZXBsYWNlKFRlbXBsYXRlX0FydGljbGVfQ29tbWVudCwiPCEtLShjb3VudC0tPjA8IS0tY291bnQpLS0+IiwiPHNwYW4gY2xhc3M9IiJyZXZjb3VudCIiPjwvc3Bhbj4iKQ0KCQlUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnQ9UmVwbGFjZShUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnQsIjwhLS0oY291bnQtLT4iLCIiKQ0KCQlUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnQ9UmVwbGFjZShUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnQsIjwhLS1jb3VudCktLT4iLCIiKQ0KDQoJCVRlbXBsYXRlX0FydGljbGVfQ29tbWVudD1UcmFuc2ZlckhUTUwoVGVtcGxhdGVfQXJ0aWNsZV9Db21tZW50LCJbYW50aS16Y19ibG9nX2hvc3RdIikNCg0KCQlFeHBvcnRfQ01UYW5kVEI9VHJ1ZQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gRXhwb3J0Q01UYW5kVEJCYXIoaW50UGFnZSxpbnRQYWdlQWxsKQ0KDQoJCSdwbHVnaW4gbm9kZQ0KCQliQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRDTVRhbmRUQkJhcl9CZWdpbj1GYWxzZQ0KCQlGb3IgRWFjaCBzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRDTVRhbmRUQkJhcl9CZWdpbiBpbiBBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydENNVGFuZFRCQmFyX0JlZ2luDQoJCQlJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRDTVRhbmRUQkJhcl9CZWdpbikgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0Q01UYW5kVEJCYXJfQmVnaW4pDQoJCQlJZiBiQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRDTVRhbmRUQkJhcl9CZWdpbj1UcnVlIFRoZW4gRXhpdCBGdW5jdGlvbg0KCQlOZXh0DQoNCgkJRGltIHMsbCxyDQoNCgkJSWYgaW50UGFnZUFsbD4xIFRoZW4NCgkJCURpbSBscCxycA0KDQoJCQlscD0iR2V0Q29tbWVudHMoIiZJRCYiLCImKGludFBhZ2UtMSkmIikiDQoJCQlycD0iR2V0Q29tbWVudHMoIiZJRCYiLCImKGludFBhZ2UrMSkmIikiDQoNCgkJCWw9R2V0VGVtcGxhdGUoIlRFTVBMQVRFX0JfQVJUSUNMRV9DT01NRU5UX1BBR0VCQVJfTCIpDQoJCQlyPUdldFRlbXBsYXRlKCJURU1QTEFURV9CX0FSVElDTEVfQ09NTUVOVF9QQUdFQkFSX1IiKQ0KDQoJCQlsPVJlcGxhY2UobCwiPCNhcnRpY2xlL2NvbW1lbnRfcGFnZWJhcl9sL3VybCM+IixscCkNCgkJCXI9UmVwbGFjZShyLCI8I2FydGljbGUvY29tbWVudF9wYWdlYmFyX3IvdXJsIz4iLHJwKQ0KDQoJCQlJZiBpbnRQYWdlPTEgVGhlbg0KCQkJCWw9IiINCgkJCUVuZCBJZg0KCQkJSWYgaW50UGFnZT1pbnRQYWdlQWxsIFRoZW4NCgkJCQlyPSIiDQoJCQlFbmQgSWYNCgkJCQ0KCQkJcz1HZXRUZW1wbGF0ZSgiVEVNUExBVEVfQl9BUlRJQ0xFX0NPTU1FTlRfUEFHRUJBUiIpDQoJCQlzPVJlcGxhY2UocywiPCN0ZW1wbGF0ZTpwYWdlYmFyIz4iLGwmciYiIikNCgkJRW5kIElmDQoNCgkJVGVtcGxhdGVfQXJ0aWNsZV9Db21tZW50X1BhZ2ViYXI9cw0KDQoJCUV4cG9ydENNVGFuZFRCQmFyPVRydWUNCg0KCQkncGx1Z2luIG5vZGUNCgkJYkFjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0Q01UYW5kVEJCYXJfRW5kPUZhbHNlDQoJCUZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydENNVGFuZFRCQmFyX0VuZCBpbiBBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydENNVGFuZFRCQmFyX0VuZA0KCQkJSWYgTm90IElzRW1wdHkoc0FjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0Q01UYW5kVEJCYXJfRW5kKSBUaGVuIENhbGwgRXhlY3V0ZShzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRDTVRhbmRUQkJhcl9FbmQpDQoJCQlJZiBiQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRDTVRhbmRUQkJhcl9FbmQ9VHJ1ZSBUaGVuIEV4aXQgRnVuY3Rpb24NCgkJTmV4dA0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KDQoNCglQcml2YXRlIEZ1bmN0aW9uIFNlYXJjaENoaWxkQ29tbWVudHNJbkRpYyhCeVZhbCBpZCxCeVJlZiB0LEJ5VmFsIGFsbHRyZWUsQnlWYWwgYWxsdGVtcGxhdGUpDQoNCgkJRGltIHMNCg0KCQlGb3IgRWFjaCBzIEluIGFsbHRyZWUuS2V5cw0KDQoJCQlJZiBhbGx0cmVlLkl0ZW0ocyk9aWQgVGhlbg0KCQkJCXQ9UmVwbGFjZSh0LCI8IS0tcmV2IiZpZCYiLS0+IiwiPCEtLXJldiImaWQmIi0tPiIgJiBhbGx0ZW1wbGF0ZS5JdGVtKENMbmcocykgKSApDQoJCQkJQ2FsbCBTZWFyY2hDaGlsZENvbW1lbnRzSW5EaWMocyx0LGFsbHRyZWUsYWxsdGVtcGxhdGUpDQoJCQkJU2VhcmNoQ2hpbGRDb21tZW50c0luRGljPVRydWUNCgkJCUVuZCBJZg0KDQoJCU5leHQNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCg0KDQoJRnVuY3Rpb24gRXhwb3J0X05hdkJhcigpDQoNCgkJSWYgRGlzYWJsZV9FeHBvcnRfTmF2QmFyPVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoNCgkJJ3BsdWdpbiBub2RlDQoJCWJBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9OYXZCYXJfQmVnaW49RmFsc2UNCgkJRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X05hdkJhcl9CZWdpbiBpbiBBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9OYXZCYXJfQmVnaW4NCgkJCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9OYXZCYXJfQmVnaW4pIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9OYXZCYXJfQmVnaW4pDQoJCQlJZiBiQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfTmF2QmFyX0JlZ2luPVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCU5leHQNCg0KDQoJCUlmIFpDX1VTRV9OQVZJR0FURV9BUlRJQ0xFPUZhbHNlIE9yIElzUGFnZT1UcnVlIFRoZW4NCg0KCQkJVGVtcGxhdGVfQXJ0aWNsZV9OYXZiYXJfTD0iIg0KCQkJVGVtcGxhdGVfQXJ0aWNsZV9OYXZiYXJfUj0iIg0KDQoJCQlFeHBvcnRfTmF2QmFyPVRydWUNCgkJCUV4aXQgRnVuY3Rpb24NCg0KCQlFbmQgSWYNCg0KCQlEaW0gcyx0DQoNCgkJRGltIHN0ck5hbWUNCgkJRGltIHN0clVybA0KDQoJCURpbSBvYmpOYXZBcnRpY2xlDQoNCgkJRGltIG9ialJTDQoNCgkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFRPUCAxIFtsb2dfSURdLFtsb2dfVGFnXSxbbG9nX0NhdGVJRF0sW2xvZ19UaXRsZV0sW2xvZ19JbnRyb10sW2xvZ19Db250ZW50XSxbbG9nX0xldmVsXSxbbG9nX0F1dGhvcklEXSxbbG9nX1Bvc3RUaW1lXSxbbG9nX0NvbW1OdW1zXSxbbG9nX1ZpZXdOdW1zXSxbbG9nX1RyYWNrQmFja051bXNdLFtsb2dfVXJsXSxbbG9nX0lzdG9wXSxbbG9nX1RlbXBsYXRlXSxbbG9nX0Z1bGxVcmxdLFtsb2dfVHlwZV0sW2xvZ19NZXRhXSBGUk9NIFtibG9nX0FydGljbGVdIFdIRVJFIChbbG9nX1R5cGVdPTApIEFuZCAoW2xvZ19MZXZlbF0+MikgQU5EIChbbG9nX1Bvc3RUaW1lXTwiICYgWkNfU1FMX1BPVU5EX0tFWSAmIFBvc3RUaW1lICYgWkNfU1FMX1BPVU5EX0tFWSAmIikgT1JERVIgQlkgW2xvZ19Qb3N0VGltZV0gREVTQyIpDQoJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCg0KCQkJU2V0IG9iak5hdkFydGljbGU9TmV3IFRBcnRpY2xlDQoJCQlJZiBvYmpOYXZBcnRpY2xlLkxvYWRJbmZvQnlBcnJheShBcnJheShvYmpSUygwKSxvYmpSUygxKSxvYmpSUygyKSxvYmpSUygzKSxvYmpSUyg0KSxvYmpSUyg1KSxvYmpSUyg2KSxvYmpSUyg3KSxvYmpSUyg4KSxvYmpSUyg5KSxvYmpSUygxMCksb2JqUlMoMTEpLG9ialJTKDEyKSxvYmpSUygxMyksb2JqUlMoMTQpLG9ialJTKDE1KSxvYmpSUygxNiksb2JqUlMoMTcpKSkgVGhlbg0KCQkJCXN0ck5hbWU9b2JqTmF2QXJ0aWNsZS5UaXRsZQ0KCQkJCXN0clVybD1vYmpOYXZBcnRpY2xlLkZ1bGxVcmwNCgkJCUVuZCBJZg0KCQkJU2V0IG9iak5hdkFydGljbGU9Tm90aGluZw0KDQoJCQlzPUdldFRlbXBsYXRlKCJURU1QTEFURV9CX0FSVElDTEVfTkFWQkFSX0wiKQ0KDQoJCQkncz1SZXBsYWNlKHMsIjwjYXJ0aWNsZS9uYXZfbC91cmwjPiIsIjwjWkNfQkxPR19IT1NUIz52aWV3LmFzcD9uYXZwPSImSUQpDQoJCQkncz1SZXBsYWNlKHMsIjwjYXJ0aWNsZS9uYXZfbC9uYW1lIz4iLFpDX01TRzE0NikNCgkJCXM9UmVwbGFjZShzLCI8I2FydGljbGUvbmF2X2wvdXJsIz4iLHN0clVybCkNCgkJCXM9UmVwbGFjZShzLCI8I2FydGljbGUvbmF2X2wvbmFtZSM+IixzdHJOYW1lKQ0KDQoJCQlUZW1wbGF0ZV9BcnRpY2xlX05hdmJhcl9MPXMNCg0KCQlFbmQgSWYNCgkJU2V0IG9ialJTPU5vdGhpbmcNCg0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgVE9QIDEgW2xvZ19JRF0sW2xvZ19UYWddLFtsb2dfQ2F0ZUlEXSxbbG9nX1RpdGxlXSxbbG9nX0ludHJvXSxbbG9nX0NvbnRlbnRdLFtsb2dfTGV2ZWxdLFtsb2dfQXV0aG9ySURdLFtsb2dfUG9zdFRpbWVdLFtsb2dfQ29tbU51bXNdLFtsb2dfVmlld051bXNdLFtsb2dfVHJhY2tCYWNrTnVtc10sW2xvZ19VcmxdLFtsb2dfSXN0b3BdLFtsb2dfVGVtcGxhdGVdLFtsb2dfRnVsbFVybF0sW2xvZ19UeXBlXSxbbG9nX01ldGFdIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgKFtsb2dfVHlwZV09MCkgQW5kIChbbG9nX0xldmVsXT4yKSBBTkQgKFtsb2dfUG9zdFRpbWVdPiIgJiBaQ19TUUxfUE9VTkRfS0VZICYgUG9zdFRpbWUgJiBaQ19TUUxfUE9VTkRfS0VZICYiKSBPUkRFUiBCWSBbbG9nX1Bvc3RUaW1lXSBBU0MiKQ0KDQoJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCg0KCQkJU2V0IG9iak5hdkFydGljbGU9TmV3IFRBcnRpY2xlDQoJCQlJZiBvYmpOYXZBcnRpY2xlLkxvYWRJbmZvQnlBcnJheShBcnJheShvYmpSUygwKSxvYmpSUygxKSxvYmpSUygyKSxvYmpSUygzKSxvYmpSUyg0KSxvYmpSUyg1KSxvYmpSUyg2KSxvYmpSUyg3KSxvYmpSUyg4KSxvYmpSUyg5KSxvYmpSUygxMCksb2JqUlMoMTEpLG9ialJTKDEyKSxvYmpSUygxMyksb2JqUlMoMTQpLG9ialJTKDE1KSxvYmpSUygxNiksb2JqUlMoMTcpKSkgVGhlbg0KCQkJCXN0ck5hbWU9b2JqTmF2QXJ0aWNsZS5UaXRsZQ0KCQkJCXN0clVybD1vYmpOYXZBcnRpY2xlLkZ1bGxVcmwNCgkJCUVuZCBJZg0KCQkJU2V0IG9iak5hdkFydGljbGU9Tm90aGluZw0KDQoJCQl0PUdldFRlbXBsYXRlKCJURU1QTEFURV9CX0FSVElDTEVfTkFWQkFSX1IiKQ0KDQoJCQkndD1SZXBsYWNlKHQsIjwjYXJ0aWNsZS9uYXZfci91cmwjPiIsIjwjWkNfQkxPR19IT1NUIz52aWV3LmFzcD9uYXZuPSImSUQpDQoJCQkndD1SZXBsYWNlKHQsIjwjYXJ0aWNsZS9uYXZfci9uYW1lIz4iLFpDX01TRzE0OCkNCgkJCXQ9UmVwbGFjZSh0LCI8I2FydGljbGUvbmF2X3IvdXJsIz4iLHN0clVybCkNCgkJCXQ9UmVwbGFjZSh0LCI8I2FydGljbGUvbmF2X3IvbmFtZSM+IixzdHJOYW1lKQ0KDQoJCQlUZW1wbGF0ZV9BcnRpY2xlX05hdmJhcl9SPXQNCg0KCQlFbmQgSWYNCgkJU2V0IG9ialJTPU5vdGhpbmcNCg0KCQlFeHBvcnRfTmF2QmFyPVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglGdW5jdGlvbiBFeHBvcnRfQ29tbWVudFBvc3QoKQ0KDQoJCUlmIERpc2FibGVfRXhwb3J0X0NvbW1lbnRQb3N0PVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoNCgkJJ3BsdWdpbiBub2RlDQoJCWJBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9Db21tZW50UG9zdF9CZWdpbj1GYWxzZQ0KCQlGb3IgRWFjaCBzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfQ29tbWVudFBvc3RfQmVnaW4gaW4gQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfQ29tbWVudFBvc3RfQmVnaW4NCgkJCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9Db21tZW50UG9zdF9CZWdpbikgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X0NvbW1lbnRQb3N0X0JlZ2luKQ0KCQkJSWYgYkFjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X0NvbW1lbnRQb3N0X0JlZ2luPVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCU5leHQNCg0KCQlJZiBaQ19DT01NRU5UX1RVUk5PRkY9VHJ1ZSBUaGVuIA0KCQkJVGVtcGxhdGVfQXJ0aWNsZV9Db21tZW50cG9zdD0iIg0KCQkJRXhpdCBGdW5jdGlvbg0KCQlFbmQgSWYNCg0KCQlJZiBMZXZlbDw0IFRoZW4gRXhpdCBGdW5jdGlvbg0KDQoJCVRlbXBsYXRlX0FydGljbGVfQ29tbWVudHBvc3Q9R2V0VGVtcGxhdGUoIlRFTVBMQVRFX0JfQVJUSUNMRV9DT01NRU5UUE9TVCIpDQoNCgkJSWYgWkNfQ09NTUVOVF9WRVJJRllfRU5BQkxFPVRydWUgVGhlbg0KCQkJVGVtcGxhdGVfQXJ0aWNsZV9Db21tZW50cG9zdF9WZXJpZnk9R2V0VGVtcGxhdGUoIlRFTVBMQVRFX0JfQVJUSUNMRV9DT01NRU5UUE9TVC1WRVJJRlkiKQ0KCQlFbmQgSWYNCg0KCQlUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnRwb3N0PVJlcGxhY2UoVGVtcGxhdGVfQXJ0aWNsZV9Db21tZW50cG9zdCwiPCN0ZW1wbGF0ZTphcnRpY2xlX2NvbW1lbnRwb3N0LXZlcmlmeSM+IixUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnRwb3N0X1ZlcmlmeSkNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCgkn55u45YWz5paH56ug55qE55Sf5oiQDQoJRnVuY3Rpb24gRXhwb3J0X011dHVhbGl0eSgpDQoNCgkJSWYgRGlzYWJsZV9FeHBvcnRfTXV0dWFsaXR5PVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoNCgkJJ3BsdWdpbiBub2RlDQoJCWJBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9NdXR1YWxpdHlfQmVnaW49RmFsc2UNCgkJRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X011dHVhbGl0eV9CZWdpbiBpbiBBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9NdXR1YWxpdHlfQmVnaW4NCgkJCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9NdXR1YWxpdHlfQmVnaW4pIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9NdXR1YWxpdHlfQmVnaW4pDQoJCQlJZiBiQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfTXV0dWFsaXR5X0JlZ2luPVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCU5leHQNCg0KCQlJZiBaQ19NVVRVQUxJVFlfQ09VTlQ9MCBUaGVuIA0KCQkJRXhwb3J0X011dHVhbGl0eT1UcnVlDQoJCQlFeGl0IEZ1bmN0aW9uDQoJCUVuZCBJZg0KDQoJCUlmIFRhZzw+IiIgVGhlbg0KDQoJCQlEaW0gc3RyQ0NfQ291bnQsc3RyQ0NfSUQsc3RyQ0NfTmFtZSxzdHJDQ19Vcmwsc3RyQ0NfUG9zdFRpbWUsc3RyQ0NfVGl0bGUNCgkJCURpbSBzdHJDQw0KCQkJRGltIGksaixzDQoJCQlEaW0gb2JqUlMNCgkJCURpbSBzdHJTUUwNCg0KCQkJU2V0IG9ialJTPVNlcnZlci5DcmVhdGVPYmplY3QoIkFET0RCLlJlY29yZHNldCIpDQoNCgkJCXN0clNRTD0iU0VMRUNUIFRPUCAiJiBaQ19NVVRVQUxJVFlfQ09VTlQgJiIgW2xvZ19JRF0sW2xvZ19UYWddLFtsb2dfQ2F0ZUlEXSxbbG9nX1RpdGxlXSxbbG9nX0ludHJvXSxbbG9nX0NvbnRlbnRdLFtsb2dfTGV2ZWxdLFtsb2dfQXV0aG9ySURdLFtsb2dfUG9zdFRpbWVdLFtsb2dfQ29tbU51bXNdLFtsb2dfVmlld051bXNdLFtsb2dfVHJhY2tCYWNrTnVtc10sW2xvZ19VcmxdLFtsb2dfSXN0b3BdLFtsb2dfVGVtcGxhdGVdLFtsb2dfRnVsbFVybF0sW2xvZ19UeXBlXSxbbG9nX01ldGFdIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgKFtsb2dfVHlwZV09MCkgQW5kIChbbG9nX0xldmVsXT4yKSBBTkQgW2xvZ19JRF08PiImIElEDQoJCQlzdHJTUUwgPSBzdHJTUUwgJiAiIEFORCAoIg0KDQoJCQlEaW0gYXJ5VEFHcw0KCQkJcz1SZXBsYWNlKFRhZywifSIsIiIpDQoJCQlhcnlUQUdzPVNwbGl0KHMsInsiKQ0KDQoJCQlGb3IgaiA9IExCb3VuZChhcnlUQUdzKSBUbyBVQm91bmQoYXJ5VEFHcykNCgkJCQlJZiBhcnlUQUdzKGopPD4iIiBUaGVuDQoJCQkJCXN0clNRTCA9IHN0clNRTCAmICIoW2xvZ19UYWddIExpa2UgJyV7IiZGaWx0ZXJTUUwoYXJ5VEFHcyhqKSkmIn0lJykiDQoJCQkJCUlmIGo9VUJvdW5kKGFyeVRBR3MpIFRoZW4gRXhpdCBGb3INCgkJCQkJSWYgYXJ5VEFHcyhqKTw+IiIgVGhlbiBzdHJTUUwgPSBzdHJTUUwgJiAiIE9SICINCgkJCQlFbmQgSWYNCgkJCU5leHQNCg0KCQkJc3RyU1FMID0gc3RyU1FMICYgIikiDQoJCQlzdHJTUUwgPSBzdHJTUUwgKyAiIE9SREVSIEJZIFtsb2dfUG9zdFRpbWVdIERFU0MgIg0KDQoJCQlTZXQgb2JqUlM9U2VydmVyLkNyZWF0ZU9iamVjdCgiQURPREIuUmVjb3Jkc2V0IikNCgkJCW9ialJTLkN1cnNvclR5cGUgPSBhZE9wZW5LZXlzZXQNCgkJCW9ialJTLkxvY2tUeXBlID0gYWRMb2NrUmVhZE9ubHkNCgkJCW9ialJTLkFjdGl2ZUNvbm5lY3Rpb249b2JqQ29ubg0KCQkJb2JqUlMuU291cmNlPXN0clNRTA0KCQkJb2JqUlMuT3BlbigpDQoJCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoNCgkJCQlEaW0gb2JqQXJ0aWNsZQ0KCQkJCUZvciBpPTEgVG8gWkNfTVVUVUFMSVRZX0NPVU5UICfnm7jlhbPmlofnq6DmlbDnm67vvIzlj6/oh6rooYzorr7lrpoNCg0KCQkJCQlIYXNNdXR1YWxpdHk9VHJ1ZQ0KDQoJCQkJCVNldCBvYmpBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KDQoJCQkJCUlmIG9iakFydGljbGUuTG9hZEluZm9CeUFycmF5KEFycmF5KG9ialJTKDApLG9ialJTKDEpLG9ialJTKDIpLG9ialJTKDMpLG9ialJTKDQpLG9ialJTKDUpLG9ialJTKDYpLG9ialJTKDcpLG9ialJTKDgpLG9ialJTKDkpLG9ialJTKDEwKSxvYmpSUygxMSksb2JqUlMoMTIpLG9ialJTKDEzKSxvYmpSUygxNCksb2JqUlMoMTUpLG9ialJTKDE2KSxvYmpSUygxNykpKSAgVGhlbg0KDQoJCQkJCQlzdHJDQ19Db3VudD1zdHJDQ19Db3VudCsxDQoJCQkJCQlzdHJDQ19JRD1vYmpBcnRpY2xlLklEDQoJCQkJCQlzdHJDQ19Vcmw9b2JqQXJ0aWNsZS5VcmwNCgkJCQkJCXN0ckNDX1Bvc3RUaW1lPW9iakFydGljbGUuUG9zdFRpbWUNCgkJCQkJCXN0ckNDX1RpdGxlPW9iakFydGljbGUuVGl0bGUNCg0KCQkJCQkJc3RyQ0M9R2V0VGVtcGxhdGUoIlRFTVBMQVRFX0JfQVJUSUNMRV9NVVRVQUxJVFkiKQ0KDQoJCQkJCQlzdHJDQz1SZXBsYWNlKHN0ckNDLCI8I2FydGljbGUvbXV0dWFsaXR5L2lkIz4iLHN0ckNDX0lEKQ0KCQkJCQkJc3RyQ0M9UmVwbGFjZShzdHJDQywiPCNhcnRpY2xlL211dHVhbGl0eS91cmwjPiIsc3RyQ0NfVXJsKQ0KCQkJCQkJc3RyQ0M9UmVwbGFjZShzdHJDQywiPCNhcnRpY2xlL211dHVhbGl0eS9wb3N0dGltZSM+IixzdHJDQ19Qb3N0VGltZSkNCgkJCQkJCXN0ckNDPVJlcGxhY2Uoc3RyQ0MsIjwjYXJ0aWNsZS9tdXR1YWxpdHkvbmFtZSM+IixzdHJDQ19UaXRsZSkNCg0KCQkJCQkJVGVtcGxhdGVfQXJ0aWNsZV9NdXR1YWxpdHk9VGVtcGxhdGVfQXJ0aWNsZV9NdXR1YWxpdHkgJiBzdHJDQw0KDQoJCQkJCUVuZCBJZg0KDQoJCQkJCW9ialJTLk1vdmVOZXh0DQoJCQkJCUlmIG9ialJTLmVvZiBUaGVuIEV4aXQgRm9yDQoJCQkJCVNldCBvYmpBcnRpY2xlPU5vdGhpbmcNCgkJCQlOZXh0DQoNCgkJCUVuZCBpZg0KDQoJCQlvYmpSUy5DbG9zZSgpDQoJCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJCUVuZCBJZg0KDQoJCUV4cG9ydF9NdXR1YWxpdHk9VHJ1ZQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBFeHBvcnQoaW50VHlwZSkNCg0KCQkncGx1Z2luIG5vZGUNCgkJYkFjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X0JlZ2luPUZhbHNlDQoJCUZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9CZWdpbiBpbiBBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9CZWdpbg0KCQkJSWYgTm90IElzRW1wdHkoc0FjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X0JlZ2luKSBUaGVuIENhbGwgRXhlY3V0ZShzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfQmVnaW4pDQoJCQlJZiBiQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfQmVnaW49VHJ1ZSBUaGVuIEV4aXQgRnVuY3Rpb24NCgkJTmV4dA0KDQoJCUlmIElzRW1wdHkoaHRtbCk9VHJ1ZSBUaGVuIGh0bWw9VGVtcGxhdGUNCg0KCQlDYWxsIEdldFVzZXJzYnlVc2VySURMaXN0KEF1dGhvcklEKQ0KDQoJCUlmIChaQ19ESVNQTEFZX01PREVfSU5UUk89aW50VHlwZSkgT3IgKFpDX0RJU1BMQVlfTU9ERV9PTlRPUD1pbnRUeXBlKSBPciAoWkNfRElTUExBWV9NT0RFX1NFQVJDSD1pbnRUeXBlKSBPciAoWkNfRElTUExBWV9NT0RFX1NZU1RFTVBBR0U9aW50VHlwZSkgT3IgKFpDX0RJU1BMQVlfTU9ERV9DT01NRU5UUz1pbnRUeXBlKSBUaGVuDQoJCQlEaXNhYmxlX0V4cG9ydF9UYWc9RmFsc2UNCgkJCURpc2FibGVfRXhwb3J0X0NNVGFuZFRCPVRydWUNCgkJCURpc2FibGVfRXhwb3J0X0NvbW1lbnRQb3N0PVRydWUNCgkJCURpc2FibGVfRXhwb3J0X011dHVhbGl0eT1UcnVlDQoJCQlEaXNhYmxlX0V4cG9ydF9OYXZCYXI9VHJ1ZQ0KCQkJSWYgWkNfRElTUExBWV9NT0RFX1NZU1RFTVBBR0U9aW50VHlwZSBUaGVuDQoJCQkJRGlzYWJsZV9FeHBvcnRfVGFnPVRydWUNCgkJCUVuZCBJZg0KCQkJSWYgWkNfRElTUExBWV9NT0RFX09OVE9QPWludFR5cGUgVGhlbg0KCQkJCSdEaXNhYmxlX0V4cG9ydF9UYWc9VHJ1ZQ0KCQkJCXN1Ymh0bWxfVGVtcGxhdGVOYW1lPSIiDQoJCQkJc3ViaHRtbD1HZXRUZW1wbGF0ZSgiVEVNUExBVEVfQl9BUlRJQ0xFLUlTVE9QIikNCgkJCUVuZCBJZg0KCQkJSWYgWkNfRElTUExBWV9NT0RFX1NFQVJDSD1pbnRUeXBlIFRoZW4NCgkJCQlEaXNhYmxlX0V4cG9ydF9UYWc9VHJ1ZQ0KCQkJCXN1Ymh0bWxfVGVtcGxhdGVOYW1lPSIiDQoJCQkJc3ViaHRtbD1HZXRUZW1wbGF0ZSgiVEVNUExBVEVfQl9BUlRJQ0xFLVNFQVJDSC1DT05URU5UIikNCgkJCUVuZCBJZg0KCQkJSWYgWkNfRElTUExBWV9NT0RFX0NPTU1FTlRTPWludFR5cGUgVGhlbg0KCQkJCURpc2FibGVfRXhwb3J0X1RhZz1UcnVlDQoJCQkJRGlzYWJsZV9FeHBvcnRfQ01UYW5kVEI9RmFsc2UNCgkJCQlzdWJodG1sX1RlbXBsYXRlTmFtZT0iIg0KCQkJCXN1Ymh0bWw9IjwjdGVtcGxhdGU6YXJ0aWNsZV9jb21tZW50Iz4iDQoJCQlFbmQgSWYNCgkJRW5kIElmDQoNCgkJSWYgWkNfRElTUExBWV9NT0RFX0FMTD1pbnRUeXBlIEFuZCBJc1BhZ2U9VHJ1ZSBUaGVuDQoJCQlEaXNhYmxlX0V4cG9ydF9DTVRhbmRUQj1GYWxzZQ0KCQkJRGlzYWJsZV9FeHBvcnRfQ29tbWVudFBvc3Q9RmFsc2UNCgkJCURpc2FibGVfRXhwb3J0X1RhZz1UcnVlDQoJCQlEaXNhYmxlX0V4cG9ydF9NdXR1YWxpdHk9VHJ1ZQ0KCQkJRGlzYWJsZV9FeHBvcnRfTmF2QmFyPVRydWUNCgkJRW5kIElmDQoNCgkJQ2FsbCBFeHBvcnRfVGFnDQoJCUNhbGwgRXhwb3J0X0NNVGFuZFRCKENvbW1lbnRzUGFnZSkNCgkJQ2FsbCBFeHBvcnRfQ29tbWVudFBvc3QNCgkJQ2FsbCBFeHBvcnRfTXV0dWFsaXR5DQoJCUNhbGwgRXhwb3J0X05hdkJhcg0KDQoJCURpbSBSRSAsTWF0Y2gsTWF0Y2hlcw0KCQlTZXQgUkUgPSBOZXcgUmVnRXhwIA0KCQkJUkUuUGF0dGVybiA9ICJcPFwjdGVtcGxhdGVcOihhcnRpY2xlXC0oW2EtejAtOV0qKShbXC1hLXowLTldKikpXCNcPiINCgkJCVJFLklnbm9yZUNhc2UgPSBUcnVlIA0KCQkJUkUuR2xvYmFsID0gVHJ1ZSANCgkJCVNldCBNYXRjaGVzID0gUkUuRXhlY3V0ZShodG1sKSANCgkJCUZvciBFYWNoIE1hdGNoIGluIE1hdGNoZXMNCgkJCQlJZiBJc0VtcHR5KHN1Ymh0bWxfVGVtcGxhdGVOYW1lKSBUaGVuIHN1Ymh0bWxfVGVtcGxhdGVOYW1lPSJ0ZW1wbGF0ZToiJk1hdGNoLlN1Yk1hdGNoZXMoMCkmIiINCgkJCQlJZiBJc0VtcHR5KHN1Ymh0bWwpIFRoZW4gc3ViaHRtbD1HZXRUZW1wbGF0ZSgiVEVNUExBVEVfQl8iJiBVQ2FzZShNYXRjaC5TdWJNYXRjaGVzKDApKSkNCgkJCQlFeGl0IEZvcg0KCQkJTmV4dA0KCQkJU2V0IE1hdGNoZXMgPSBOb3RoaW5nDQoJCVNldCBSRSA9IE5vdGhpbmcNCg0KCQlJZiBzdWJodG1sPSIiIFRoZW4NCgkJCXN1Ymh0bWw9aHRtbA0KCQkJc3ViaHRtbF9UZW1wbGF0ZU5hbWU9InRlbXBsYXRlOmFydGljbGVfc2luZ2xlIg0KCQkJaHRtbD0iPCN0ZW1wbGF0ZTphcnRpY2xlX3NpbmdsZSM+Ig0KCQlFbmQgSWYNCg0KDQoJCSdwbHVnaW4gbm9kZQ0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X1RlbXBsYXRlKGh0bWwsc3ViaHRtbCkNCg0KCQkncGx1Z2luIG5vZGUNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9UZW1wbGF0ZV9TdWIoVGVtcGxhdGVfQXJ0aWNsZV9Db21tZW50LFRlbXBsYXRlX0FydGljbGVfVHJhY2tiYWNrLFRlbXBsYXRlX0FydGljbGVfVGFnLFRlbXBsYXRlX0FydGljbGVfQ29tbWVudHBvc3QsVGVtcGxhdGVfQXJ0aWNsZV9OYXZiYXJfTCxUZW1wbGF0ZV9BcnRpY2xlX05hdmJhcl9SLFRlbXBsYXRlX0FydGljbGVfTXV0dWFsaXR5KQ0KDQoJCXN1Ymh0bWw9UmVwbGFjZShzdWJodG1sLCI8I3RlbXBsYXRlOmFydGljbGVfY29tbWVudCM+IixUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnQpDQoJCXN1Ymh0bWw9UmVwbGFjZShzdWJodG1sLCI8I3RlbXBsYXRlOmFydGljbGVfdHJhY2tiYWNrIz4iLFRlbXBsYXRlX0FydGljbGVfVHJhY2tiYWNrKQ0KCQlzdWJodG1sPVJlcGxhY2Uoc3ViaHRtbCwiPCN0ZW1wbGF0ZTphcnRpY2xlX2NvbW1lbnRfcGFnZWJhciM+IiwiIikNCgkJc3ViaHRtbD1SZXBsYWNlKHN1Ymh0bWwsIjwjdGVtcGxhdGU6YXJ0aWNsZV9jb21tZW50cG9zdCM+IixUZW1wbGF0ZV9BcnRpY2xlX0NvbW1lbnRwb3N0KQ0KCQlzdWJodG1sPVJlcGxhY2Uoc3ViaHRtbCwiPCN0ZW1wbGF0ZTphcnRpY2xlX3RhZyM+IixUZW1wbGF0ZV9BcnRpY2xlX1RhZykNCgkJc3ViaHRtbD1SZXBsYWNlKHN1Ymh0bWwsIjwjdGVtcGxhdGU6YXJ0aWNsZV9uYXZiYXJfbCM+IixUZW1wbGF0ZV9BcnRpY2xlX05hdmJhcl9MKQ0KCQlzdWJodG1sPVJlcGxhY2Uoc3ViaHRtbCwiPCN0ZW1wbGF0ZTphcnRpY2xlX25hdmJhcl9yIz4iLFRlbXBsYXRlX0FydGljbGVfTmF2YmFyX1IpDQoJCXN1Ymh0bWw9UmVwbGFjZShzdWJodG1sLCI8I3RlbXBsYXRlOmFydGljbGVfbXV0dWFsaXR5Iz4iLFRlbXBsYXRlX0FydGljbGVfTXV0dWFsaXR5KQ0KDQoJCURpbSBkYQ0KCQlEaW0gcyx0DQoJCVNldCBkYT1DcmVhdGVPYmplY3QoIlNjcmlwdGluZy5EaWN0aW9uYXJ5IikNCg0KCQlTZXQgUkUgPSBOZXcgUmVnRXhwIA0KCQkJUkUuUGF0dGVybiA9ICI8I2FydGljbGUvKChjYXRlZ29yeS9tZXRhfGF1dGhvci9tZXRhfG1ldGEpLyhbYS16MC05X117MSx9KSkjPiINCgkJCVJFLklnbm9yZUNhc2UgPSBUcnVlIA0KCQkJUkUuR2xvYmFsID0gVHJ1ZSANCgkJCVNldCBNYXRjaGVzID0gUkUuRXhlY3V0ZShodG1sJnN1Ymh0bWwpIA0KCQkJRm9yIEVhY2ggTWF0Y2ggaW4gTWF0Y2hlcw0KCQkJCXM9TWF0Y2guU3ViTWF0Y2hlcygwKQ0KCQkJCUlmIGRhLkV4aXN0cyhzKT1GYWxzZSBUaGVuIGRhLmFkZCBzLHMNCgkJCU5leHQNCgkJCVNldCBNYXRjaGVzID0gTm90aGluZw0KCQlTZXQgUkUgPSBOb3RoaW5nDQoNCgkJcz1kYS5JdGVtcw0KCQlGb3IgdCA9IDAgVG8gZGEuQ291bnQgLTENCgkJCUlmIEluU3RyKHModCksImNhdGVnb3J5L21ldGEvIik+MCBUaGVuDQoJCQkJcyh0KT1SZXBsYWNlKHModCksImNhdGVnb3J5L21ldGEvIiwiIikNCgkJCQlzdWJodG1sPVJlcGxhY2Uoc3ViaHRtbCwiPCNhcnRpY2xlL2NhdGVnb3J5L21ldGEvIiAmIHModCkgJiAiIz4iLENhdGVnb3J5cyhDYXRlSUQpLk1ldGEuR2V0VmFsdWUocyh0KSkgKQ0KCQkJCWh0bWwgPSBSZXBsYWNlKGh0bWwsIjwjYXJ0aWNsZS9jYXRlZ29yeS9tZXRhLyIgJiBzKHQpICYgIiM+IixDYXRlZ29yeXMoQ2F0ZUlEKS5NZXRhLkdldFZhbHVlKHModCkpICkNCgkJCUVsc2VJZiBJblN0cihzKHQpLCJhdXRob3IvbWV0YS8iKT4wIFRoZW4gDQoJCQkJcyh0KT1SZXBsYWNlKHModCksImF1dGhvci9tZXRhLyIsIiIpDQoJCQkJc3ViaHRtbD1SZXBsYWNlKHN1Ymh0bWwsIjwjYXJ0aWNsZS9hdXRob3IvbWV0YS8iICYgcyh0KSAmICIjPiIsVXNlcnMoQXV0aG9ySUQpLk1ldGEuR2V0VmFsdWUocyh0KSkgKQ0KCQkJCWh0bWwgPSBSZXBsYWNlKGh0bWwsIjwjYXJ0aWNsZS9hdXRob3IvbWV0YS8iICYgcyh0KSAmICIjPiIsVXNlcnMoQXV0aG9ySUQpLk1ldGEuR2V0VmFsdWUocyh0KSkgKQ0KCQkJRWxzZQ0KCQkJCXModCk9UmVwbGFjZShzKHQpLCJtZXRhLyIsIiIpDQoJCQkJc3ViaHRtbD1SZXBsYWNlKHN1Ymh0bWwsIjwjYXJ0aWNsZS9tZXRhLyIgJiBzKHQpICYgIiM+IixNZXRhLkdldFZhbHVlKHModCkpICkNCgkJCQlodG1sID0gUmVwbGFjZShodG1sLCI8I2FydGljbGUvbWV0YS8iICYgcyh0KSAmICIjPiIsTWV0YS5HZXRWYWx1ZShzKHQpKSApDQoJCQlFbmQgSWYNCgkJTmV4dA0KDQoJCUlmIFpDX01VTFRJX0RPTUFJTl9TVVBQT1JUPVRydWUgQW5kIFpDX1BFUk1BTkVOVF9ET01BSU5fRU5BQkxFPUZhbHNlIFRoZW4NCgkJCUNvbnRlbnQ9UmVwbGFjZShDb250ZW50LCJocmVmPSIiIiAmIEJsb2dIb3N0LCJocmVmPSIiPCNaQ19CTE9HX0hPU1QjPiIpDQoJCQlDb250ZW50PVJlcGxhY2UoQ29udGVudCwic3JjPSIiIiAmIEJsb2dIb3N0LCJzcmM9IiI8I1pDX0JMT0dfSE9TVCM+IikNCgkJCUludHJvPVJlcGxhY2UoSW50cm8sImhyZWY9IiIiICYgQmxvZ0hvc3QsImhyZWY9IiI8I1pDX0JMT0dfSE9TVCM+IikNCgkJCUludHJvPVJlcGxhY2UoSW50cm8sInNyYz0iIiIgJiBCbG9nSG9zdCwic3JjPSIiPCNaQ19CTE9HX0hPU1QjPiIpDQoJCUVuZCBJZg0KDQoJCURpbSBhcnlUZW1wbGF0ZVRhZ3NOYW1lKCkNCgkJRGltIGFyeVRlbXBsYXRlVGFnc1ZhbHVlKCkNCgkJRGltIGksag0KCQlSZURpbSBhcnlUZW1wbGF0ZVRhZ3NOYW1lKDU4KQ0KCQlSZURpbSBhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSg1OCkNCg0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDEpPSJhcnRpY2xlL2lkIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgxKT1JRA0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDIpPSJhcnRpY2xlL2xldmVsIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyKT1MZXZlbA0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDMpPSJhcnRpY2xlL3RpdGxlIg0KCQlJZiBpbnRUeXBlPVpDX0RJU1BMQVlfTU9ERV9TRUFSQ0ggVGhlbg0KCQkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMyk9U2VhcmNoKFRpdGxlLFNlYXJjaFRleHQpDQoJCUVsc2UNCgkJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDMpPUh0bWxUaXRsZQ0KCQlFbmQgSWYNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSg0KT0iYXJ0aWNsZS9pbnRybyINCgkJSWYgaW50VHlwZT1aQ19ESVNQTEFZX01PREVfU0VBUkNIIFRoZW4NCgkJCSdhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSg0KT1TZWFyY2goVHJhbnNmZXJIVE1MKEludHJvICYgQ29udGVudCwiW2h0bWwtZm9ybWF0XSIpLFJlcXVlc3QuUXVlcnlTdHJpbmcoInEiKSkNCgkJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDQpPVRyaW0oU2VhcmNoKFRyYW5zZmVySFRNTChJbnRybyAmIENvbnRlbnQsIltub2h0bWxdIiksU2VhcmNoVGV4dCkpDQoJCUVsc2UNCgkJCUlmIExldmVsPTIgVGhlbg0KCQkJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDQpPSI8cD4iJlpDX01TRzA0MyYiPC9wPiINCgkJCUVsc2UNCgkJCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSg0KT1IdG1sSW50cm8NCgkJCUVuZCBJZg0KCQlFbmQgSWYNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSg1KT0iYXJ0aWNsZS9jb250ZW50Ig0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSg1KT1IdG1sQ29udGVudA0KCQlJZiBpbnRUeXBlPVpDX0RJU1BMQVlfTU9ERV9TRUFSQ0ggVGhlbg0KCQkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoNSk9YXJ5VGVtcGxhdGVUYWdzVmFsdWUoNCkNCgkJRW5kIElmDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoNik9ImFydGljbGUvcG9zdHRpbWUiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDYpPVBvc3RUaW1lDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoNyk9ImFydGljbGUvY29tbW51bXMiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDcpPUNvbW1udW1zDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoOCk9ImFydGljbGUvdmlld251bXMiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDgpPVZpZXdudW1zDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoOSk9ImFydGljbGUvdHJhY2tiYWNrbnVtcyINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoOSk9VHJhY2tiYWNrbnVtcw0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDEwKT0iYXJ0aWNsZS90cmFja2JhY2tfdXJsIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgxMCk9VHJhY2tCYWNrDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoMTEpPSJhcnRpY2xlL3VybCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMTEpPVRyYW5zZmVySFRNTChIdG1sVXJsLCJbYW50aS16Y19ibG9nX2hvc3RdIikNCg0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDEyKT0iYXJ0aWNsZS9jYXRlZ29yeS9pZCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMTIpPUNhdGVnb3J5cyhDYXRlSUQpLklEDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoMTMpPSJhcnRpY2xlL2NhdGVnb3J5L25hbWUiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDEzKT1DYXRlZ29yeXMoQ2F0ZUlEKS5IdG1sTmFtZQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDE1KT0iYXJ0aWNsZS9jYXRlZ29yeS9vcmRlciINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMTUpPUNhdGVnb3J5cyhDYXRlSUQpLk9yZGVyDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoMTYpPSJhcnRpY2xlL2NhdGVnb3J5L2NvdW50Ig0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgxNik9Q2F0ZWdvcnlzKENhdGVJRCkuQ291bnQNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSgxNyk9ImFydGljbGUvY2F0ZWdvcnkvdXJsIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgxNyk9VHJhbnNmZXJIVE1MKENhdGVnb3J5cyhDYXRlSUQpLkh0bWxVcmwsIlthbnRpLXpjX2Jsb2dfaG9zdF0iKQ0KDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoMTgpPSJhcnRpY2xlL2F1dGhvci9pZCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMTgpPVVzZXJzKEF1dGhvcklEKS5JRA0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDE5KT0iYXJ0aWNsZS9hdXRob3IvbmFtZSINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMTkpPVVzZXJzKEF1dGhvcklEKS5GaXJzdE5hbWUNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSgyMCk9ImFydGljbGUvYXV0aG9yL2xldmVsIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyMCk9WlZBX1VzZXJfTGV2ZWxfTmFtZShVc2VycyhBdXRob3JJRCkuTGV2ZWwpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoMjEpPSJhcnRpY2xlL2F1dGhvci9lbWFpbCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMjEpPVVzZXJzKEF1dGhvcklEKS5FbWFpbA0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDIyKT0iYXJ0aWNsZS9hdXRob3IvaG9tZXBhZ2UiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDIyKT1Vc2VycyhBdXRob3JJRCkuSG9tZVBhZ2UNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSgyMyk9ImFydGljbGUvYXV0aG9yL2NvdW50Ig0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyMyk9VXNlcnMoQXV0aG9ySUQpLkNvdW50DQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoMjQpPSJhcnRpY2xlL2F1dGhvci91cmwiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDI0KT1UcmFuc2ZlckhUTUwoVXNlcnMoQXV0aG9ySUQpLkh0bWxVcmwsIlthbnRpLXpjX2Jsb2dfaG9zdF0iKQ0KDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoMjUpPSJhcnRpY2xlL3Bvc3R0aW1lL2xvbmdkYXRlIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyNSk9Rm9ybWF0RGF0ZVRpbWUoUG9zdFRpbWUsdmJMb25nRGF0ZSkNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSgyNik9ImFydGljbGUvcG9zdHRpbWUvc2hvcnRkYXRlIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyNik9Rm9ybWF0RGF0ZVRpbWUoUG9zdFRpbWUsdmJTaG9ydERhdGUpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoMjcpPSJhcnRpY2xlL3Bvc3R0aW1lL2xvbmd0aW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyNyk9Rm9ybWF0RGF0ZVRpbWUoUG9zdFRpbWUsdmJMb25nVGltZSkNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSgyOCk9ImFydGljbGUvcG9zdHRpbWUvc2hvcnR0aW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyOCk9Rm9ybWF0RGF0ZVRpbWUoUG9zdFRpbWUsdmJTaG9ydFRpbWUpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoMjkpPSJhcnRpY2xlL3Bvc3R0aW1lL3llYXIiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDI5KT1ZZWFyKFBvc3RUaW1lKQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDMwKT0iYXJ0aWNsZS9wb3N0dGltZS9tb250aCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMzApPVJpZ2h0KCIwIiZNb250aChQb3N0VGltZSksMikNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSgzMSk9ImFydGljbGUvcG9zdHRpbWUvbW9udGhuYW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgzMSk9WlZBX01vbnRoKE1vbnRoKFBvc3RUaW1lKSkNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSgzMik9ImFydGljbGUvcG9zdHRpbWUvZGF5Ig0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgzMik9UmlnaHQoIjAiJkRheShQb3N0VGltZSksMikNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSgzMyk9ImFydGljbGUvcG9zdHRpbWUvd2Vla2RheSINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMzMpPVdlZWtkYXkoUG9zdFRpbWUpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoMzQpPSJhcnRpY2xlL3Bvc3R0aW1lL3dlZWtkYXluYW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgzNCk9WlZBX1dlZWsoV2Vla2RheShQb3N0VGltZSkpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoMzUpPSJhcnRpY2xlL3Bvc3R0aW1lL2hvdXIiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDM1KT1SaWdodCgiMCImSG91cihQb3N0VGltZSksMikNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSgzNik9ImFydGljbGUvcG9zdHRpbWUvbWludXRlIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgzNik9UmlnaHQoIjAiJk1pbnV0ZShQb3N0VGltZSksMikNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSgzNyk9ImFydGljbGUvcG9zdHRpbWUvc2Vjb25kIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgzNyk9UmlnaHQoIjAiJlNlY29uZChQb3N0VGltZSksMikNCg0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDM4KT0iYXJ0aWNsZS9jb21tZW50cnNzIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgzOCk9VHJhbnNmZXJIVE1MKFdmd0NvbW1lbnRSc3MsIlthbnRpLXpjX2Jsb2dfaG9zdF0iKQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDM5KT0iYXJ0aWNsZS9jb21tZW50cG9zdHVybCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMzkpPVRyYW5zZmVySFRNTChDb21tZW50UG9zdFVybCwiW2h0bWwtZm9ybWF0XVthbnRpLXpjX2Jsb2dfaG9zdF0iKQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDQwKT0iYXJ0aWNsZS9wcmV0cmFja2JhY2tfdXJsIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSg0MCk9VHJhbnNmZXJIVE1MKFByZVRyYWNrQmFjaywiW2h0bWwtZm9ybWF0XVthbnRpLXpjX2Jsb2dfaG9zdF0iKQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDQxKT0iYXJ0aWNsZS90cmFja2JhY2trZXkiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDQxKT1UcmFja0JhY2tLZXkNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSg0Mik9ImFydGljbGUvY29tbWVudGtleSINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoNDIpPUNvbW1lbnRLZXkNCg0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDQzKT0iYXJ0aWNsZS9zdGF0aWNuYW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSg0Myk9U3RhdGljTmFtZQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDQ0KT0iYXJ0aWNsZS9jYXRlZ29yeS9zdGF0aWNuYW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSg0NCk9Q2F0ZWdvcnlzKENhdGVJRCkuU3RhdGljTmFtZQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDQ1KT0iYXJ0aWNsZS9hdXRob3Ivc3RhdGljbmFtZSINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoNDUpPVVzZXJzKEF1dGhvcklEKS5TdGF0aWNOYW1lDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoNDYpPSJhcnRpY2xlL3RhZ3RvbmFtZSINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoNDYpPVRhZ1RvTmFtZQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDQ3KT0iYXJ0aWNsZS9maXJzdHRhZ2ludHJvIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSg0Nyk9Rmlyc3RUYWdJbnRybw0KDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoNDgpPSJhcnRpY2xlL3Bvc3R0aW1lL21vbnRobmFtZWFiYnIiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDQ4KT1aVkFfTW9udGhfQWJicihNb250aChQb3N0VGltZSkpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoNDkpPSJhcnRpY2xlL3Bvc3R0aW1lL3dlZWtkYXluYW1lYWJiciINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoNDkpPVpWQV9XZWVrX0FiYnIoV2Vla2RheShQb3N0VGltZSkpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoNTApPSJhcnRpY2xlL2F1dGhvci9pbnRybyINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoNTApPVVzZXJzKEF1dGhvcklEKS5JbnRybw0KDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoNTEpPSJ0ZW1wbGF0ZTpzaWRlYmFyIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSg1MSk9R2V0VGVtcGxhdGUoIkNBQ0hFX1NJREVCQVIiKQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDUyKT0idGVtcGxhdGU6c2lkZWJhcjIiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDUyKT1HZXRUZW1wbGF0ZSgiQ0FDSEVfU0lERUJBUjIiKQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDUzKT0idGVtcGxhdGU6c2lkZWJhcjMiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDUzKT1HZXRUZW1wbGF0ZSgiQ0FDSEVfU0lERUJBUjMiKQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDU0KT0idGVtcGxhdGU6c2lkZWJhcjQiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDU0KT1HZXRUZW1wbGF0ZSgiQ0FDSEVfU0lERUJBUjQiKQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKDU1KT0idGVtcGxhdGU6c2lkZWJhcjUiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDU1KT1HZXRUZW1wbGF0ZSgiQ0FDSEVfU0lERUJBUjUiKQ0KDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoNTYpPSJhcnRpY2xlL2FsaWFzIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSg1Nik9QWxpYXMNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSg1Nyk9ImFydGljbGUvbG9hZHZpZXdjb3VudCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoNTcpPSI8c3BhbiBpZD0iInNwbiImSUQmIiIiPjwvc3Bhbj48c2NyaXB0IHR5cGU9IiJ0ZXh0L2phdmFzY3JpcHQiIj5Mb2FkVmlld0NvdW50KCImSUQmIik8L3NjcmlwdD4iDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoNTgpPSJhcnRpY2xlL2FkZHZpZXdjb3VudCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoNTgpPSI8c3BhbiBpZD0iInNwbiImSUQmIiIiPjwvc3Bhbj48c2NyaXB0IHR5cGU9IiJ0ZXh0L2phdmFzY3JpcHQiIj5BZGRWaWV3Q291bnQoIiZJRCYiKTwvc2NyaXB0PiINCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X1RlbXBsYXRlVGFncyhhcnlUZW1wbGF0ZVRhZ3NOYW1lLGFyeVRlbXBsYXRlVGFnc1ZhbHVlKQ0KDQoJCWo9VUJvdW5kKGFyeVRlbXBsYXRlVGFnc05hbWUpDQoJCUZvciBpPTEgdG8gag0KCQkJSWYgSXNOdWxsKGFyeVRlbXBsYXRlVGFnc1ZhbHVlKGkpKT1GYWxzZSBUaGVuDQoJCQkJc3ViaHRtbD1SZXBsYWNlKHN1Ymh0bWwsIjwjIiAmIGFyeVRlbXBsYXRlVGFnc05hbWUoaSkgJiAiIz4iLGFyeVRlbXBsYXRlVGFnc1ZhbHVlKGkpKQ0KCQkJCWh0bWwgPSBSZXBsYWNlKGh0bWwsIjwjIiAmIGFyeVRlbXBsYXRlVGFnc05hbWUoaSkgJiAiIz4iLCBhcnlUZW1wbGF0ZVRhZ3NWYWx1ZShpKSkNCgkJCUVuZCBJZg0KCQlOZXh0DQoNCgkJU2V0IFJFID0gTmV3IFJlZ0V4cCANCgkJUkUuSWdub3JlQ2FzZSA9IFRydWUgDQoJCVJFLkdsb2JhbCA9IFRydWUgDQoNCgkJSWYgSGFzVGFnPUZhbHNlIFRoZW4NCgkJCVJFLlBhdHRlcm4gPSAiPCN0ZW1wbGF0ZTphcnRpY2xlX3RhZzpiZWdpbiM+KC58XG4pKjwjdGVtcGxhdGU6YXJ0aWNsZV90YWc6ZW5kIz4iDQoJCQlzdWJodG1sID0gUkUuUmVwbGFjZShzdWJodG1sLCAiIikNCgkJRWxzZQ0KCQkJc3ViaHRtbD1SZXBsYWNlKHN1Ymh0bWwsIjwjdGVtcGxhdGU6YXJ0aWNsZV90YWc6YmVnaW4jPiIsIiIpDQoJCQlzdWJodG1sPVJlcGxhY2Uoc3ViaHRtbCwiPCN0ZW1wbGF0ZTphcnRpY2xlX3RhZzplbmQjPiIsIiIpDQoJCUVuZCBJZg0KCQlJZiBIYXNDTVRhbmRUQj1GYWxzZSBUaGVuDQoJCQlSRS5QYXR0ZXJuID0gIjwjdGVtcGxhdGU6YXJ0aWNsZV9jb21tZW50OmJlZ2luIz4oLnxcbikqPCN0ZW1wbGF0ZTphcnRpY2xlX2NvbW1lbnQ6ZW5kIz4iDQoJCQlzdWJodG1sID0gUkUuUmVwbGFjZShzdWJodG1sLCAiPGlucyBpZD0iIkFqYXhDb21tZW50QmVnaW4iIiBzdHlsZT0iImRpc3BsYXk6bm9uZTtjbGVhcjpib3RoOyIiPjwvaW5zPjxpbnMgaWQ9IiJBamF4Q29tbWVudEVuZCIiIHN0eWxlPSIiZGlzcGxheTpub25lO2NsZWFyOmJvdGg7IiI+PC9pbnM+IikgDQoJCUVsc2UNCgkJCXN1Ymh0bWw9UmVwbGFjZShzdWJodG1sLCI8I3RlbXBsYXRlOmFydGljbGVfY29tbWVudDpiZWdpbiM+IiwiIikNCgkJCXN1Ymh0bWw9UmVwbGFjZShzdWJodG1sLCI8I3RlbXBsYXRlOmFydGljbGVfY29tbWVudDplbmQjPiIsIiIpDQoJCUVuZCBJRg0KCQlJZiBIYXNNdXR1YWxpdHk9RmFsc2UgVGhlbg0KCQkJUkUuUGF0dGVybiA9ICI8I3RlbXBsYXRlOmFydGljbGVfbXV0dWFsaXR5OmJlZ2luIz4oLnxcbikqPCN0ZW1wbGF0ZTphcnRpY2xlX211dHVhbGl0eTplbmQjPiINCgkJCXN1Ymh0bWwgPSBSRS5SZXBsYWNlKHN1Ymh0bWwsICIiKSANCgkJRWxzZQ0KCQkJc3ViaHRtbD1SZXBsYWNlKHN1Ymh0bWwsIjwjdGVtcGxhdGU6YXJ0aWNsZV9tdXR1YWxpdHk6YmVnaW4jPiIsIiIpDQoJCQlzdWJodG1sPVJlcGxhY2Uoc3ViaHRtbCwiPCN0ZW1wbGF0ZTphcnRpY2xlX211dHVhbGl0eTplbmQjPiIsIiIpDQoJCUVuZCBJZg0KDQoJCVNldCBSRSA9IE5vdGhpbmcNCg0KDQoJCWh0bWw9UmVwbGFjZShodG1sLCI8IyImc3ViaHRtbF9UZW1wbGF0ZU5hbWUmIiM+IixzdWJodG1sKQ0KDQoJCUV4cG9ydD1UcnVlDQoNCgkJJ3BsdWdpbiBub2RlDQoJCWJBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9FbmQ9RmFsc2UNCgkJRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fVEFydGljbGVfRXhwb3J0X0VuZCBpbiBBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9FbmQNCgkJCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9FbmQpIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX0V4cG9ydF9FbmQpDQoJCQlJZiBiQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9FeHBvcnRfRW5kPVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCU5leHQNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCg0KDQoJRnVuY3Rpb24gQnVpbGQoKQ0KDQoJCURpbSBhcnlUZW1wbGF0ZVRhZ3NOYW1lDQoJCURpbSBhcnlUZW1wbGF0ZVRhZ3NWYWx1ZQ0KDQoJCURpbSBpLGoNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVEFydGljbGVfQnVpbGRfVGVtcGxhdGUoaHRtbCkNCg0KCQlUZW1wbGF0ZVRhZ3NEaWMuSXRlbSgiQmxvZ1RpdGxlIik9SHRtbFRpdGxlDQoJCVRlbXBsYXRlVGFnc0RpYy5JdGVtKCJaQ19CTE9HX0hPU1QiKT1CbG9nSG9zdA0KDQoJCUlmIFRlbXBsYXRlX0NhbGVuZGFyPSIiIFRoZW4gVGVtcGxhdGVfQ2FsZW5kYXI9IjxzY3JpcHQgc3JjPSIiPCNaQ19CTE9HX0hPU1QjPnpiX3N5c3RlbS9mdW5jdGlvbi9jX2h0bWxfanMuYXNwP2RhdGU9bm93IiIgdHlwZT0iInRleHQvamF2YXNjcmlwdCIiPjwvc2NyaXB0PiINCg0KCQlJZiBaQ19NVUxUSV9ET01BSU5fU1VQUE9SVD1UcnVlIEFuZCBaQ19QRVJNQU5FTlRfRE9NQUlOX0VOQUJMRT1GYWxzZSBUaGVuDQoJCQlEaW0geCx5DQoJCQl4PUNTdHIoUmVwbGFjZShVcmwsQmxvZ0hvc3QsIiIpKQ0KCQkJeD1SZXBsYWNlKHgsIi8vLy8vIiwiLyIpOng9UmVwbGFjZSh4LCIvLy8vIiwiLyIpOng9UmVwbGFjZSh4LCIvLy8iLCIvIik6eD1SZXBsYWNlKHgsIi8vIiwiLyIpDQoJCQlGb3IgaT0xIFRvIFVCb3VuZChTcGxpdCh4LCIvIikpDQoJCQkJeT15ICYgIi4uLyINCgkJCU5leHQNCgkJCUlmIHk9IiIgVGhlbiB5PSIuLyINCgkJCVRlbXBsYXRlVGFnc0RpYy5JdGVtKCJaQ19CTE9HX0hPU1QiKT15DQoJCUVuZCBJZg0KDQoNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZT1UZW1wbGF0ZVRhZ3NEaWMuS2V5cw0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZT1UZW1wbGF0ZVRhZ3NEaWMuSXRlbXMNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVEFydGljbGVfQnVpbGRfVGVtcGxhdGVUYWdzKGFyeVRlbXBsYXRlVGFnc05hbWUsYXJ5VGVtcGxhdGVUYWdzVmFsdWUpDQoNCgkJRGltIHMsdA0KDQoJCWo9VUJvdW5kKGFyeVRlbXBsYXRlVGFnc05hbWUpDQoJCUZvciBpPTEgdG8gag0KCQkJSWYgKEluU3RyKGFyeVRlbXBsYXRlVGFnc05hbWUoaSksIkNBQ0hFX0lOQ0xVREVfIik+MCkgQW5kIChSaWdodChhcnlUZW1wbGF0ZVRhZ3NOYW1lKGkpLDUpPD4iX0hUTUwiKSBBbmQgKFJpZ2h0KGFyeVRlbXBsYXRlVGFnc05hbWUoaSksMyk8PiJfSlMiKSBUaGVuDQoJCQkJcz1zICYgYXJ5VGVtcGxhdGVUYWdzTmFtZShpKSAmICJ8Ig0KCQkJRW5kIElmDQoJCQlJZiAoIjwjIiAmIGFyeVRlbXBsYXRlVGFnc05hbWUoaSkgJiAiIz4iPSI8I0NBQ0hFX0lOQ0xVREVfQ0FMRU5EQVIjPiIpIE9yICgiPCMiICYgYXJ5VGVtcGxhdGVUYWdzTmFtZShpKSAmICIjPiI9IjwjQ0FDSEVfSU5DTFVERV9DQUxFTkRBUl9KUyM+IikgT3IgKCI8IyIgJiBhcnlUZW1wbGF0ZVRhZ3NOYW1lKGkpICYgIiM+Ij0iPCNDQUNIRV9JTkNMVURFX0NBTEVOREFSX05PVyM+IikgVGhlbg0KCQkJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKGkpPVRlbXBsYXRlX0NhbGVuZGFyDQoJCQlFbmQgSWYNCgkJTmV4dA0KDQoNCgkJSWYgSXNEeW5hbWljTG9hZFNpbGRiYXI9VHJ1ZSBUaGVuDQoJCQlGb3IgRWFjaCB0IEluIFNwbGl0KHMsInwiKQ0KCQkJCUlmIHQ9IiIgVGhlbiBFeGl0IEZvcg0KCQkJCUlmIHQ8PiJDQUNIRV9JTkNMVURFX05BVkJBUiIgVGhlbg0KCQkJCQlodG1sPVJlcGxhY2UoaHRtbCwiPCMiJnQmIiM+IiwiPCMiJnQmIl9KUyM+IikNCgkJCQlFbmQgSWYNCgkJCU5leHQNCgkJRW5kIElmDQoNCg0KCQlqPVVCb3VuZChhcnlUZW1wbGF0ZVRhZ3NOYW1lKQ0KDQoJCUZvciBpPTEgdG8gag0KCQkJaHRtbD1SZXBsYWNlKGh0bWwsIjwjIiAmIGFyeVRlbXBsYXRlVGFnc05hbWUoaSkgJiAiIz4iLGFyeVRlbXBsYXRlVGFnc1ZhbHVlKGkpKQ0KCQlOZXh0DQoJCWh0bWw9UmVwbGFjZShodG1sLCI8IyIgJiBhcnlUZW1wbGF0ZVRhZ3NOYW1lKDApICYgIiM+IixhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgwKSkNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVEFydGljbGVfQnVpbGRfVGVtcGxhdGVfU3VjY2VlZChodG1sKQ0KDQoJCUJ1aWxkPVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gU3RhdGlzdGljKCkNCg0KCQlDYWxsIEdldFVzZXJzYnlVc2VySURMaXN0KEF1dGhvcklEKQ0KDQoJCSfph43mlrDnu5/orqHliIbnsbvlj4rnlKjmiLfnmoTmlofnq6DmlbDjgIHor4TorrrmlbANCgkJRGltIHN0clNRTCxhcnkxKDIpLGFyeTIoMikNCgkJc3RyU1FMPSIiDQoJCWFyeTEoMCk9VHJ1ZQ0KCQlhcnkyKDApPSJTRUxFQ1QgQ09VTlQoW2xvZ19JRF0pIEZST00gW2Jsb2dfQ29tbWVudF0gV0hFUkUgW2xvZ19JRF0gPSIgJiBJRCAmICJBTkQgW2NvbW1fUGFyZW50SURdPTAgQU5EIFtjb21tX2lzQ2hlY2tdPTAiDQoJCWFyeTEoMSk9SUlmKENhdGVnb3J5cyhDYXRlSUQpLlJlQ291bnQ9MCxUcnVlLEZhbHNlKQ0KCQlhcnkyKDEpPSJTRUxFQ1QgQ09VTlQoW2xvZ19JRF0pIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgW2xvZ19MZXZlbF0+MSBBTkQgW2xvZ19UeXBlXT0wIEFORCBbbG9nX0NhdGVJRF09IiAmIENhdGVJRCANCgkJYXJ5MSgyKT1JSWYoVXNlcnMoQXV0aG9ySUQpLlJlQ291bnQ9MCxUcnVlLEZhbHNlKQ0KCQlhcnkyKDIpPSJTRUxFQ1QgQ09VTlQoW2xvZ19JRF0pIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgW2xvZ19MZXZlbF0+MSBBTkQgW2xvZ19UeXBlXT0wIEFORCBbbG9nX0F1dGhvcklEXT0iICYgQXV0aG9ySUQgDQoJCXN0clNRTD1zdHJTUUwgJiBJSWYoYXJ5MSgwKSxhcnkyKDApLCIiKQ0KCQlzdHJTUUw9c3RyU1FMICYgSUlmKGFyeTEoMSksSUlmKHN0clNRTD0iIiwiICIsIiBVTklPTiBBTEwgIikgJiBhcnkyKDEpLCIiKQ0KCQlzdHJTUUw9c3RyU1FMICYgSUlmKGFyeTEoMiksSUlmKHN0clNRTD0iIiwiICIsIiBVTklPTiBBTEwgIikgJiBhcnkyKDIpLCIiKQ0KCQlEaW0gb2JqUlMsaQ0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKHN0clNRTCkNCgkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KCQkJRm9yIGk9MCB0byAyDQoJCQkJSWYgYXJ5MShpKT1UcnVlIFRoZW4NCgkJCQkJU2VsZWN0IENhc2UgaQ0KCQkJCQlDYXNlIDANCgkJCQkJCUNvbW1OdW1zPW9ialJTKDApDQoJCQkJCQlvYmpDb25uLkV4ZWN1dGUoIlVQREFURSBbYmxvZ19BcnRpY2xlXSBTRVQgW2xvZ19Db21tTnVtc109IiYgQ29tbU51bXMgJiIgV0hFUkUgW2xvZ19JRF0gPSIgJiBJRCkNCgkJCQkJQ2FzZSAxDQoJCQkJCQlDYWxsIEJsb2dDb25maWcuV3JpdGUoIlpDX1VOQ0FURUdPUklaRURfQ09VTlQiLDEpDQoJCQkJCQlDYXRlZ29yeXMoQ2F0ZUlEKS5SZUNvdW50PW9ialJzKDApDQoJCQkJCQlJZiBDYXRlSUQ9MCBUaGVuDQoJCQkJCQkJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19VTkNBVEVHT1JJWkVEX0NPVU5UIixDYXRlZ29yeXMoQ2F0ZUlEKS5SZUNvdW50KQ0KCQkJCQkJRWxzZQ0KCQkJCQkJCW9iakNvbm4uRXhlY3V0ZSgiVVBEQVRFIFtibG9nX0NhdGVnb3J5XSBTRVQgW2NhdGVfQ291bnRdPSImQ2F0ZWdvcnlzKENhdGVJRCkuUmVDb3VudCYiIFdIRVJFIFtjYXRlX0lEXSA9IiAmIENhdGVJRCkNCgkJCQkJCUVuZCBJZg0KCQkJCQkJQ2F0ZWdvcnlzKENhdGVJRCkuQ291bnQ9Q2F0ZWdvcnlzKENhdGVJRCkuUmVDb3VudA0KCQkJCQkJJ+WOn+WIhuexu+iuoeaVsO+8jTENCgkJCQkJCURpbSBDYXRlX0V4SUQ6Q2F0ZV9FeElEPUNhdGVnb3J5cyhDYXRlSUQpLkV4SUQNCgkJCQkJCUlmIENhdGVfRXhJRDw+LTEgVGhlbg0KCQkJCQkJCUNhdGVnb3J5cyhDYXRlX0V4SUQpLlJlQ291bnQ9Q2F0ZWdvcnlzKENhdGVfRXhJRCkuQ291bnQtMQ0KCQkJCQkJCUlmIENhdGVfRXhJRD0wIFRoZW4NCgkJCQkJCQkJQ2FsbCBCbG9nQ29uZmlnLldyaXRlKCJaQ19VTkNBVEVHT1JJWkVEX0NPVU5UIixDYXRlZ29yeXMoQ2F0ZV9FeElEKS5SZUNvdW50KQ0KCQkJCQkJCUVsc2UNCgkJCQkJCQkJb2JqQ29ubi5FeGVjdXRlKCJVUERBVEUgW2Jsb2dfQ2F0ZWdvcnldIFNFVCBbY2F0ZV9Db3VudF09IiZDYXRlZ29yeXMoQ2F0ZV9FeElEKS5SZUNvdW50JiIgV0hFUkUgW2NhdGVfSURdID0iICYgQ2F0ZV9FeElEKQ0KCQkJCQkJCUVuZCBJZg0KCQkJCQkJCUNhdGVnb3J5cyhDYXRlX0V4SUQpLkNvdW50PUNhdGVnb3J5cyhDYXRlX0V4SUQpLlJlQ291bnQNCgkJCQkJCUVuZCBJZiANCgkJCQkJCUJsb2dDb25maWcuU2F2ZQ0KCQkJCQlDYXNlIDINCgkJCQkJCVVzZXJzKEF1dGhvcklEKS5SZUNvdW50PW9ialJzKDApDQoJCQkJCQlvYmpDb25uLkV4ZWN1dGUoIlVQREFURSBbYmxvZ19NZW1iZXJdIFNFVCBbbWVtX1Bvc3RMb2dzXT0iJlVzZXJzKEF1dGhvcklEKS5SZUNvdW50JiIgV0hFUkUgW21lbV9JRF0gPSIgJiBBdXRob3JJRCkNCgkJCQkJCVVzZXJzKEF1dGhvcklEKS5Db3VudD1Vc2VycyhBdXRob3JJRCkuUmVDb3VudA0KCQkJCQkJJ+WOn+eUqOaIt+iuoeaVsO+8jTENCgkJCQkJCURpbSBVc2VyX0V4SUQ6VXNlcl9FeElEPVVzZXJzKEF1dGhvcklEKS5FeElEDQoJCQkJCQlJZiBVc2VyX0V4SUQ8Pi0xIFRoZW4NCgkJCQkJCQlVc2VycyhVc2VyX0V4SUQpLlJlQ291bnQ9VXNlcnMoVXNlcl9FeElEKS5Db3VudC0xDQoJCQkJCQkJb2JqQ29ubi5FeGVjdXRlKCJVUERBVEUgW2Jsb2dfTWVtYmVyXSBTRVQgW21lbV9Qb3N0TG9nc109IiZVc2VycyhVc2VyX0V4SUQpLlJlQ291bnQmIiBXSEVSRSBbbWVtX0lEXSA9IiAmIFVzZXJfRXhJRCkNCgkJCQkJCQlVc2VycyhVc2VyX0V4SUQpLkNvdW50PVVzZXJzKFVzZXJfRXhJRCkuUmVDb3VudA0KCQkJCQkJRW5kIElmIA0KCQkJCQlFbmQgU2VsZWN0DQoJCQkJCW9ialJzLk1vdmVOZXh0DQoJCQkJRW5kIElmDQoJCQkJDQoJCQlOZXh0DQoJCQkNCgkJRW5kIElmDQoJCQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJCUZ1bGxVcmw9UmVwbGFjZShVcmwsQmxvZ0hvc3QsIjwjWkNfQkxPR19IT1NUIz4iKQ0KDQoJCW9iakNvbm4uRXhlY3V0ZSgiVVBEQVRFIFtibG9nX0FydGljbGVdIFNFVCBbbG9nX0Z1bGxVcmxdPSciJkZ1bGxVcmwmIicgV0hFUkUgW2xvZ19JRF0gPSIgJiBJRCkNCg0KCQlTdGF0aXN0aWM9VHJ1ZQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCUZ1bmN0aW9uIFNldFZhcihUZW1wbGF0ZVRhZyxUZW1wbGF0ZVZhbHVlKQ0KDQoJCUlmIElzRW1wdHkoaHRtbCkgVGhlbiBodG1sPVRlbXBsYXRlDQoNCgkJaHRtbD1SZXBsYWNlKGh0bWwsIjwjIiAmIFRlbXBsYXRlVGFnICYgIiM+IixUZW1wbGF0ZVZhbHVlKQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCUZ1bmN0aW9uIFNhdmUoKQ0KDQoJCSdwbHVnaW4gbm9kZQ0KCQliQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9TYXZlX0JlZ2luPUZhbHNlDQoJCUZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlX1NhdmVfQmVnaW4gaW4gQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9TYXZlX0JlZ2luDQoJCQlJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9TYXZlX0JlZ2luKSBUaGVuIENhbGwgRXhlY3V0ZShzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZV9TYXZlX0JlZ2luKQ0KCQkJSWYgYkFjdGlvbl9QbHVnaW5fVEFydGljbGVfU2F2ZV9CZWdpbj1UcnVlIFRoZW4gRXhpdCBGdW5jdGlvbg0KCQlOZXh0DQoNCgkJSWYgWkNfUE9TVF9TVEFUSUNfTU9ERTw+IlNUQVRJQyIgVGhlbiBFeGl0IEZ1bmN0aW9uDQoNCgkJSWYgTm90KExldmVsPjIpIFRoZW4gU2F2ZT1UcnVlOkV4aXQgRnVuY3Rpb24NCg0KCQlEaW0gb2JqU3RyZWFtDQoNCgkJaHRtbD1UcmFuc2ZlckhUTUwoaHRtbCwiW25vLWFzcF0iKQ0KDQoJCUlmIFpDX1NUQVRJQ19UWVBFPSJhc3AiIFRoZW4NCgkJCWh0bWw9IjwiJiIlQCBDT0RFUEFHRT02NTAwMSAlIiYiPiIgJiBodG1sDQoJCUVuZCBJZg0KDQoJCUNhbGwgQ3JlYXREaXJlY3RvcnlCeUN1c3RvbURpcmVjdG9yeVdpdGhGdWxsQmxvZ1BhdGgoRnVsbFBhdGgpDQoNCgkJQ2FsbCBTYXZlVG9GaWxlKEZ1bGxQYXRoLGh0bWwsInV0Zi04IixGYWxzZSkNCg0KCQlTYXZlPVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gRGVsRmlsZSgpDQoNCgkJQ2FsbCBEZWxUb0ZpbGUoRnVsbFBhdGgpDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIERlbCgpDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RBcnRpY2xlX0RlbChJRCxUYWcsQ2F0ZUlELFRpdGxlLEludHJvLENvbnRlbnQsTGV2ZWwsQXV0aG9ySUQsUG9zdFRpbWUsQ29tbU51bXMsVmlld051bXMsVHJhY2tCYWNrTnVtcyxBbGlhcyxJc3RvcCxUZW1wbGF0ZU5hbWUsRnVsbFVybCxGVHlwZSxNZXRhU3RyaW5nKQ0KDQoJCUNhbGwgRGVsRmlsZSgpDQoNCgkJQ2FsbCBDaGVja1BhcmFtZXRlcihJRCwiaW50IiwwKQ0KCQlJZiAoSUQ9MCkgVGhlbiBEZWw9RmFsc2U6RXhpdCBGdW5jdGlvbg0KDQoJCW9iakNvbm4uRXhlY3V0ZSgiREVMRVRFIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgW2xvZ19JRF0gPSIgJiBJRCkNCgkJb2JqQ29ubi5FeGVjdXRlKCJERUxFVEUgRlJPTSBbYmxvZ19Db21tZW50XSBXSEVSRSBbbG9nX0lEXSA9IiAmIElEKQ0KCQlvYmpDb25uLkV4ZWN1dGUoIkRFTEVURSBGUk9NIFtibG9nX1RyYWNrQmFja10gV0hFUkUgW2xvZ19JRF0gPSIgJiBJRCkNCg0KCQlEZWw9VHJ1ZQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KDQoJRnVuY3Rpb24gU2F2ZUNhY2hlKCkNCglFbmQgRnVuY3Rpb24NCg0KDQoJRnVuY3Rpb24gTG9hZENhY2hlKCkNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHJpdmF0ZSBTdWIgQ2xhc3NfSW5pdGlhbGl6ZSgpDQoJCVBvc3RUaW1lPUdldFRpbWUoTm93KCkpDQoJCVBvc3RUaW1lPVllYXIoUG9zdFRpbWUpICYgIi0iICYgTW9udGgoUG9zdFRpbWUpICYgIi0iICYgRGF5KFBvc3RUaW1lKSAmICIgIiAmIEhvdXIoUG9zdFRpbWUpICYgIjoiICYgTWludXRlKFBvc3RUaW1lKSAmICI6IiAmIFNlY29uZChQb3N0VGltZSkNCgkJSUQ9MA0KCQlDYXRlSUQ9MA0KCQlBdXRob3JJRD0wDQoJCUxldmVsPTQn6buY6K6k5Li65pmu6YCaDQoJCVRpdGxlPVpDX01TRzA5OQ0KCQlJUD1HZXRSZWFsbHlJUA0KDQoJCUlzRHluYW1pY0xvYWRTaWxkYmFyPVRydWUNCg0KCQlGdGVtcGxhdGU9RW1wdHkNCgkJRlR5cGU9WkNfUE9TVF9UWVBFX0FSVElDTEUNCg0KCQlTZXQgTWV0YT1OZXcgVE1ldGENCg0KCUVuZCBTdWINCg0KDQpFbmQgQ2xhc3MNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAg5a6a5LmJVEFydGljbGVMaXN057G7DQonIOi+k+WFpe+8miAgICDml6ANCicg6L+U5Zue77yaICAgIOaXoA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KQ2xhc3MgVEFydGljbGVMaXN0DQoNCglQdWJsaWMgVGl0bGUNCg0KCVB1YmxpYyBUZW1wbGF0ZV9QYWdlQmFyDQoJUHVibGljIFRlbXBsYXRlX1BhZ2VCYXJfTmV4dA0KCVB1YmxpYyBUZW1wbGF0ZV9QYWdlQmFyX1ByZXZpb3VzDQoJUHVibGljIFRlbXBsYXRlX0NhbGVuZGFyDQoNCglQdWJsaWMgVGVtcGxhdGVUYWdzX0FydGljbGVMaXN0X0F1dGhvcl9JRA0KCVB1YmxpYyBUZW1wbGF0ZVRhZ3NfQXJ0aWNsZUxpc3RfVGFnc19JRA0KCVB1YmxpYyBUZW1wbGF0ZVRhZ3NfQXJ0aWNsZUxpc3RfQ2F0ZWdvcnlfSUQNCglQdWJsaWMgVGVtcGxhdGVUYWdzX0FydGljbGVMaXN0X0RhdGVfU2hvcnREYXRlDQoJUHVibGljIFRlbXBsYXRlVGFnc19BcnRpY2xlTGlzdF9EYXRlX1llYXINCglQdWJsaWMgVGVtcGxhdGVUYWdzX0FydGljbGVMaXN0X0RhdGVfTW9udGgNCglQdWJsaWMgVGVtcGxhdGVUYWdzX0FydGljbGVMaXN0X0RhdGVfRGF5DQoJUHVibGljIFRlbXBsYXRlVGFnc19BcnRpY2xlTGlzdF9QYWdlX05vdw0KCVB1YmxpYyBUZW1wbGF0ZVRhZ3NfQXJ0aWNsZUxpc3RfUGFnZV9BbGwNCg0KCVB1YmxpYyBodG1sDQoJUHVibGljIHN1Ymh0bWwNCglQdWJsaWMgc3ViaHRtbF9UZW1wbGF0ZU5hbWUNCg0KCVB1YmxpYyBJc0R5bmFtaWNMb2FkU2lsZGJhcg0KCVB1YmxpYyBMaXN0VHlwZQ0KDQoJUHJpdmF0ZSBGdGVtcGxhdGUNCglQdWJsaWMgUHJvcGVydHkgTGV0IFRlbXBsYXRlKHN0ckZpbGVOYW1lKQ0KCQlGdGVtcGxhdGU9R2V0VGVtcGxhdGUoIlRFTVBMQVRFXyIgJiBzdHJGaWxlTmFtZSkNCglFbmQgUHJvcGVydHkNCglQdWJsaWMgUHJvcGVydHkgR2V0IFRlbXBsYXRlDQoJCUlmIEZ0ZW1wbGF0ZT0iIiBUaGVuDQoJCQlGdGVtcGxhdGU9R2V0VGVtcGxhdGUoIlRFTVBMQVRFX0RFRkFVTFQiKQ0KCQlFbmQgSWYNCg0KCQlUZW1wbGF0ZSA9IEZ0ZW1wbGF0ZQ0KCUVuZCBQcm9wZXJ0eQ0KDQoNCglQcml2YXRlIEZmdWxscmVnZXgNCglQdWJsaWMgUHJvcGVydHkgTGV0IEZ1bGxSZWdleChzKQ0KCQlGZnVsbHJlZ2V4PXMNCglFbmQgUHJvcGVydHkNCglQdWJsaWMgUHJvcGVydHkgR2V0IEZ1bGxSZWdleA0KCQlJZiBGZnVsbHJlZ2V4PD4iIiBUaGVuIA0KCQkJRnVsbFJlZ2V4PUZmdWxscmVnZXgNCgkJRWxzZQ0KCQkJRnVsbFJlZ2V4PVpDX0RFRkFVTFRfUkVHRVgNCgkJRW5kIElmDQoJRW5kIFByb3BlcnR5DQoNCg0KCVB1YmxpYyBVcmwNCglQcml2YXRlIE1peFVybA0KDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IEh0bWxUaXRsZQ0KCQlIdG1sVGl0bGU9VHJhbnNmZXJIVE1MKFRpdGxlLCJbaHRtbC1qYXBhbl1baHRtbC1mb3JtYXRdIikNCglFbmQgUHJvcGVydHkNCg0KDQoJUHVibGljIEZ1bmN0aW9uIEV4cG9ydChpbnRQYWdlLGFueUNhdGUsYW55QXV0aG9yLGR0bURhdGUsYW55VGFnLGludFR5cGUpDQoNCgkJJ3BsdWdpbiBub2RlDQoJCWJBY3Rpb25fUGx1Z2luX1RBcnRpY2xlTGlzdF9FeHBvcnRfQmVnaW49RmFsc2UNCgkJRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fVEFydGljbGVMaXN0X0V4cG9ydF9CZWdpbiBpbiBBY3Rpb25fUGx1Z2luX1RBcnRpY2xlTGlzdF9FeHBvcnRfQmVnaW4NCgkJCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlTGlzdF9FeHBvcnRfQmVnaW4pIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlTGlzdF9FeHBvcnRfQmVnaW4pDQoJCQlJZiBiQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZUxpc3RfRXhwb3J0X0JlZ2luPVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCU5leHQNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVEFydGljbGVMaXN0X0V4cG9ydChpbnRQYWdlLGFueUNhdGUsYW55QXV0aG9yLGR0bURhdGUsYW55VGFnLGludFR5cGUpDQoNCgkJTGlzdFR5cGU9IkRFRkFVTFQiDQoJCVVybCA9UGFyc2VDdXN0b21EaXJlY3RvcnlGb3JVcmwoRnVsbFJlZ2V4LFpDX1NUQVRJQ19ESVJFQ1RPUlksIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIpDQoJCU1peFVybD1QYXJzZUN1c3RvbURpcmVjdG9yeUZvclVybCgieyVob3N0JX0vY2F0YWxvZy5hc3AiLFpDX1NUQVRJQ19ESVJFQ1RPUlksIiIsIiIsIiIsIiIsIiIsIiIsIiIsIiIpDQoNCgkJRGltIGFyeUFydGljbGUNCgkJRGltIGFyeUFydGljbGVMaXN0KCkNCgkJRGltICBUZW1wbGF0ZV9BcnRpY2xlX0lzdG9wDQoNCgkJDQoJCSdwbHVnaW4gbm9kZQ0KCQlEaW0gaSxqLGssbCxzLHQNCgkJRGltIG9ialJTDQoJCURpbSBpbnRQYWdlQ291bnQNCgkJRGltIG9iakFydGljbGUNCgkJRGltIHV0LHVkLGRkLGR0LHR0LHRkDQoJCURpbSBpbnRDYXRlLGludEF1dGhvcixpbnRUYWcNCg0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKGludFBhZ2UsImludCIsMSkNCgkJVGl0bGU9WkNfQkxPR19TVUJUSVRMRQ0KDQoJCVNldCBvYmpSUz1TZXJ2ZXIuQ3JlYXRlT2JqZWN0KCJBRE9EQi5SZWNvcmRzZXQiKQ0KCQlvYmpSUy5DdXJzb3JUeXBlID0gYWRPcGVuS2V5c2V0DQoJCW9ialJTLkxvY2tUeXBlID0gYWRMb2NrUmVhZE9ubHkNCgkJb2JqUlMuQWN0aXZlQ29ubmVjdGlvbj1vYmpDb25uDQoNCgkJU2V0IGR0ID0gQ3JlYXRlT2JqZWN0KCJTY3JpcHRpbmcuRGljdGlvbmFyeSIpDQoJCVNldCBkZCA9IENyZWF0ZU9iamVjdCgiU2NyaXB0aW5nLkRpY3Rpb25hcnkiKQ0KDQoJCScvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KCQknb250b3ANCgkJb2JqUlMuU291cmNlPSJTRUxFQ1QgW2xvZ19JRF0sW2xvZ19UYWddLFtsb2dfQ2F0ZUlEXSxbbG9nX1RpdGxlXSxbbG9nX0ludHJvXSxbbG9nX0NvbnRlbnRdLFtsb2dfTGV2ZWxdLFtsb2dfQXV0aG9ySURdLFtsb2dfUG9zdFRpbWVdLFtsb2dfQ29tbU51bXNdLFtsb2dfVmlld051bXNdLFtsb2dfVHJhY2tCYWNrTnVtc10sW2xvZ19VcmxdLFtsb2dfSXN0b3BdLFtsb2dfVGVtcGxhdGVdLFtsb2dfRnVsbFVybF0sW2xvZ19UeXBlXSxbbG9nX01ldGFdIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgKFtsb2dfVHlwZV09MCkgQW5kIChbbG9nX0lEXT4wKSBBTkQgKFtsb2dfSXN0b3BdPD4wKSBBTkQgKFtsb2dfTGV2ZWxdPjEpIg0KCQlvYmpSUy5Tb3VyY2U9b2JqUlMuU291cmNlICYgIk9SREVSIEJZIFtsb2dfUG9zdFRpbWVdIERFU0MsW2xvZ19JRF0gREVTQyINCgkJb2JqUlMuT3BlbigpDQoJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCgkJCW9ialJTLlBhZ2VTaXplID0gWkNfRElTUExBWV9DT1VOVA0KCQkJaW50UGFnZUNvdW50PW9ialJTLlBhZ2VDb3VudA0KCQkJb2JqUlMuQWJzb2x1dGVQYWdlID0gMQ0KDQoJCQlGb3IgaSA9IDEgVG8gb2JqUlMuUGFnZVNpemUNCg0KCQkJCVNldCBvYmpBcnRpY2xlPU5ldyBUQXJ0aWNsZQ0KCQkJCUlmIG9iakFydGljbGUuTG9hZEluZm9CeUFycmF5KEFycmF5KG9ialJTKDApLG9ialJTKDEpLG9ialJTKDIpLG9ialJTKDMpLG9ialJTKDQpLG9ialJTKDUpLG9ialJTKDYpLG9ialJTKDcpLG9ialJTKDgpLG9ialJTKDkpLG9ialJTKDEwKSxvYmpSUygxMSksb2JqUlMoMTIpLG9ialJTKDEzKSxvYmpSUygxNCksb2JqUlMoMTUpLG9ialJTKDE2KSxvYmpSUygxNykpKSBUaGVuDQoJCQkJCXV0PXV0ICYgIiwiICYgb2JqUnMoNykNCgkJCQkJdHQ9dHQgJiBvYmpScygxKQ0KCQkJCQlkdC5BZGQgQ0xuZyhvYmpScygwKSksIG9iakFydGljbGUNCgkJCQlFbmQgSWYNCgkJCQlTZXQgb2JqQXJ0aWNsZT1Ob3RoaW5nDQoNCgkJCQlvYmpSUy5Nb3ZlTmV4dA0KCQkJCUlmIG9ialJTLkVPRiBUaGVuIEV4aXQgRm9yDQoNCgkJCU5leHQNCg0KCQlFbmQgSWYNCgkJb2JqUlMuQ2xvc2UoKQ0KCQknLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCg0KDQoJCW9ialJTLlNvdXJjZT0iU0VMRUNUIFtsb2dfSURdLFtsb2dfVGFnXSxbbG9nX0NhdGVJRF0sW2xvZ19UaXRsZV0sW2xvZ19JbnRyb10sW2xvZ19Db250ZW50XSxbbG9nX0xldmVsXSxbbG9nX0F1dGhvcklEXSxbbG9nX1Bvc3RUaW1lXSxbbG9nX0NvbW1OdW1zXSxbbG9nX1ZpZXdOdW1zXSxbbG9nX1RyYWNrQmFja051bXNdLFtsb2dfVXJsXSxbbG9nX0lzdG9wXSxbbG9nX1RlbXBsYXRlXSxbbG9nX0Z1bGxVcmxdLFtsb2dfVHlwZV0sW2xvZ19NZXRhXSBGUk9NIFtibG9nX0FydGljbGVdIFdIRVJFIChbbG9nX1R5cGVdPTApIEFORCAoW2xvZ19MZXZlbF0+MSkiDQoNCgkJSWYgYW55Q2F0ZTw+IiIgVGhlbg0KDQoJCQlMaXN0VHlwZT0iQ0FURUdPUlkiDQoNCgkJCUlmIEluU3RyKFpDX0NBVEVHT1JZX1JFR0VYLCJ7JWFsaWFzJX0iKT4wIFRoZW4NCgkJCQlpPUdldENhdGVCeUFsaWFzKGFueUNhdGUpDQoJCQkJSWYgaT0tMSBUaGVuDQoJCQkJCWk9R2V0Q2F0ZUJ5TmFtZShhbnlDYXRlKQ0KCQkJCUVuZCBJZg0KCQkJRWxzZUlmIEluU3RyKFpDX0NBVEVHT1JZX1JFR0VYLCJ7JW5hbWUlfSIpPjAgVGhlbiANCgkJCQlpPUdldENhdGVCeU5hbWUoYW55Q2F0ZSkNCgkJCUVsc2UNCgkJCQlpPWFueUNhdGUNCgkJCUVuZCBJZg0KDQoJCQlDYWxsIENoZWNrUGFyYW1ldGVyKGksImludCIsRW1wdHkpDQoNCgkJCWludENhdGU9aQ0KDQoJCQlJZiBpPTAgVGhlbg0KCQkJCW9ialJTLlNvdXJjZT1vYmpSUy5Tb3VyY2UgJiAiQU5EKFtsb2dfQ2F0ZUlEXT0wKSINCgkJCUVsc2UNCgkJCQlEaW0gc3RyU3ViQ2F0ZUlEDQoJCQkJc3RyU3ViQ2F0ZUlEPUpvaW4oR2V0U3ViQ2F0ZUlEKGksVHJ1ZSksIiwiKQ0KCQkJCW9ialJTLlNvdXJjZT1vYmpSUy5Tb3VyY2UgJiAiQU5EKFtsb2dfQ2F0ZUlEXUlOKCImc3RyU3ViQ2F0ZUlEJiIpKSINCgkJCUVuZCBJZg0KDQoJCQlJZiBDaGVja0NhdGVCeUlEKGkpIFRoZW4NCgkJCQlUaXRsZT1DYXRlZ29yeXMoaSkuTmFtZQ0KCQkJCVRlbXBsYXRlVGFnc19BcnRpY2xlTGlzdF9DYXRlZ29yeV9JRD1DYXRlZ29yeXMoaSkuSUQNCgkJCQlJZiBJc0VtcHR5KGh0bWwpPVRydWUgVGhlbiBodG1sPUNhdGVnb3J5cyhpKS5UZW1wbGF0ZQ0KCQkJCVVybCA9UGFyc2VDdXN0b21EaXJlY3RvcnlGb3JVcmwoQ2F0ZWdvcnlzKGkpLkZ1bGxSZWdleCxaQ19TVEFUSUNfRElSRUNUT1JZLCIiLCIiLCIiLCIiLCIiLENhdGVnb3J5cyhpKS5JRCxDYXRlZ29yeXMoaSkuTmFtZSxDYXRlZ29yeXMoaSkuU3RhdGljTmFtZSkNCgkJCQlNaXhVcmwgPVBhcnNlQ3VzdG9tRGlyZWN0b3J5Rm9yVXJsKCJ7JWhvc3QlfS9jYXRhbG9nLmFzcD9jYXRlPXslaWQlfSIsWkNfU1RBVElDX0RJUkVDVE9SWSwiIiwiIiwiIiwiIiwiIixDYXRlZ29yeXMoaSkuSUQsQ2F0ZWdvcnlzKGkpLk5hbWUsQ2F0ZWdvcnlzKGkpLlN0YXRpY05hbWUpDQoJCQlFbmQgSWYNCgkJRW5kIGlmDQoJCUlmIGFueUF1dGhvcjw+IiIgVGhlbg0KDQoJCQlMaXN0VHlwZT0iVVNFUiINCg0KCQkJSWYgSW5TdHIoWkNfVVNFUl9SRUdFWCwieyVhbGlhcyV9Iik+MCBUaGVuDQoJCQkJaT1HZXRBdXRob3JCeUFsaWFzKGFueUF1dGhvcikNCgkJCQlJZiBpPS0xIFRoZW4NCgkJCQkJaT1HZXRBdXRob3JCeU5hbWUoYW55QXV0aG9yKQ0KCQkJCUVuZCBJZg0KCQkJRWxzZUlmIEluU3RyKFpDX1VTRVJfUkVHRVgsInslbmFtZSV9Iik+MCBUaGVuDQoJCQkJaT1HZXRBdXRob3JCeU5hbWUoQXV0aG9yKQ0KCQkJRWxzZQ0KCQkJCWk9YW55QXV0aG9yDQoJCQlFbmQgSWYNCg0KCQkJQ2FsbCBDaGVja1BhcmFtZXRlcihpLCJpbnQiLEVtcHR5KQ0KDQoJCQlpbnRBdXRob3I9aQ0KDQoJCQlvYmpSUy5Tb3VyY2U9b2JqUlMuU291cmNlICYgIkFORChbbG9nX0F1dGhvcklEXT0iJmkmIikiDQoNCgkJCUlmIENoZWNrQXV0aG9yQnlJRChpKSBUaGVuDQoJCQkJQ2FsbCBHZXRVc2Vyc2J5VXNlcklETGlzdChpKQ0KCQkJCVRpdGxlPVVzZXJzKGkpLk5hbWUNCgkJCQlUZW1wbGF0ZVRhZ3NfQXJ0aWNsZUxpc3RfQXV0aG9yX0lEPVVzZXJzKGkpLklEDQoJCQkJSWYgSXNFbXB0eShodG1sKT1UcnVlIFRoZW4gaHRtbD1Vc2VycyhpKS5UZW1wbGF0ZQ0KCQkJCVVybCA9UGFyc2VDdXN0b21EaXJlY3RvcnlGb3JVcmwoVXNlcnMoaSkuRnVsbFJlZ2V4LFpDX1NUQVRJQ19ESVJFQ1RPUlksIiIsIiIsIiIsIiIsIiIsVXNlcnMoaSkuSUQsVXNlcnMoaSkuTmFtZSxVc2VycyhpKS5TdGF0aWNOYW1lKQ0KCQkJCU1peFVybD1QYXJzZUN1c3RvbURpcmVjdG9yeUZvclVybCgieyVob3N0JX0vY2F0YWxvZy5hc3A/YXV0aD17JWlkJX0iLFpDX1NUQVRJQ19ESVJFQ1RPUlksIiIsIiIsIiIsIiIsIiIsVXNlcnMoaSkuSUQsVXNlcnMoaSkuTmFtZSxVc2VycyhpKS5TdGF0aWNOYW1lKQ0KCQkJRW5kIElmDQoJCUVuZCBpZg0KCQlJZiBJc0RhdGUoZHRtRGF0ZSkgVGhlbg0KDQoJCQlMaXN0VHlwZT0iREFURSINCg0KCQkJRGltIHkNCgkJCURpbSBtDQoJCQlEaW0gZA0KCQkJRGltIG55DQoJCQlEaW0gbm0NCg0KCQkJeT1ZZWFyKGR0bURhdGUpDQoJCQltPU1vbnRoKGR0bURhdGUpDQoJCQlkPURheShkdG1EYXRlKQ0KDQoJCQlJZiBOb3QgTGVuKENTdHIoZHRtRGF0ZSkpPjcgVGhlbg0KCQkJCWQ9IiINCgkJCUVuZCBJZg0KDQoJCQlVcmwgPVVybGJ5RGF0ZSh5LG0sZCkNCgkJCU1peFVybCA9VXJsYnlEYXRlQXV0byh5LG0sZCkNCg0KCQkJVGVtcGxhdGVUYWdzX0FydGljbGVMaXN0X0RhdGVfU2hvcnREYXRlPWR0bURhdGUNCgkJCVRlbXBsYXRlVGFnc19BcnRpY2xlTGlzdF9EYXRlX1llYXI9eQ0KCQkJVGVtcGxhdGVUYWdzX0FydGljbGVMaXN0X0RhdGVfTW9udGg9bQ0KCQkJVGVtcGxhdGVUYWdzX0FydGljbGVMaXN0X0RhdGVfRGF5PWQNCg0KCQkJbnk9eQ0KCQkJbm09bSsxDQoJCQlJZiBtPTEyIFRoZW4gbnk9bnkrMTpubT0xDQoNCgkJCUlmIExlbihDU3RyKGR0bURhdGUpKT43IFRoZW4NCgkJCQlvYmpSUy5Tb3VyY2U9b2JqUlMuU291cmNlICYgIkFORChZZWFyKFtsb2dfUG9zdFRpbWVdKT0iJnkmIikgQU5EKE1vbnRoKFtsb2dfUG9zdFRpbWVdKT0iJm0mIikgQU5EKERheShbbG9nX1Bvc3RUaW1lXSk9IiZkJiIpIg0KCQkJRWxzZQ0KCQkJCW9ialJTLlNvdXJjZT1vYmpSUy5Tb3VyY2UgJiAiQU5EKFllYXIoW2xvZ19Qb3N0VGltZV0pPSImeSYiKSBBTkQoTW9udGgoW2xvZ19Qb3N0VGltZV0pPSImbSYiKSINCgkJCUVuZCBJZg0KDQoJCQlUZW1wbGF0ZV9DYWxlbmRhcj0iPHNjcmlwdCBzcmM9IiI8I1pDX0JMT0dfSE9TVCM+emJfc3lzdGVtL2Z1bmN0aW9uL2NfaHRtbF9qcy5hc3A/ZGF0ZT0iJmR0bURhdGUmIiIiIHR5cGU9IiJ0ZXh0L2phdmFzY3JpcHQiIj48L3NjcmlwdD4iDQoNCgkJCUlmIElzRW1wdHkoaHRtbCk9VHJ1ZSBUaGVuIGh0bWw9R2V0VGVtcGxhdGUoIlRFTVBMQVRFX0NBVEFMT0ciKQ0KDQoJCQlUaXRsZT1ZZWFyKGR0bURhdGUpICYgIiAiICYgWlZBX01vbnRoKE1vbnRoKGR0bURhdGUpKSAmIElJRihMZW4oQ1N0cihkdG1EYXRlKSk+NywiICIgJiBEYXkoZHRtRGF0ZSksIiIpDQoJCUVuZCBJZg0KCQlJZiBhbnlUYWc8PiIiIFRoZW4NCg0KCQkJTGlzdFR5cGU9IlRBR1MiDQoNCgkJCUlmIEluU3RyKFpDX1RBR1NfUkVHRVgsInslaWQlfSIpPjAgVGhlbg0KCQkJCWk9Q0xuZyhhbnlUYWcpDQoJCQlFbHNlDQoJCQkJSWYgQ2hlY2tUYWdCeU5hbWUoYW55VGFnKSBUaGVuIGk9R2V0VGFnQnlOYW1lKGFueVRhZykNCgkJCUVuZCBJZg0KCQkJb2JqUlMuU291cmNlPW9ialJTLlNvdXJjZSAmICJBTkQoW2xvZ19UYWddIExJS0UgJyV7IiAmIGkgJiAifSUnKSINCg0KCQkJaW50VGFnPWkNCg0KCQkJSWYgQ2hlY2tUYWdCeUlEKGkpIFRoZW4NCgkJCQlDYWxsIEdldFRhZ3NieVRhZ0lETGlzdCgieyImaSYifSIpDQoNCgkJCQlUaXRsZT1UYWdzKGkpLk5hbWUNCgkJCQlUZW1wbGF0ZVRhZ3NfQXJ0aWNsZUxpc3RfVGFnc19JRD1UYWdzKGkpLklEDQoJCQkJSWYgSXNFbXB0eShodG1sKT1UcnVlIFRoZW4gaHRtbD1UYWdzKGkpLlRlbXBsYXRlDQoJCQkJVXJsID1QYXJzZUN1c3RvbURpcmVjdG9yeUZvclVybChUYWdzKGkpLkZ1bGxSZWdleCxaQ19TVEFUSUNfRElSRUNUT1JZLCIiLCIiLCIiLCIiLCIiLFRhZ3MoaSkuSUQsVGFncyhpKS5OYW1lLFRhZ3MoaSkuRW5jb2RlTmFtZSkNCgkJCQlNaXhVcmwgPVBhcnNlQ3VzdG9tRGlyZWN0b3J5Rm9yVXJsKCJ7JWhvc3QlfS9jYXRhbG9nLmFzcD90YWdzPXslYWxpYXMlfSIsWkNfU1RBVElDX0RJUkVDVE9SWSwiIiwiIiwiIiwiIiwiIixUYWdzKGkpLklELFRhZ3MoaSkuTmFtZSxUYWdzKGkpLkVuY29kZU5hbWUpDQoJCQlFbmQgSWYNCgkJRW5kIElmDQoNCg0KCQlJZiBMaXN0VHlwZT0iREVGQVVMVCIgVGhlbiBvYmpSUy5Tb3VyY2U9b2JqUlMuU291cmNlICYgIiBBTkQgKFtsb2dfSXN0b3BdPTApICINCg0KDQoJCW9ialJTLlNvdXJjZT1vYmpSUy5Tb3VyY2UgJiAiT1JERVIgQlkgW2xvZ19Qb3N0VGltZV0gREVTQyxbbG9nX0lEXSBERVNDIg0KCQlvYmpSUy5PcGVuKCkNCg0KCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoJCQlvYmpSUy5QYWdlU2l6ZSA9IFpDX0RJU1BMQVlfQ09VTlQNCgkJCWludFBhZ2VDb3VudD1vYmpSUy5QYWdlQ291bnQNCgkJCW9ialJTLkFic29sdXRlUGFnZSA9IGludFBhZ2UNCg0KCQkJRm9yIGkgPSAxIFRvIG9ialJTLlBhZ2VTaXplDQoNCgkJCQlJZiBpbnRQYWdlPmludFBhZ2VDb3VudCBUaGVuIEV4aXQgRm9yDQoNCgkJCQlTZXQgb2JqQXJ0aWNsZT1OZXcgVEFydGljbGUNCgkJCQlJZiBvYmpBcnRpY2xlLkxvYWRJbmZvQnlBcnJheShBcnJheShvYmpSUygwKSxvYmpSUygxKSxvYmpSUygyKSxvYmpSUygzKSxvYmpSUyg0KSxvYmpSUyg1KSxvYmpSUyg2KSxvYmpSUyg3KSxvYmpSUyg4KSxvYmpSUyg5KSxvYmpSUygxMCksb2JqUlMoMTEpLG9ialJTKDEyKSxvYmpSUygxMyksb2JqUlMoMTQpLG9ialJTKDE1KSxvYmpSUygxNiksb2JqUlMoMTcpKSkgVGhlbg0KCQkJCQl1ZD11ZCAmICIsIiAmIG9ialJzKDcpDQoJCQkJCXRkPXRkICYgb2JqUnMoMSkNCgkJCQkJZGQuQWRkIENMbmcob2JqUnMoMCkpLCBvYmpBcnRpY2xlDQoJCQkJRW5kIElmDQoJCQkJU2V0IG9iakFydGljbGU9Tm90aGluZw0KDQoJCQkJb2JqUlMuTW92ZU5leHQNCgkJCQlJZiBvYmpSUy5FT0YgVGhlbiBFeGl0IEZvcg0KDQoJCQlOZXh0DQoNCgkJRW5kIElmDQoNCgkJb2JqUlMuQ2xvc2UoKQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoNCgkJSWYgSXNFbXB0eShodG1sKT1UcnVlIFRoZW4NCgkJCUlmIGludFBhZ2U+MSBBbmQgWkNfREVGQVVMVF9QQUdFU19URU1QTEFURTw+IiIgVGhlbg0KCQkJCWh0bWw9R2V0VGVtcGxhdGUoIlRFTVBMQVRFXyIgJiBaQ19ERUZBVUxUX1BBR0VTX1RFTVBMQVRFKQ0KCQkJRWxzZQ0KCQkJCWh0bWw9VGVtcGxhdGUNCgkJCUVuZCBJZg0KCQlFbmQgSWYNCg0KCQlDYWxsIEdldFRhZ3NieVRhZ0lETGlzdCh0dCAmIHRkKQ0KDQoJCUNhbGwgR2V0VXNlcnNieVVzZXJJRExpc3QodXQgJiAiLCIgJiB1ZCkNCg0KDQoNCgkJUmVEaW0gYXJ5QXJ0aWNsZUxpc3QoLTEpDQoJCUZvciBpPTAgVG8gZHQuQ291bnQtMQ0KCQkJaj1kdC5LZXlzDQoJCQlSZURpbSBQcmVzZXJ2ZSBhcnlBcnRpY2xlTGlzdChpKQ0KCQkJU2V0IG9iakFydGljbGU9ZHQuSXRlbShqKGkpKQ0KCQkJb2JqQXJ0aWNsZS5odG1sPWh0bWwNCgkJCUlmIG9iakFydGljbGUuRXhwb3J0KFpDX0RJU1BMQVlfTU9ERV9PTlRPUCk9IFRydWUgVGhlbg0KCQkJCWFyeUFydGljbGVMaXN0KGkpPW9iakFydGljbGUuc3ViaHRtbA0KCQkJRW5kIElmDQoJCU5leHQNCgkJVGVtcGxhdGVfQXJ0aWNsZV9Jc3RvcD1Kb2luKGFyeUFydGljbGVMaXN0KQ0KDQoNCg0KCQlSZURpbSBhcnlBcnRpY2xlTGlzdCgtMSkNCgkJSWYgZGQuQ291bnQ+MCBUSGVuDQoJCQlGb3IgaT0wIFRvIGRkLkNvdW50LTENCgkJCQlqPWRkLktleXMNCgkJCQlSZURpbSBQcmVzZXJ2ZSBhcnlBcnRpY2xlTGlzdChpKQ0KCQkJCVNldCBvYmpBcnRpY2xlPWRkLkl0ZW0oaihpKSkNCgkJCQlvYmpBcnRpY2xlLmh0bWw9aHRtbA0KCQkJCUlmIG9iakFydGljbGUuRXhwb3J0KGludFR5cGUpPSBUcnVlIFRoZW4NCgkJCQkJYXJ5QXJ0aWNsZUxpc3QoaSk9b2JqQXJ0aWNsZS5zdWJodG1sDQoJCQkJRW5kIElmDQoJCQkJc3ViaHRtbF9UZW1wbGF0ZU5hbWU9b2JqQXJ0aWNsZS5zdWJodG1sX1RlbXBsYXRlTmFtZQ0KCQkJTmV4dA0KCQlFbHNlDQoJCQlEaW0gUkUgLE1hdGNoLE1hdGNoZXMNCgkJCVNldCBSRSA9IE5ldyBSZWdFeHAgDQoJCQkJUkUuUGF0dGVybiA9ICJcPFwjdGVtcGxhdGVcOihhcnRpY2xlXC0oW2EtejAtOV0qKShbXC1hLXowLTldKikpXCNcPiINCgkJCQlSRS5JZ25vcmVDYXNlID0gVHJ1ZSANCgkJCQlSRS5HbG9iYWwgPSBUcnVlIA0KCQkJCVNldCBNYXRjaGVzID0gUkUuRXhlY3V0ZShodG1sKSANCgkJCQlGb3IgRWFjaCBNYXRjaCBpbiBNYXRjaGVzDQoJCQkJCUlmIElzRW1wdHkoc3ViaHRtbF9UZW1wbGF0ZU5hbWUpIFRoZW4gc3ViaHRtbF9UZW1wbGF0ZU5hbWU9InRlbXBsYXRlOiImTWF0Y2guU3ViTWF0Y2hlcygwKSYiIg0KCQkJCQlFeGl0IEZvcg0KCQkJCU5leHQNCgkJCQlTZXQgTWF0Y2hlcyA9IE5vdGhpbmcNCgkJCVNldCBSRSA9IE5vdGhpbmcNCgkJRW5kIElmDQoJCXN1Ymh0bWw9Sm9pbihhcnlBcnRpY2xlTGlzdCkNCg0KDQoJCUlmIExpc3RUeXBlPSJERUZBVUxUIiBUaGVuIHN1Ymh0bWw9VGVtcGxhdGVfQXJ0aWNsZV9Jc3RvcCAmIHN1Ymh0bWwNCg0KDQoJCVRlbXBsYXRlVGFnc19BcnRpY2xlTGlzdF9QYWdlX05vdz1pbnRQYWdlDQoJCVRlbXBsYXRlVGFnc19BcnRpY2xlTGlzdF9QYWdlX0FsbD1pbnRQYWdlQ291bnQNCg0KDQoJCUNhbGwgRXhwb3J0QmFyKGludFBhZ2UsaW50UGFnZUNvdW50KQ0KDQoNCgkJRGltIGFyeVRlbXBsYXRlU3ViTmFtZSgpDQoJCURpbSBhcnlUZW1wbGF0ZVN1YlZhbHVlKCkNCg0KDQoJCVJlRGltIGFyeVRlbXBsYXRlU3ViTmFtZSggMzkpDQoJCVJlRGltIGFyeVRlbXBsYXRlU3ViVmFsdWUoMzkpDQoNCgkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAgMSk9c3ViaHRtbF9UZW1wbGF0ZU5hbWUNCgkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSggMSk9c3ViaHRtbA0KCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoICAyKT0idGVtcGxhdGU6cGFnZWJhciINCgkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSggMik9VHJhbnNmZXJIVE1MKFRlbXBsYXRlX1BhZ2VCYXIsIlthbnRpLXpjX2Jsb2dfaG9zdF0iKQ0KCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoICAzKT0idGVtcGxhdGU6cGFnZWJhcl9uZXh0Ig0KCQlhcnlUZW1wbGF0ZVN1YlZhbHVlKCAzKT1UcmFuc2ZlckhUTUwoVGVtcGxhdGVfUGFnZUJhcl9OZXh0LCJbYW50aS16Y19ibG9nX2hvc3RdIikNCgkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAgNCk9InRlbXBsYXRlOnBhZ2ViYXJfcHJldmlvdXMiDQoJCWFyeVRlbXBsYXRlU3ViVmFsdWUoIDQpPVRyYW5zZmVySFRNTChUZW1wbGF0ZV9QYWdlQmFyX1ByZXZpb3VzLCJbYW50aS16Y19ibG9nX2hvc3RdIikNCg0KCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoICA2KT0iYXJ0aWNsZWxpc3QvZGF0ZS95ZWFyIg0KCQlhcnlUZW1wbGF0ZVN1YlZhbHVlKCA2KT1UZW1wbGF0ZVRhZ3NfQXJ0aWNsZUxpc3RfRGF0ZV9ZZWFyDQoJCWFyeVRlbXBsYXRlU3ViTmFtZSggIDcpPSJhcnRpY2xlbGlzdC9kYXRlL21vbnRoIg0KCQlhcnlUZW1wbGF0ZVN1YlZhbHVlKCA3KT1UZW1wbGF0ZVRhZ3NfQXJ0aWNsZUxpc3RfRGF0ZV9Nb250aA0KCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoICA5KT0iYXJ0aWNsZWxpc3QvZGF0ZS9kYXkiDQoJCWFyeVRlbXBsYXRlU3ViVmFsdWUoIDkpPVRlbXBsYXRlVGFnc19BcnRpY2xlTGlzdF9EYXRlX0RheQ0KCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDEwKT0iYXJ0aWNsZWxpc3QvZGF0ZS9zaG9ydGRhdGUiDQoJCWFyeVRlbXBsYXRlU3ViVmFsdWUoMTApPVRlbXBsYXRlVGFnc19BcnRpY2xlTGlzdF9EYXRlX1Nob3J0RGF0ZQ0KCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDExKT0iYXJ0aWNsZWxpc3QvcGFnZS9ub3ciDQoJCWFyeVRlbXBsYXRlU3ViVmFsdWUoMTEpPVRlbXBsYXRlVGFnc19BcnRpY2xlTGlzdF9QYWdlX05vdw0KCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDEyKT0iYXJ0aWNsZWxpc3QvcGFnZS9hbGwiDQoJCWFyeVRlbXBsYXRlU3ViVmFsdWUoMTIpPVRlbXBsYXRlVGFnc19BcnRpY2xlTGlzdF9QYWdlX0FsbA0KCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDEzKT0iYXJ0aWNsZWxpc3QvcGFnZS9jb3VudCINCgkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgxMyk9WkNfRElTUExBWV9DT1VOVA0KDQoNCg0KCQkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAxNCk9ImFydGljbGVsaXN0L2NhdGVnb3J5L2lkIg0KCQkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAxNSk9ImFydGljbGVsaXN0L2NhdGVnb3J5L25hbWUiDQoJCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDE2KT0iYXJ0aWNsZWxpc3QvY2F0ZWdvcnkvb3JkZXIiDQoJCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDE3KT0iYXJ0aWNsZWxpc3QvY2F0ZWdvcnkvY291bnQiDQoJCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDE4KT0iYXJ0aWNsZWxpc3QvY2F0ZWdvcnkvdXJsIg0KCQkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAxOSk9ImFydGljbGVsaXN0L2NhdGVnb3J5L3N0YXRpY25hbWUiDQoNCg0KCQlJZiBMaXN0VHlwZT0iQ0FURUdPUlkiIFRoZW4NCgkJCWFyeVRlbXBsYXRlU3ViVmFsdWUoMTQpPUNhdGVnb3J5cyhpbnRDYXRlKS5JRA0KCQkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgxNSk9Q2F0ZWdvcnlzKGludENhdGUpLkh0bWxOYW1lDQoJCQlhcnlUZW1wbGF0ZVN1YlZhbHVlKDE2KT1DYXRlZ29yeXMoaW50Q2F0ZSkuT3JkZXINCgkJCWFyeVRlbXBsYXRlU3ViVmFsdWUoMTcpPUNhdGVnb3J5cyhpbnRDYXRlKS5Db3VudA0KCQkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgxOCk9VHJhbnNmZXJIVE1MKENhdGVnb3J5cyhpbnRDYXRlKS5IdG1sVXJsLCJbYW50aS16Y19ibG9nX2hvc3RdIikNCgkJCWFyeVRlbXBsYXRlU3ViVmFsdWUoMTkpPUNhdGVnb3J5cyhpbnRDYXRlKS5TdGF0aWNOYW1lDQoJCUVuZCBJZg0KDQoJCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDIwKT0iYXJ0aWNsZWxpc3QvYXV0aG9yL2lkIg0KCQkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAyMSk9ImFydGljbGVsaXN0L2F1dGhvci9uYW1lIg0KCQkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAyMik9ImFydGljbGVsaXN0L2F1dGhvci9sZXZlbCINCgkJCWFyeVRlbXBsYXRlU3ViTmFtZSggMjMpPSJhcnRpY2xlbGlzdC9hdXRob3IvZW1haWwiDQoJCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDI0KT0iYXJ0aWNsZWxpc3QvYXV0aG9yL2hvbWVwYWdlIg0KCQkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAyNSk9ImFydGljbGVsaXN0L2F1dGhvci9jb3VudCINCgkJCWFyeVRlbXBsYXRlU3ViTmFtZSggMjYpPSJhcnRpY2xlbGlzdC9hdXRob3IvdXJsIg0KCQkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAyNyk9ImFydGljbGVsaXN0L2F1dGhvci9zdGF0aWNuYW1lIg0KCQkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAyOCk9ImFydGljbGVsaXN0L2F1dGhvci9pbnRybyINCg0KDQoJCUlmIExpc3RUeXBlPSJVU0VSIiBUaGVuDQoJCQlhcnlUZW1wbGF0ZVN1YlZhbHVlKDIwKT1Vc2VycyhpbnRBdXRob3IpLklEDQoJCQlhcnlUZW1wbGF0ZVN1YlZhbHVlKDIxKT1Vc2VycyhpbnRBdXRob3IpLkZpcnN0TmFtZQ0KCQkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgyMik9WlZBX1VzZXJfTGV2ZWxfTmFtZShVc2VycyhpbnRBdXRob3IpLkxldmVsKQ0KCQkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgyMyk9VXNlcnMoaW50QXV0aG9yKS5FbWFpbA0KCQkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgyNCk9VXNlcnMoaW50QXV0aG9yKS5Ib21lUGFnZQ0KCQkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgyNSk9VXNlcnMoaW50QXV0aG9yKS5Db3VudA0KCQkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgyNik9VHJhbnNmZXJIVE1MKFVzZXJzKGludEF1dGhvcikuSHRtbFVybCwiW2FudGktemNfYmxvZ19ob3N0XSIpDQoJCQlhcnlUZW1wbGF0ZVN1YlZhbHVlKDI3KT1Vc2VycyhpbnRBdXRob3IpLlN0YXRpY05hbWUNCgkJCWFyeVRlbXBsYXRlU3ViVmFsdWUoMjgpPVVzZXJzKGludEF1dGhvcikuSW50cm8NCgkJRW5kIElmDQoNCgkJCWFyeVRlbXBsYXRlU3ViTmFtZSggMjkpPSJhcnRpY2xlbGlzdC90YWcvaWQiDQoJCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDMwKT0iYXJ0aWNsZWxpc3QvdGFnL25hbWUiDQoJCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDMxKT0iYXJ0aWNsZWxpc3QvdGFnL2ludHJvIg0KCQkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAzMik9ImFydGljbGVsaXN0L3RhZy9jb3VudCINCgkJCWFyeVRlbXBsYXRlU3ViTmFtZSggMzMpPSJhcnRpY2xlbGlzdC90YWcvdXJsIg0KCQkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAzNCk9ImFydGljbGVsaXN0L3RhZy9lbmNvZGVuYW1lIg0KDQoJCUlmIExpc3RUeXBlPSJUQUdTIiBUaGVuDQoJCQlhcnlUZW1wbGF0ZVN1YlZhbHVlKDI5KT1UYWdzKGludFRhZykuSUQNCgkJCWFyeVRlbXBsYXRlU3ViVmFsdWUoMzApPVRhZ3MoaW50VGFnKS5IdG1sTmFtZQ0KCQkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgzMSk9VGFncyhpbnRUYWcpLkh0bWxJbnRybw0KCQkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgzMik9VGFncyhpbnRUYWcpLkNvdW50DQoJCQlhcnlUZW1wbGF0ZVN1YlZhbHVlKDMzKT1UYWdzKGludFRhZykuSHRtbFVybA0KCQkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgzNCk9VGFncyhpbnRUYWcpLkVuY29kZU5hbWUNCgkJRW5kIElmDQoNCgkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAzNSk9InRlbXBsYXRlOnNpZGViYXIiDQoJCWFyeVRlbXBsYXRlU3ViVmFsdWUoMzUpPUdldFRlbXBsYXRlKCJDQUNIRV9TSURFQkFSIikNCgkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAzNik9InRlbXBsYXRlOnNpZGViYXIyIg0KCQlhcnlUZW1wbGF0ZVN1YlZhbHVlKDM2KT1HZXRUZW1wbGF0ZSgiQ0FDSEVfU0lERUJBUjIiKQ0KCQlhcnlUZW1wbGF0ZVN1Yk5hbWUoIDM3KT0idGVtcGxhdGU6c2lkZWJhcjMiDQoJCWFyeVRlbXBsYXRlU3ViVmFsdWUoMzcpPUdldFRlbXBsYXRlKCJDQUNIRV9TSURFQkFSMyIpDQoJCWFyeVRlbXBsYXRlU3ViTmFtZSggMzgpPSJ0ZW1wbGF0ZTpzaWRlYmFyNCINCgkJYXJ5VGVtcGxhdGVTdWJWYWx1ZSgzOCk9R2V0VGVtcGxhdGUoIkNBQ0hFX1NJREVCQVI0IikNCgkJYXJ5VGVtcGxhdGVTdWJOYW1lKCAzOSk9InRlbXBsYXRlOnNpZGViYXI1Ig0KCQlhcnlUZW1wbGF0ZVN1YlZhbHVlKDM5KT1HZXRUZW1wbGF0ZSgiQ0FDSEVfU0lERUJBUjUiKQ0KDQoNCgkJJ3BsdWdpbiBub2RlDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UQXJ0aWNsZUxpc3RfRXhwb3J0X1RlbXBsYXRlVGFncyhhcnlUZW1wbGF0ZVN1Yk5hbWUsYXJ5VGVtcGxhdGVTdWJWYWx1ZSkNCg0KCQlqPVVCb3VuZChhcnlUZW1wbGF0ZVN1Yk5hbWUpDQoJCUZvciBpPTAgdG8gag0KCQkJaHRtbD1SZXBsYWNlKGh0bWwsIjwjIiAmIGFyeVRlbXBsYXRlU3ViTmFtZShpKSAmICIjPiIsYXJ5VGVtcGxhdGVTdWJWYWx1ZShpKSkNCgkJTmV4dA0KDQoNCg0KCQlEaW0gZGENCgkJU2V0IGRhPUNyZWF0ZU9iamVjdCgiU2NyaXB0aW5nLkRpY3Rpb25hcnkiKQ0KDQoJCVNldCBSRSA9IE5ldyBSZWdFeHAgDQoJCQlSRS5QYXR0ZXJuID0gIjwjYXJ0aWNsZWxpc3QvKChjYXRlZ29yeS9tZXRhfGF1dGhvci9tZXRhKS8oW2EtejAtOV9dezEsfSkpIz4iDQoJCQlSRS5JZ25vcmVDYXNlID0gVHJ1ZSANCgkJCVJFLkdsb2JhbCA9IFRydWUgDQoJCQlTZXQgTWF0Y2hlcyA9IFJFLkV4ZWN1dGUoaHRtbCkgDQoJCQlGb3IgRWFjaCBNYXRjaCBpbiBNYXRjaGVzDQoJCQkJcz1NYXRjaC5TdWJNYXRjaGVzKDApDQoJCQkJSWYgZGEuRXhpc3RzKHMpPUZhbHNlIFRoZW4gZGEuYWRkIHMscw0KCQkJTmV4dA0KCQkJU2V0IE1hdGNoZXMgPSBOb3RoaW5nDQoJCVNldCBSRSA9IE5vdGhpbmcNCg0KCQlzPWRhLkl0ZW1zDQoJCUZvciB0ID0gMCBUbyBkYS5Db3VudCAtMQ0KCQkJSWYgSW5TdHIocyh0KSwiY2F0ZWdvcnkvbWV0YS8iKT4wIFRoZW4NCgkJCQlzKHQpPVJlcGxhY2Uocyh0KSwiY2F0ZWdvcnkvbWV0YS8iLCIiKQ0KCQkJCUlmIExpc3RUeXBlPSJDQVRFR09SWSIgVGhlbg0KCQkJCQlodG1sID0gUmVwbGFjZShodG1sLCI8I2FydGljbGVsaXN0L2NhdGVnb3J5L21ldGEvIiAmIHModCkgJiAiIz4iLENhdGVnb3J5cyhpbnRDYXRlKS5NZXRhLkdldFZhbHVlKHModCkpICkNCgkJCQlFbHNlDQoJCQkJCWh0bWwgPSBSZXBsYWNlKGh0bWwsIjwjYXJ0aWNsZWxpc3QvY2F0ZWdvcnkvbWV0YS8iICYgcyh0KSAmICIjPiIsIiIpDQoJCQkJRW5kIElmDQoJCQlFbHNlSWYgSW5TdHIocyh0KSwiYXV0aG9yL21ldGEvIik+MCBUaGVuIA0KCQkJCXModCk9UmVwbGFjZShzKHQpLCJhdXRob3IvbWV0YS8iLCIiKQ0KCQkJCUlmIExpc3RUeXBlPSJVU0VSIiBUaGVuDQoJCQkJCWh0bWwgPSBSZXBsYWNlKGh0bWwsIjwjYXJ0aWNsZWxpc3QvYXV0aG9yL21ldGEvIiAmIHModCkgJiAiIz4iLFVzZXJzKGludEF1dGhvcikuTWV0YS5HZXRWYWx1ZShzKHQpKSApDQoJCQkJRWxzZQ0KCQkJCQlodG1sID0gUmVwbGFjZShodG1sLCI8I2FydGljbGVsaXN0L2F1dGhvci9tZXRhLyIgJiBzKHQpICYgIiM+IiwiIikNCgkJCQlFbmQgSWYNCgkJCUVuZCBJZg0KCQlOZXh0DQoNCgkJVXJsPVJlcGxhY2UoUmVwbGFjZShVcmwsIi8vIiwiLyIpLCI6LyIsIjovLyIsMSwxKQ0KDQoJCUV4cG9ydD1UcnVlDQoNCgkJJ3BsdWdpbiBub2RlDQoJCWJBY3Rpb25fUGx1Z2luX1RBcnRpY2xlTGlzdF9FeHBvcnRfRW5kPUZhbHNlDQoJCUZvciBFYWNoIHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlTGlzdF9FeHBvcnRfRW5kIGluIEFjdGlvbl9QbHVnaW5fVEFydGljbGVMaXN0X0V4cG9ydF9FbmQNCgkJCUlmIE5vdCBJc0VtcHR5KHNBY3Rpb25fUGx1Z2luX1RBcnRpY2xlTGlzdF9FeHBvcnRfRW5kKSBUaGVuIENhbGwgRXhlY3V0ZShzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZUxpc3RfRXhwb3J0X0VuZCkNCgkJCUlmIGJBY3Rpb25fUGx1Z2luX1RBcnRpY2xlTGlzdF9FeHBvcnRfRW5kPVRydWUgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCU5leHQNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBCdWlsZCgpDQoNCgkJRGltIGksag0KDQoJCSdwbHVnaW4gbm9kZQ0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVEFydGljbGVMaXN0X0J1aWxkX1RlbXBsYXRlKGh0bWwpDQoNCgkJRGltIGFyeVRlbXBsYXRlVGFnc05hbWUNCgkJRGltIGFyeVRlbXBsYXRlVGFnc1ZhbHVlDQoNCgkJVGVtcGxhdGVUYWdzRGljLkl0ZW0oIkJsb2dUaXRsZSIpPUh0bWxUaXRsZQ0KCQlUZW1wbGF0ZVRhZ3NEaWMuSXRlbSgiWkNfQkxPR19IT1NUIik9QmxvZ0hvc3QNCg0KCQlJZiBUZW1wbGF0ZV9DYWxlbmRhcj0iIiBUaGVuIFRlbXBsYXRlX0NhbGVuZGFyPSI8c2NyaXB0IHNyYz0iIjwjWkNfQkxPR19IT1NUIz56Yl9zeXN0ZW0vZnVuY3Rpb24vY19odG1sX2pzLmFzcD9kYXRlPW5vdyIiIHR5cGU9IiJ0ZXh0L2phdmFzY3JpcHQiIj48L3NjcmlwdD4iDQoNCgkJSWYgWkNfTVVMVElfRE9NQUlOX1NVUFBPUlQ9VHJ1ZSBBbmQgWkNfUEVSTUFORU5UX0RPTUFJTl9FTkFCTEU9RmFsc2UgVGhlbg0KCQkJRGltIHgseQ0KCQkJeD1DU3RyKFJlcGxhY2UoVXJsLEJsb2dIb3N0LCIiKSkNCgkJCXg9UmVwbGFjZSh4LCIvLy8vLyIsIi8iKTp4PVJlcGxhY2UoeCwiLy8vLyIsIi8iKTp4PVJlcGxhY2UoeCwiLy8vIiwiLyIpOng9UmVwbGFjZSh4LCIvLyIsIi8iKQ0KCQkJRm9yIGk9MSBUbyBVQm91bmQoU3BsaXQoeCwiLyIpKQ0KCQkJCXk9eSAmICIuLi8iDQoJCQlOZXh0DQoJCQlJZiB5PSIiIFRoZW4geT0iLi8iDQoJCQlUZW1wbGF0ZVRhZ3NEaWMuSXRlbSgiWkNfQkxPR19IT1NUIik9eQ0KCQlFbmQgSWYNCg0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lPVRlbXBsYXRlVGFnc0RpYy5LZXlzDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlPVRlbXBsYXRlVGFnc0RpYy5JdGVtcw0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UQXJ0aWNsZUxpc3RfQnVpbGRfVGVtcGxhdGVUYWdzKGFyeVRlbXBsYXRlVGFnc05hbWUsYXJ5VGVtcGxhdGVUYWdzVmFsdWUpDQoNCgkJRGltIHMsdA0KCQlqPVVCb3VuZChhcnlUZW1wbGF0ZVRhZ3NOYW1lKQ0KCQlGb3IgaT0xIHRvIGoNCgkJCUlmIChJblN0cihhcnlUZW1wbGF0ZVRhZ3NOYW1lKGkpLCJDQUNIRV9JTkNMVURFXyIpPjApIEFuZCAoUmlnaHQoYXJ5VGVtcGxhdGVUYWdzTmFtZShpKSw1KTw+Il9IVE1MIikgQW5kIChSaWdodChhcnlUZW1wbGF0ZVRhZ3NOYW1lKGkpLDMpPD4iX0pTIikgVGhlbg0KCQkJCXM9cyAmIGFyeVRlbXBsYXRlVGFnc05hbWUoaSkgJiAifCINCgkJCUVuZCBJZg0KCQkJSWYgKCI8IyIgJiBhcnlUZW1wbGF0ZVRhZ3NOYW1lKGkpICYgIiM+Ij0iPCNDQUNIRV9JTkNMVURFX0NBTEVOREFSIz4iKSBPciAoIjwjIiAmIGFyeVRlbXBsYXRlVGFnc05hbWUoaSkgJiAiIz4iPSI8I0NBQ0hFX0lOQ0xVREVfQ0FMRU5EQVJfSlMjPiIpIE9yICgiPCMiICYgYXJ5VGVtcGxhdGVUYWdzTmFtZShpKSAmICIjPiI9IjwjQ0FDSEVfSU5DTFVERV9DQUxFTkRBUl9OT1cjPiIpIFRoZW4NCgkJCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZShpKT1UZW1wbGF0ZV9DYWxlbmRhcg0KCQkJRW5kIElmDQoJCU5leHQNCg0KCQlJZiBJc0R5bmFtaWNMb2FkU2lsZGJhcj1UcnVlIFRoZW4NCgkJCUZvciBFYWNoIHQgSW4gU3BsaXQocywifCIpDQoJCQkJSWYgdD0iIiBUaGVuIEV4aXQgRm9yDQoJCQkJSWYgdDw+IkNBQ0hFX0lOQ0xVREVfTkFWQkFSIiBUaGVuDQoJCQkJCWh0bWw9UmVwbGFjZShodG1sLCI8IyImdCYiIz4iLCI8IyImdCYiX0pTIz4iKQ0KCQkJCUVuZCBJZg0KCQkJTmV4dA0KCQlFbmQgSWYNCg0KCQlqPVVCb3VuZChhcnlUZW1wbGF0ZVRhZ3NOYW1lKQ0KCQlGb3IgaT0xIHRvIGoNCgkJCWh0bWw9UmVwbGFjZShodG1sLCI8IyIgJiBhcnlUZW1wbGF0ZVRhZ3NOYW1lKGkpICYgIiM+IixhcnlUZW1wbGF0ZVRhZ3NWYWx1ZShpKSkNCgkJTmV4dA0KCQlodG1sPVJlcGxhY2UoaHRtbCwiPCMiICYgYXJ5VGVtcGxhdGVUYWdzTmFtZSgwKSAmICIjPiIsYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMCkpDQoNCgkJJ3BsdWdpbiBub2RlDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UQXJ0aWNsZUxpc3RfQnVpbGRfVGVtcGxhdGVfU3VjY2VlZChodG1sKQ0KDQoJCUJ1aWxkPVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gRXhwb3J0QmFyKGludE5vd1BhZ2UsaW50QWxsUGFnZSkNCg0KCQkncGx1Z2luIG5vZGUNCgkJYkFjdGlvbl9QbHVnaW5fVEFydGljbGVMaXN0X0V4cG9ydEJhcl9CZWdpbj1GYWxzZQ0KCQlGb3IgRWFjaCBzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZUxpc3RfRXhwb3J0QmFyX0JlZ2luIGluIEFjdGlvbl9QbHVnaW5fVEFydGljbGVMaXN0X0V4cG9ydEJhcl9CZWdpbg0KCQkJSWYgTm90IElzRW1wdHkoc0FjdGlvbl9QbHVnaW5fVEFydGljbGVMaXN0X0V4cG9ydEJhcl9CZWdpbikgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fVEFydGljbGVMaXN0X0V4cG9ydEJhcl9CZWdpbikNCgkJCUlmIGJBY3Rpb25fUGx1Z2luX1RBcnRpY2xlTGlzdF9FeHBvcnRCYXJfQmVnaW49VHJ1ZSBUaGVuIEV4aXQgRnVuY3Rpb24NCgkJTmV4dA0KDQoJCURpbSBpDQoJCURpbSBzDQoJCURpbSB0DQoJCURpbSBzdHJQYWdlQmFyDQoNCgkJdD1VcmwNCg0KCQlEaW0gUXVlcnlTcGxpdA0KCQlRdWVyeVNwbGl0PUlJZihJblN0cih0LCI/Iik+MCwiJiIsIj8iKQ0KDQoJCSdJZiBMaXN0VHlwZT0iQ0FURUdPUlkiIE9yIExpc3RUeXBlPSJVU0VSIiBPciBMaXN0VHlwZT0iREFURSIgT3IgTGlzdFR5cGU9IlRBR1MiIFRoZW4NCgkJCUlmIFpDX1NUQVRJQ19NT0RFPSJBQ1RJVkUiIFRoZW4NCgkJCQl0PXQgJiBRdWVyeVNwbGl0ICYgInBhZ2U9JW4iDQoJCQlFbmQgSWYNCgkJCUlmIFpDX1NUQVRJQ19NT0RFPSJSRVdSSVRFIiBUaGVuDQoJCQkJSWYgSW5TdHIodCwiL2RlZmF1bHQuaHRtbCIpPjAgVGhlbg0KCQkJCQlJZiBMaXN0VHlwZT0iREVGQVVMVCIgVGhlbiANCgkJCQkJCXQ9UmVwbGFjZSh0LCIvZGVmYXVsdC5odG1sIiwiL2RlZmF1bHRfJW4uaHRtbCIpDQoJCQkJCUVsc2UgDQoJCQkJCQl0PVJlcGxhY2UodCwiL2RlZmF1bHQuaHRtbCIsIl8lbi9kZWZhdWx0Lmh0bWwiKQ0KCQkJCQlFbmQgSWYgDQoJCQkJRWxzZQ0KCQkJCQl0PVJlcGxhY2UodCwiLmh0bWwiLCJfJW4uaHRtbCIpDQoJCQkJRW5kIElmDQoJCQlFbmQgSWYNCgkJCUlmIFpDX1NUQVRJQ19NT0RFPSJNSVgiIFRoZW4NCgkJCQl0PU1peFVybA0KCQkJCXQ9dCAmIFF1ZXJ5U3BsaXQgJiAicGFnZT0lbiINCgkJCUVuZCBJZg0KCQknRW5kIElmDQoNCgkJSWYgaW50QWxsUGFnZT4wIFRoZW4NCgkJCURpbSBhLGINCg0KCQkJcz1SZXBsYWNlKHQsIiVuIiwxKQ0KCQkJSWYgTGlzdFR5cGU9IkRFRkFVTFQiIFRoZW4gcz1CbG9nSG9zdA0KCQkJSWYgKExpc3RUeXBlPSJDQVRFR09SWSIgT3IgTGlzdFR5cGU9IlVTRVIiIE9yIExpc3RUeXBlPSJEQVRFIiBPciBMaXN0VHlwZT0iVEFHUyIpIFRoZW4gcz1VcmwNCgkJCUlmIFpDX1NUQVRJQ19NT0RFPSJSRVdSSVRFIiBUaGVuIHM9UmVwbGFjZShzLCIvZGVmYXVsdC5odG1sIiwiLyIpDQoNCgkJCXN0clBhZ2VCYXI9R2V0VGVtcGxhdGUoIlRFTVBMQVRFX0JfUEFHRUJBUiIpDQoJCQlzdHJQYWdlQmFyPVJlcGxhY2Uoc3RyUGFnZUJhciwiPCNwYWdlYmFyL3BhZ2UvdXJsIz4iLHMpDQoJCQlzdHJQYWdlQmFyPVJlcGxhY2Uoc3RyUGFnZUJhciwiPCNwYWdlYmFyL3BhZ2UvbnVtYmVyIz4iLCI8c3BhbiBjbGFzcz0iInBhZ2UgZmlyc3QtcGFnZSIiPiImWkNfTVNHMjM1JiI8L3NwYW4+IikNCgkJCVRlbXBsYXRlX1BhZ2VCYXI9VGVtcGxhdGVfUGFnZUJhciAmIHN0clBhZ2VCYXINCg0KCQkJSWYgaW50QWxsUGFnZT5aQ19QQUdFQkFSX0NPVU5UIFRoZW4NCgkJCQlhPWludE5vd1BhZ2UNCgkJCQliPWludE5vd1BhZ2UrWkNfUEFHRUJBUl9DT1VOVC0xDQoJCQkJSWYgYT5aQ19QQUdFQkFSX0NPVU5UIFRoZW4gYT1hLTE6Yj1iLTENCgkJCQlJZiBiPmludEFsbFBhZ2UgVGhlbiBiPWludEFsbFBhZ2U6YT1pbnRBbGxQYWdlLVpDX1BBR0VCQVJfQ09VTlQrMQ0KCQkJRWxzZQ0KCQkJCWE9MTpiPWludEFsbFBhZ2UNCgkJCUVuZCBJZg0KCQkJRm9yIGk9YSB0byBiDQoNCgkJCQlzPVJlcGxhY2UodCwiJW4iLGkpDQoJCQkJSWYgTGlzdFR5cGU9IkRFRkFVTFQiIEFuZCBpPTEgVGhlbiBzPUJsb2dIb3N0DQoJCQkJSWYgKExpc3RUeXBlPSJDQVRFR09SWSIgT3IgTGlzdFR5cGU9IlVTRVIiIE9yIExpc3RUeXBlPSJEQVRFIiBPciBMaXN0VHlwZT0iVEFHUyIpIEFuZCBpPTEgVGhlbiBzPVVybA0KCQkJCUlmIFpDX1NUQVRJQ19NT0RFPSJSRVdSSVRFIiBUaGVuIHM9UmVwbGFjZShzLCIvZGVmYXVsdC5odG1sIiwiLyIpDQoNCgkJCQlzdHJQYWdlQmFyPUdldFRlbXBsYXRlKCJURU1QTEFURV9CX1BBR0VCQVIiKQ0KCQkJCUlmIGk9aW50Tm93UGFnZSB0aGVuDQoJCQkJCVRlbXBsYXRlX1BhZ2VCYXI9VGVtcGxhdGVfUGFnZUJhciAmICI8c3BhbiBjbGFzcz0iInBhZ2Ugbm93LXBhZ2UiIj4iICYgaSAmICI8L3NwYW4+Ig0KCQkJCUVsc2UNCgkJCQkJc3RyUGFnZUJhcj1SZXBsYWNlKHN0clBhZ2VCYXIsIjwjcGFnZWJhci9wYWdlL3VybCM+IixzKQ0KCQkJCQlzdHJQYWdlQmFyPVJlcGxhY2Uoc3RyUGFnZUJhciwiPCNwYWdlYmFyL3BhZ2UvbnVtYmVyIz4iLCI8c3BhbiBjbGFzcz0iInBhZ2UiIj4iJmkmIjwvc3Bhbj4iKQ0KCQkJCQlUZW1wbGF0ZV9QYWdlQmFyPVRlbXBsYXRlX1BhZ2VCYXIgJiBzdHJQYWdlQmFyDQoJCQkJRW5kIElmDQoNCgkJCU5leHQNCg0KCQkJcz1SZXBsYWNlKHQsIiVuIixpbnRBbGxQYWdlKQ0KCQkJSWYgTGlzdFR5cGU9IkRFRkFVTFQiIEFuZCBpbnRBbGxQYWdlPTEgVGhlbiBzPUJsb2dIb3N0DQoJCQlJZiAoTGlzdFR5cGU9IkNBVEVHT1JZIiBPciBMaXN0VHlwZT0iVVNFUiIgT3IgTGlzdFR5cGU9IkRBVEUiIE9yIExpc3RUeXBlPSJUQUdTIikgQW5kIGludEFsbFBhZ2U9MSBUaGVuIHM9VXJsDQoJCQlJZiBaQ19TVEFUSUNfTU9ERT0iUkVXUklURSIgVGhlbiBzPVJlcGxhY2UocywiL2RlZmF1bHQuaHRtbCIsIi8iKQ0KDQoJCQlzdHJQYWdlQmFyPUdldFRlbXBsYXRlKCJURU1QTEFURV9CX1BBR0VCQVIiKQ0KCQkJc3RyUGFnZUJhcj1SZXBsYWNlKHN0clBhZ2VCYXIsIjwjcGFnZWJhci9wYWdlL3VybCM+IixzKQ0KCQkJc3RyUGFnZUJhcj1SZXBsYWNlKHN0clBhZ2VCYXIsIjwjcGFnZWJhci9wYWdlL251bWJlciM+IiwiPHNwYW4gY2xhc3M9IiJwYWdlIGxhc3QtcGFnZSIiPiImWkNfTVNHMjM2JiI8L3NwYW4+IikNCgkJCVRlbXBsYXRlX1BhZ2VCYXI9VGVtcGxhdGVfUGFnZUJhciAmIHN0clBhZ2VCYXINCg0KCQkJSWYgaW50Tm93UGFnZT0xIFRoZW4NCgkJCQlUZW1wbGF0ZV9QYWdlQmFyX1ByZXZpb3VzPSIiDQoJCQlFbHNlDQoJCQkJcz1SZXBsYWNlKHQsIiVuIixpbnROb3dQYWdlLTEpDQoNCgkJCQlJZiBMaXN0VHlwZT0iREVGQVVMVCIgQW5kIGludE5vd1BhZ2UtMT0xIFRoZW4gcz1CbG9nSG9zdA0KCQkJCUlmIChMaXN0VHlwZT0iQ0FURUdPUlkiIE9yIExpc3RUeXBlPSJVU0VSIiBPciBMaXN0VHlwZT0iREFURSIgT3IgTGlzdFR5cGU9IlRBR1MiKSBBbmQgaW50Tm93UGFnZS0xPTEgVGhlbiBzPVVybA0KCQkJCUlmIFpDX1NUQVRJQ19NT0RFPSJSRVdSSVRFIiBUaGVuIHM9UmVwbGFjZShzLCIvZGVmYXVsdC5odG1sIiwiLyIpDQoNCgkJCQlUZW1wbGF0ZV9QYWdlQmFyX1ByZXZpb3VzPSI8c3BhbiBjbGFzcz0iInBhZ2ViYXItcHJldmlvdXMiIj48YSBocmVmPSIiIiYgcyAmIiIiPjxzcGFuPiImWkNfTVNHMTU2JiI8L3NwYW4+PC9hPjwvc3Bhbj4iDQoNCgkJCUVuZCBJZg0KDQoJCQlJZiBpbnROb3dQYWdlPWludEFsbFBhZ2UgVGhlbg0KCQkJCVRlbXBsYXRlX1BhZ2VCYXJfTmV4dD0iIg0KCQkJRWxzZQ0KCQkJCXM9UmVwbGFjZSh0LCIlbiIsaW50Tm93UGFnZSsxKQ0KCQkJCVRlbXBsYXRlX1BhZ2VCYXJfTmV4dD0iPHNwYW4gY2xhc3M9IiJwYWdlYmFyLW5leHQiIj48YSBocmVmPSIiIiYgcyAmIiIiPjxzcGFuPiImWkNfTVNHMTU1JiI8L3NwYW4+PC9hPjwvc3Bhbj4iDQoJCQlFbmQgSWYNCg0KCQlFbmQgSWYNCg0KCQlFeHBvcnRCYXI9VHJ1ZQ0KDQoJCSdwbHVnaW4gbm9kZQ0KCQliQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZUxpc3RfRXhwb3J0QmFyX0VuZD1GYWxzZQ0KCQlGb3IgRWFjaCBzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZUxpc3RfRXhwb3J0QmFyX0VuZCBpbiBBY3Rpb25fUGx1Z2luX1RBcnRpY2xlTGlzdF9FeHBvcnRCYXJfRW5kDQoJCQlJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZUxpc3RfRXhwb3J0QmFyX0VuZCkgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fVEFydGljbGVMaXN0X0V4cG9ydEJhcl9FbmQpDQoJCQlJZiBiQWN0aW9uX1BsdWdpbl9UQXJ0aWNsZUxpc3RfRXhwb3J0QmFyX0VuZD1UcnVlIFRoZW4gRXhpdCBGdW5jdGlvbg0KCQlOZXh0DQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJRnVuY3Rpb24gU2V0VmFyKFRlbXBsYXRlVGFnLFRlbXBsYXRlVmFsdWUpDQoNCgkJSWYgSXNFbXB0eShodG1sKSBUaGVuIGh0bWw9VGVtcGxhdGUNCg0KCQlodG1sPVJlcGxhY2UoaHRtbCwiPCMiICYgVGVtcGxhdGVUYWcgJiAiIz4iLFRlbXBsYXRlVmFsdWUpDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJRnVuY3Rpb24gU2F2ZSgpDQoNCgkJaHRtbD1UcmFuc2ZlckhUTUwoaHRtbCwiW25vLWFzcF0iKQ0KCQlJZiBaQ19TVEFUSUNfVFlQRT0iYXNwIiBUaGVuDQoJCQlodG1sPSI8IiYiJUAgQ09ERVBBR0U9NjUwMDEgJSImIj4iICYgaHRtbA0KCQlFbmQgSWYNCg0KCQlDYWxsIENyZWF0RGlyZWN0b3J5QnlDdXN0b21EaXJlY3RvcnlXaXRoRnVsbEJsb2dQYXRoKEZ1bGxQYXRoKQ0KDQoJCUNhbGwgU2F2ZVRvRmlsZShGdWxsUGF0aCxodG1sLCJ1dGYtOCIsRmFsc2UpDQoNCgkJU2F2ZT1UcnVlDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJRnVuY3Rpb24gU2F2ZUNhY2hlKCkNCglFbmQgRnVuY3Rpb24NCg0KCUZ1bmN0aW9uIExvYWRDYWNoZSgpDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVByaXZhdGUgU3ViIENsYXNzX0luaXRpYWxpemUoKQ0KDQoJCUlzRHluYW1pY0xvYWRTaWxkYmFyPUZhbHNlDQoJCUxpc3RUeXBlPSJERUZBVUxUIidDQVRFR09SWSdVU0VSJ0RBVEUnVEFHUw0KCQknaXNDYXRhbG9nPUZhbHNlDQoNCglFbmQgU3ViDQoNCkVuZCBDbGFzcw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgICDlrprkuYlUVXNlcuexuw0KJyDovpPlhaXvvJogICAg5pegDQonIOi/lOWbnu+8miAgICDml6ANCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkNsYXNzIFRVc2VyDQoNCglQdWJsaWMgSUQNCglQdWJsaWMgTGV2ZWwNCglQdWJsaWMgTmFtZQ0KCVB1YmxpYyBQYXNzd29yZA0KCVB1YmxpYyBBbGlhcw0KDQoJUHVibGljIFNleA0KCVB1YmxpYyBFbWFpbA0KCVB1YmxpYyBNU04NCglQdWJsaWMgUVENCglQdWJsaWMgSG9tZVBhZ2UNCglQdWJsaWMgSW50cm8NCg0KCVB1YmxpYyBDb3VudA0KDQoJUHVibGljIExhc3RWaXNpdFRpbWUNCglQdWJsaWMgTGFzdFZpc2l0SVANCg0KCVB1YmxpYyBNZXRhDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IE1ldGFTdHJpbmcNCgkJTWV0YVN0cmluZz1NZXRhLlNhdmVTdHJpbmcNCglFbmQgUHJvcGVydHkNCglQdWJsaWMgUHJvcGVydHkgTGV0IE1ldGFTdHJpbmcocykNCgkJTWV0YS5Mb2FkU3RyaW5nPXMNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBodG1sDQoNCglQcml2YXRlIEZmdWxscmVnZXgNCglQdWJsaWMgUHJvcGVydHkgTGV0IEZ1bGxSZWdleChzKQ0KCQlGZnVsbHJlZ2V4PXMNCglFbmQgUHJvcGVydHkNCglQdWJsaWMgUHJvcGVydHkgR2V0IEZ1bGxSZWdleA0KCQlJZiBGZnVsbHJlZ2V4PD4iIiBUaGVuIA0KCQkJRnVsbFJlZ2V4PUZmdWxscmVnZXgNCgkJRWxzZQ0KCQkJRnVsbFJlZ2V4PVpDX1VTRVJfUkVHRVgNCgkJRW5kIElmDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgRnVsbFVybA0KCVB1YmxpYyBUZW1wbGF0ZU5hbWUNCg0KDQoJUHJpdmF0ZSBGdGVtcGxhdGUNCglQdWJsaWMgUHJvcGVydHkgTGV0IFRlbXBsYXRlKHN0ckZpbGVOYW1lKQ0KCQlGdGVtcGxhdGU9R2V0VGVtcGxhdGUoIlRFTVBMQVRFXyIgJiBzdHJGaWxlTmFtZSkNCglFbmQgUHJvcGVydHkNCglQdWJsaWMgUHJvcGVydHkgR2V0IFRlbXBsYXRlDQoJCUlmIEZ0ZW1wbGF0ZTw+IiIgVGhlbg0KCQkJVGVtcGxhdGUgPSBGdGVtcGxhdGUNCgkJCUV4aXQgUHJvcGVydHkNCgkJRWxzZQ0KCQkJSWYgVGVtcGxhdGVOYW1lPD4iIiBUaGVuDQoJCQkJRGltIHMNCgkJCQlzPUdldFRlbXBsYXRlKCJURU1QTEFURV8iICZUZW1wbGF0ZU5hbWUpDQoJCQkJSWYgczw+IiIgVGhlbg0KCQkJCQlGdGVtcGxhdGUgPSBzDQoJCQkJRWxzZQ0KCQkJCQlGdGVtcGxhdGU9R2V0VGVtcGxhdGUoIlRFTVBMQVRFX0NBVEFMT0ciKQ0KCQkJCUVuZCBJZg0KCQkJRWxzZQ0KCQkJCUZ0ZW1wbGF0ZT1HZXRUZW1wbGF0ZSgiVEVNUExBVEVfQ0FUQUxPRyIpDQoJCQlFbmQgSWYNCgkJCVRlbXBsYXRlID0gRnRlbXBsYXRlDQoJCUVuZCBJZg0KCUVuZCBQcm9wZXJ0eQ0KDQoNCglQdWJsaWMgRnVuY3Rpb24gR2V0RGVmYXVsdFRlbXBsYXRlTmFtZQ0KCQlJZiBUZW1wbGF0ZU5hbWU8PiIiIFRoZW4NCgkJCUdldERlZmF1bHRUZW1wbGF0ZU5hbWU9VGVtcGxhdGVOYW1lDQoJCUVsc2UNCgkJCUdldERlZmF1bHRUZW1wbGF0ZU5hbWU9IkNBVEFMT0ciDQoJCUVuZCBJZg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IEZ1bGxQYXRoDQoJCUZ1bGxQYXRoPVBhcnNlQ3VzdG9tRGlyZWN0b3J5Rm9yUGF0aChGdWxsUmVnZXgsWkNfU1RBVElDX0RJUkVDVE9SWSwiIiwiIiwiIiwiIiwiIixJRCxOYW1lLFN0YXRpY05hbWUpDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFVybA0KDQoJCSdwbHVnaW4gbm9kZQ0KCQliQWN0aW9uX1BsdWdpbl9UVXNlcl9Vcmw9RmFsc2UNCgkJRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fVFVzZXJfVXJsIGluIEFjdGlvbl9QbHVnaW5fVFVzZXJfVXJsDQoJCQlJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9UVXNlcl9VcmwpIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX1RVc2VyX1VybCkNCgkJCUlmIGJBY3Rpb25fUGx1Z2luX1RVc2VyX1VybD1UcnVlIFRoZW4gRXhpdCBQcm9wZXJ0eQ0KCQlOZXh0DQoNCgkJVXJsID1QYXJzZUN1c3RvbURpcmVjdG9yeUZvclVybChGdWxsUmVnZXgsWkNfU1RBVElDX0RJUkVDVE9SWSwiIiwiIiwiIiwiIiwiIixJRCxOYW1lLFN0YXRpY05hbWUpDQoJCUlmIFJpZ2h0KFVybCwxMik9ImRlZmF1bHQuaHRtbCIgVGhlbiBVcmw9TGVmdChVcmwsTGVuKFVybCktMTIpDQoNCgkJVXJsPVJlcGxhY2UoUmVwbGFjZShVcmwsIi8vIiwiLyIpLCI6LyIsIjovLyIsMSwxKQ0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UVXNlcl9VcmwoVXJsKQ0KDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IEZpcnN0TmFtZQ0KCQlGaXJzdE5hbWU9SUlmKExldmVsPTUsTmFtZSxJSWYoQWxpYXM9IiIsTmFtZSxBbGlhcykpDQoJRW5kIFByb3BlcnR5DQoNCglQcml2YXRlIEZ1bmN0aW9uIEdldEF2YXRhcg0KCSAgRGltIGZzbw0KCSAgU2V0IGZzbyA9IENyZWF0ZU9iamVjdCgiU2NyaXB0aW5nLkZpbGVTeXN0ZW1PYmplY3QiKQ0KCSAgSWYgKGZzby5GaWxlRXhpc3RzKEJsb2dQYXRoICYgInpiX3VzZXJzL2F2YXRhci8iJklEJiIucG5nIikpIFRoZW4NCgkJR2V0QXZhdGFyPUJsb2dIb3N0ICYgInpiX3VzZXJzL2F2YXRhci8iJklEJiIucG5nIg0KCSAgRWxzZQ0KCQlHZXRBdmF0YXI9QmxvZ0hvc3QgJiAiemJfdXNlcnMvYXZhdGFyLzAucG5nIg0KCSAgRW5kIElmDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgQXZhdGFyDQoNCgkJQXZhdGFyPUdldEF2YXRhcg0KCQkNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgSHRtbFVybA0KCQlIdG1sVXJsPVRyYW5zZmVySFRNTChVcmwsIltodG1sLWZvcm1hdF0iKQ0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBSc3NVcmwNCgkJUnNzVXJsID0gQmxvZ0hvc3QgJiAiZmVlZC5hc3A/dXNlcj0iICYgSUQNCglFbmQgUHJvcGVydHkNCg0KDQoJUHVibGljIFByb3BlcnR5IEdldCBTdGF0aWNOYW1lDQoJCUlmIElzTnVsbChBbGlhcykgT3IgSXNFbXB0eShBbGlhcykgT3IgQWxpYXM9IiIgVGhlbg0KCQkJU3RhdGljTmFtZSA9IE5hbWUNCgkJRWxzZQ0KCQkJU3RhdGljTmFtZSA9IEFsaWFzDQoJCUVuZCBJZg0KCUVuZCBQcm9wZXJ0eQ0KDQoNCglQcml2YXRlIEZFbWFpbE1ENQ0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgRW1haWxNRDUNCgkJSWYgRkVtYWlsTUQ1PSIiIFRoZW4NCgkJCUlmIEVtYWlsPSIiIE9yIElzTnVsbChFbWFpbCk9VHJ1ZSBUaGVuDQoJCQkJRkVtYWlsTUQ1PSIiDQoJCQlFbHNlDQoJCQkJRkVtYWlsTUQ1PU1ENShFbWFpbCkNCgkJCUVuZCBJZg0KCQlFbmQgSWYNCgkJRW1haWxNRDU9RkVtYWlsTUQ1DQoJRW5kIFByb3BlcnR5DQoNCg0KCVByaXZhdGUgRkxvZ2luVHlwZQ0KCVB1YmxpYyBQcm9wZXJ0eSBMZXQgTG9naW5UeXBlKHN0ckxvZ2luVHlwZSkNCgkJCUZMb2dpblR5cGU9c3RyTG9naW5UeXBlDQoJRW5kIFByb3BlcnR5DQoJUHVibGljIFByb3BlcnR5IEdldCBMb2dpblR5cGUNCgkJCUxvZ2luVHlwZSA9IEZMb2dpblR5cGUNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBSZUNvdW50DQoJUHVibGljIEV4SUQNCg0KDQoJUHJpdmF0ZSBGR3VpZA0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgR3VpZA0KCQlJZiBGR3VpZD0iIiBUaGVuDQoJCQlGR3VpZD1SbmRHdWlkKCkNCgkJCUlmIElEPjAgVGhlbg0KCQkJCUZHdWlkPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFttZW1fR3VpZF0gRlJPTSBbYmxvZ19NZW1iZXJdIFdIRVJFIFttZW1fSURdPSImSUQpKDApDQoJCQlFbmQgSWYNCgkJRW5kIElmDQoJCUd1aWQ9Rkd1aWQNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBGdW5jdGlvbiBDcmVhdGVQYXNzd29yZEJ5T3JpZ2luYWwoT3JpZ2luYVBhc3N3b3JkKQ0KCQlDcmVhdGVQYXNzd29yZEJ5T3JpZ2luYWw9TUQ1KE1ENShPcmlnaW5hUGFzc3dvcmQpICYgR3VpZCkNCglFbmQgRnVuY3Rpb24NCg0KCVB1YmxpYyBGdW5jdGlvbiBHZXRQYXNzd29yZEJ5T3JpZ2luYWwoT3JpZ2luYVBhc3N3b3JkKQ0KDQoJCURpbSBvYmpSUw0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgW21lbV9HdWlkXSBGUk9NIFtibG9nX01lbWJlcl0gV0hFUkUgW21lbV9OYW1lXT0nIiZOYW1lICYgIiciICkNCgkJSWYgKE5vdCBvYmpSUy5Cb2YpIEFuZCAoTm90IG9ialJTLkVvZikgVGhlbg0KCQkJR2V0UGFzc3dvcmRCeU9yaWdpbmFsPU1ENShNRDUoT3JpZ2luYVBhc3N3b3JkKSAmIG9ialJTKCJtZW1fR3VpZCIpKQ0KCQlFbmQgSWYNCg0KCQlvYmpSUy5DbG9zZQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBHZXRQYXNzd29yZEJ5TUQ1KE1kNVBhc3N3b3JkKQ0KDQoJCURpbSBvYmpSUw0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgW21lbV9HdWlkXSBGUk9NIFtibG9nX01lbWJlcl0gV0hFUkUgW21lbV9OYW1lXT0nIiZOYW1lICYgIiciICkNCgkJSWYgKE5vdCBvYmpSUy5Cb2YpIEFuZCAoTm90IG9ialJTLkVvZikgVGhlbg0KCQkJR2V0UGFzc3dvcmRCeU1ENT1NRDUoTWQ1UGFzc3dvcmQgJiBvYmpSUygibWVtX0d1aWQiKSkNCgkJRW5kIElmDQoNCgkJb2JqUlMuQ2xvc2UNCgkJU2V0IG9ialJTPU5vdGhpbmcNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gVmVyaWZ5KCkNCgkJRGltIHN0clVzZXJOYW1lDQoJCURpbSBzdHJQYXNzV29yZA0KDQoJCUlmIExvZ2luVHlwZT0iQ29va2llcyIgVGhlbg0KCQkJc3RyUGFzc1dvcmQ9UmVxdWVzdC5Db29raWVzKCJwYXNzd29yZCIpDQoJCQlJZiAoc3RyUGFzc1dvcmQ9IiIpIFRoZW4gRXhpdCBGdW5jdGlvbg0KCQkJc3RyVXNlck5hbWU9dmJzdW5lc2NhcGUoUmVxdWVzdC5Db29raWVzKCJ1c2VybmFtZSIpKQ0KCQkJSWYgKHN0clVzZXJOYW1lPSIiKSBUaGVuIEV4aXQgRnVuY3Rpb24NCgkJRWxzZUlmIExvZ2luVHlwZT0iRm9ybSIgVGhlbg0KCQkJc3RyUGFzc1dvcmQ9UmVxdWVzdC5Gb3JtKCJwYXNzd29yZCIpDQoJCQlJZiAoc3RyUGFzc1dvcmQ9IiIpIFRoZW4gRXhpdCBGdW5jdGlvbg0KCQkJc3RyVXNlck5hbWU9UmVxdWVzdC5Gb3JtKCJ1c2VybmFtZSIpDQoJCQlJZiAoc3RyVXNlck5hbWU9IiIpIFRoZW4gRXhpdCBGdW5jdGlvbg0KCQlFbHNlSWYgTG9naW5UeXBlPSJRdWVyeVN0cmluZyIgVGhlbg0KCQkJc3RyUGFzc1dvcmQ9UmVxdWVzdC5RdWVyeVN0cmluZygicGFzc3dvcmQiKQ0KCQkJSWYgKHN0clBhc3NXb3JkPSIiKSBUaGVuIEV4aXQgRnVuY3Rpb24NCgkJCXN0clVzZXJOYW1lPVJlcXVlc3QuUXVlcnlTdHJpbmcoInVzZXJuYW1lIikNCgkJCUlmIChzdHJVc2VyTmFtZT0iIikgVGhlbiBFeGl0IEZ1bmN0aW9uDQoJCUVsc2VJZiBMb2dpblR5cGU9IlNlbGYiIFRoZW4NCgkJCXN0clBhc3NXb3JkPVBhc3N3b3JkDQoJCQlJZiAoc3RyUGFzc1dvcmQ9IiIpIFRoZW4gRXhpdCBGdW5jdGlvbg0KCQkJc3RyVXNlck5hbWU9TmFtZQ0KCQkJSWYgKHN0clVzZXJOYW1lPSIiKSBUaGVuIEV4aXQgRnVuY3Rpb24NCgkJRWxzZQ0KCQkJRXhpdCBGdW5jdGlvbg0KCQlFbmQgSWYNCg0KDQoJCUlmIFNlc3Npb24oWkNfQkxPR19DTFNJRCAmICJxdWlja2xvZ2luIik9TUQ1KE1vbnRoKE5vdykgJiBEYXkoTm93KSAmIFpDX0JMT0dfQ0xTSUQgJiBzdHJVc2VyTmFtZSAmIHN0clBhc3NXb3JkKSBUaGVuDQoJCQlJZiBMb2FkSW5mb2J5QXJyYXkoQXBwbGljYXRpb24oWkNfQkxPR19DTFNJRCAmICJRVUlDS0xPR0lOX0lEIiAmIFNlc3Npb24oWkNfQkxPR19DTFNJRCAmICJxdWlja2xvZ2luX2lkIikpKSBUaGVuDQoJCQkJVmVyaWZ5PVRydWUNCgkJCQlFeGl0IEZ1bmN0aW9uDQoJCQlFbmQgSWYNCgkJRW5kIElmDQoNCgkJJ+agoeajgA0KCQknSWYgTGVuKHN0clVzZXJOYW1lKSA+WkNfVVNFUk5BTUVfTUFYIFRoZW4gQ2FsbCBTaG93RXJyb3IoNykNCgkJJ0lmIExlbihzdHJQYXNzV29yZCk8PjMyIFRoZW4gQ2FsbCBTaG93RXJyb3IoNTUpDQoJCSdJZiBOb3QgQ2hlY2tSZWdFeHAoc3RyVXNlck5hbWUsIlt1c2VybmFtZV0iKSBUaGVuIENhbGwgU2hvd0Vycm9yKDcpDQoNCgkJc3RyVXNlck5hbWU9RmlsdGVyU1FMKHN0clVzZXJOYW1lKQ0KCQlzdHJQYXNzV29yZD1GaWx0ZXJTUUwoc3RyUGFzc1dvcmQpDQoNCgkJRGltIG9ialJTDQoJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCAqIEZST00gW2Jsb2dfTWVtYmVyXSBXSEVSRSBbbWVtX05hbWVdPSciJnN0clVzZXJOYW1lICYgIiciKQ0KCQlJZiAoTm90IG9ialJTLkJvZikgQW5kIChOb3Qgb2JqUlMuRW9mKSBUaGVuDQoNCgkJCUlmIFN0ckNvbXAoc3RyUGFzc1dvcmQsb2JqUlMoIm1lbV9QYXNzd29yZCIpKT0wIFRoZW4NCg0KCQkJCUNhbGwgTG9hZEluZm9ieUlEKG9ialJTKCJtZW1fSUQiKSkNCg0KCQkJCVNlc3Npb24oWkNfQkxPR19DTFNJRCAmICJxdWlja2xvZ2luIik9TUQ1KE1vbnRoKE5vdykgJiBEYXkoTm93KSAmIFpDX0JMT0dfQ0xTSUQgJiBzdHJVc2VyTmFtZSAmIHN0clBhc3NXb3JkKQ0KCQkJCVNlc3Npb24oWkNfQkxPR19DTFNJRCAmICJxdWlja2xvZ2luX2lkIik9SUQNCgkJCQlBcHBsaWNhdGlvbi5Mb2NrDQoJCQkJQXBwbGljYXRpb24oWkNfQkxPR19DTFNJRCAmICJRVUlDS0xPR0lOX0lEIiAmIElEKT1BcnJheShJRCxOYW1lLExldmVsLFBhc3N3b3JkLEVtYWlsLEhvbWVQYWdlLENvdW50LEFsaWFzLFRlbXBsYXRlTmFtZSxGdWxsVXJsLEludHJvLE1ldGFTdHJpbmcpDQoJCQkJQXBwbGljYXRpb24uVW5Mb2NrDQoNCgkJCQlWZXJpZnk9VHJ1ZQ0KCQkJRWxzZQ0KCQkJCSdJZiBMb2dpblR5cGU9IkNvb2tpZXMiIFRoZW4gUmVzcG9uc2UuQ29va2llcygicGFzc3dvcmQiKT0iIg0KCQkJRW5kIElmDQoJCUVsc2UNCgkJCSdJZiBMb2dpblR5cGU9IkNvb2tpZXMiIFRoZW4gUmVzcG9uc2UuQ29va2llcygicGFzc3dvcmQiKT0iIg0KCQlFbmQgSWYNCg0KCQlvYmpSUy5DbG9zZQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCUZ1bmN0aW9uIExvYWRJbmZvYnlJRCh1c2VyX0lEKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIodXNlcl9JRCwiaW50IiwwKQ0KDQoJCURpbSBvYmpSUw0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgW21lbV9JRF0sW21lbV9OYW1lXSxbbWVtX0xldmVsXSxbbWVtX1Bhc3N3b3JkXSxbbWVtX0VtYWlsXSxbbWVtX0hvbWVQYWdlXSxbbWVtX1Bvc3RMb2dzXSxbbWVtX0ludHJvXSxbbWVtX1RlbXBsYXRlXSxbbWVtX0Z1bGxVcmxdLFttZW1fVXJsXSxbbWVtX01ldGFdIEZST00gW2Jsb2dfTWVtYmVyXSBXSEVSRSBbbWVtX0lEXT0iICYgdXNlcl9JRCkNCgkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KDQoJCQlJRD1vYmpSUygibWVtX0lEIikNCgkJCU5hbWU9b2JqUlMoIm1lbV9OYW1lIikNCgkJCUxldmVsPW9ialJTKCJtZW1fTGV2ZWwiKQ0KCQkJUGFzc3dvcmQ9b2JqUlMoIm1lbV9QYXNzd29yZCIpDQoJCQlFbWFpbD1vYmpSUygibWVtX0VtYWlsIikNCgkJCUhvbWVQYWdlPW9ialJTKCJtZW1fSG9tZVBhZ2UiKQ0KCQkJQ291bnQ9b2JqUlMoIm1lbV9Qb3N0TG9ncyIpDQoJCQlBbGlhcz1vYmpSUygibWVtX1VybCIpDQoJCQlUZW1wbGF0ZU5hbWU9b2JqUlMoIm1lbV9UZW1wbGF0ZSIpDQoJCQlGdWxsVXJsPW9ialJTKCJtZW1fRnVsbFVybCIpDQoJCQlJbnRybz1vYmpSUygibWVtX0ludHJvIikNCgkJCU1ldGFTdHJpbmc9b2JqUlMoIm1lbV9NZXRhIikNCg0KCQkJSWYgSXNOdWxsKEVtYWlsKSBPciBJc0VtcHR5KEVtYWlsKSBPciBMZW4oRW1haWwpPTAgVGhlbiBFbWFpbD0ibnVsbEBudWxsLmNvbSINCgkJCUlmIElzTnVsbChIb21lUGFnZSkgVGhlbiBIb21lUGFnZT0iIg0KCQkJSWYgSXNOdWxsKEFsaWFzKSBUaGVuIEFsaWFzPSIiDQoJCQlJZiBJc051bGwoVGVtcGxhdGVOYW1lKSBUaGVuIFRlbXBsYXRlTmFtZT0iIg0KDQoJCQlMb2FkSW5mb2J5SUQ9VHJ1ZQ0KCQlFbmQgSWYNCg0KCQlvYmpSUy5DbG9zZQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RVc2VyX0xvYWRJbmZvYnlJRChJRCxOYW1lLExldmVsLFBhc3N3b3JkLEVtYWlsLEhvbWVQYWdlLENvdW50LEFsaWFzLFRlbXBsYXRlTmFtZSxGdWxsVXJsLEludHJvLE1ldGFTdHJpbmcpDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIExvYWRJbmZvQnlBcnJheShhcnlVc2VySW5mbykNCg0KCQlJZiBJc0FycmF5KGFyeVVzZXJJbmZvKT1UcnVlIFRoZW4NCg0KCQkJSUQ9YXJ5VXNlckluZm8oMCkNCgkJCU5hbWU9YXJ5VXNlckluZm8oMSkNCgkJCUxldmVsPWFyeVVzZXJJbmZvKDIpDQoJCQlQYXNzd29yZD1hcnlVc2VySW5mbygzKQ0KCQkJRW1haWw9YXJ5VXNlckluZm8oNCkNCgkJCUhvbWVQYWdlPWFyeVVzZXJJbmZvKDUpDQoJCQlDb3VudD1hcnlVc2VySW5mbyg2KQ0KCQkJQWxpYXM9YXJ5VXNlckluZm8oNykNCgkJCVRlbXBsYXRlTmFtZT1hcnlVc2VySW5mbyg4KQ0KCQkJRnVsbFVybD1hcnlVc2VySW5mbyg5KQ0KCQkJSW50cm89YXJ5VXNlckluZm8oMTApDQoJCQlNZXRhU3RyaW5nPWFyeVVzZXJJbmZvKDExKQ0KDQoJCQlJZiBJc051bGwoRW1haWwpIE9yIElzRW1wdHkoRW1haWwpIE9yIExlbihFbWFpbCk9MCBUaGVuIEVtYWlsPSJhQGIuY29tIg0KCQkJSWYgSXNOdWxsKEhvbWVQYWdlKSBUaGVuIEhvbWVQYWdlPSIiDQoJCQlJZiBJc051bGwoQWxpYXMpIFRoZW4gQWxpYXM9IiINCgkJCUlmIElzTnVsbChUZW1wbGF0ZU5hbWUpIFRoZW4gVGVtcGxhdGVOYW1lPSIiDQoNCgkJCUxvYWRJbmZvQnlBcnJheT1UcnVlCQkNCg0KCQlFbmQgSWYNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVFVzZXJfTG9hZEluZm9CeUFycmF5KElELE5hbWUsTGV2ZWwsUGFzc3dvcmQsRW1haWwsSG9tZVBhZ2UsQ291bnQsQWxpYXMsVGVtcGxhdGVOYW1lLEZ1bGxVcmwsSW50cm8sTWV0YVN0cmluZykNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglGdW5jdGlvbiBFZGl0KGN1cnJlbnRVc2VyKQ0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UVXNlcl9FZGl0KElELE5hbWUsTGV2ZWwsUGFzc3dvcmQsRW1haWwsSG9tZVBhZ2UsQ291bnQsQWxpYXMsVGVtcGxhdGVOYW1lLEZ1bGxVcmwsSW50cm8sTWV0YVN0cmluZyxjdXJyZW50VXNlcikNCg0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKElELCJpbnQiLDApDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoTGV2ZWwsImludCIsMCkNCg0KCQlJZiAoKExldmVsPDEpIE9yIChMZXZlbD41KSkgVGhlbiBDYWxsIFNob3dFcnJvcigxNikNCgkJSWYgKE5hbWU9IiIpIFRoZW4gQ2FsbCBTaG93RXJyb3IoNykNCgkJSWYgTGVuKE5hbWUpID5aQ19VU0VSTkFNRV9NQVggVGhlbiBDYWxsIFNob3dFcnJvcig3KQ0KCQlJZiBOb3QgQ2hlY2tSZWdFeHAoTmFtZSwiW3VzZXJuYW1lXSIpIFRoZW4gQ2FsbCBTaG93RXJyb3IoNykNCg0KCQlFbWFpbD1GaWx0ZXJTUUwoRW1haWwpDQoJCUhvbWVQYWdlPUZpbHRlclNRTChIb21lUGFnZSkNCg0KCQlFbWFpbD1UcmFuc2ZlckhUTUwoRW1haWwsIltodG1sLWZvcm1hdF0iKQ0KCQlIb21lUGFnZT1UcmFuc2ZlckhUTUwoSG9tZVBhZ2UsIltodG1sLWZvcm1hdF0iKQ0KDQoJCUFsaWFzPVRyYW5zZmVySFRNTChBbGlhcywiW2RpcmVjdG9yeSZmaWxlXSIpDQoJCUlmIExlZnQoQWxpYXMsMSk9Ii8iIFRoZW4gQWxpYXM9UmlnaHQoQWxpYXMsTGVuKEFsaWFzKS0xKQ0KCQlJZiBSaWdodChBbGlhcywxKT0iLyIgVGhlbiBBbGlhcz1MZWZ0KEFsaWFzLExlbihBbGlhcyktMSkNCgkJQWxpYXM9RmlsdGVyU1FMKEFsaWFzKQ0KDQoJCVRlbXBsYXRlTmFtZT1VQ2FzZShGaWx0ZXJTUUwoVGVtcGxhdGVOYW1lKSkNCgkJSWYgVGVtcGxhdGVOYW1lPSJDQVRBTE9HIiBUaGVuIFRlbXBsYXRlTmFtZT0iIg0KDQoJCUlmIExlbihFbWFpbCk9MCBUaGVuIENhbGwgU2hvd0Vycm9yKDI5KQ0KCQlJZiBMZW4oRW1haWwpPlpDX0VNQUlMX01BWCBUaGVuIENhbGwgU2hvd0Vycm9yKDI5KQ0KCQlJZiBMZW4oSG9tZVBhZ2UpPlpDX0hPTUVQQUdFX01BWCBUaGVuIENhbGwgU2hvd0Vycm9yKDI5KQ0KDQoJCUlmIE5vdCBDaGVja1JlZ0V4cChFbWFpbCwiW2VtYWlsXSIpIFRoZW4gQ2FsbCBTaG93RXJyb3IoMjkpDQoJCUlGIExlbihIb21lUGFnZSk+MCBUaGVuDQoJCQlJZiBOb3QgQ2hlY2tSZWdFeHAoSG9tZVBhZ2UsIltob21lcGFnZV0iKSBUaGVuIENhbGwgU2hvd0Vycm9yKDMwKQ0KCQlFbmQgSWYNCg0KCQlJbnRybz1GaWx0ZXJTUUwoSW50cm8pDQoNCgkJSWYgSUQ9MCBUaGVuDQoNCgkJCUlmIExldmVsIDw9IGN1cnJlbnRVc2VyLkxldmVsIFRoZW4gU2hvd0Vycm9yKDYpDQoJCQlJZiBMZW4oUGFzc1dvcmQpPD4zMiBUaGVuIENhbGwgU2hvd0Vycm9yKDU1KQ0KDQoJCQlEaW0gb2JqUlMyDQoJCQlTZXQgb2JqUlMyID0gb2JqQ29ubi5leGVjdXRlICgiU0VMRUNUIFttZW1faWRdIEZST00gW2Jsb2dfTWVtYmVyXSBXSEVSRSBbbWVtX05hbWVdPSciICYgTmFtZSAmICInICIpDQoJCQlJZiAoTm90IG9ialJTMi5ib2YpIEFuZCAoTm90IG9ialJTMi5lb2YpIFRoZW4NCgkJCQlDYWxsIFNob3dFcnJvcig2MikNCgkJCUVuZCBJZg0KCQkJU2V0IG9ialJTMj1Ob3RoaW5nDQoNCgkJCW9iakNvbm4uRXhlY3V0ZSgiSU5TRVJUIElOVE8gW2Jsb2dfTWVtYmVyXShbbWVtX0xldmVsXSxbbWVtX05hbWVdLFttZW1fUGFzc1dvcmRdLFttZW1fRW1haWxdLFttZW1fSG9tZVBhZ2VdLFttZW1fVXJsXSxbbWVtX0d1aWRdLFttZW1fSW50cm9dLFttZW1fVGVtcGxhdGVdLFttZW1fTWV0YV0pIFZBTFVFUyAoIiZMZXZlbCYiLCciJk5hbWUmIicsJyImUGFzc1dvcmQmIicsJyImRW1haWwmIicsJyImSG9tZVBhZ2UmIicsJyImQWxpYXMmIicsJyImR3VpZCYiJywnIiZJbnRybyYiJywnIiZUZW1wbGF0ZU5hbWUmIicsJyImTWV0YVN0cmluZyYiJykiKQ0KCQkJDQoJCQlEaW0gb2JqUlMNCgkJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBNQVgoW21lbV9JRF0pIEZST00gW2Jsb2dfTWVtYmVyXSIpDQoJCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoJCQkJSUQ9b2JqUlMoMCkNCgkJCUVuZCBJZg0KCQkJU2V0IG9ialJTPU5vdGhpbmcNCg0KCQlFbHNlDQoNCgkJCUlmIChJRD1jdXJyZW50VXNlci5JRCkgQW5kIChMZXZlbCA8PiBjdXJyZW50VXNlci5MZXZlbCkgVGhlbiBTaG93RXJyb3IoNikNCgkJCUlmIChJRDw+Y3VycmVudFVzZXIuSUQpIEFuZCAoTGV2ZWwgPD0gY3VycmVudFVzZXIuTGV2ZWwpIFRoZW4gU2hvd0Vycm9yKDYpDQoNCgkJCUlmIElEPjAgVGhlbg0KCQkJCURpbSBvYmpSUzMNCgkJCQlTZXQgb2JqUlMzID0gb2JqQ29ubi5leGVjdXRlICgiU0VMRUNUIFttZW1faWRdIEZST00gW2Jsb2dfTWVtYmVyXSBXSEVSRSBbbWVtX05hbWVdPSciICYgTmFtZSAmICInIEFORCBbbWVtX0lEXTw+IiAmIElEKQ0KCQkJCUlmIChOb3Qgb2JqUlMzLmJvZikgQW5kIChOb3Qgb2JqUlMzLmVvZikgVGhlbg0KCQkJCQlDYWxsIFNob3dFcnJvcig2MikNCgkJCQlFbmQgSWYNCgkJCQlTZXQgb2JqUlMzPU5vdGhpbmcNCgkJCUVuZCBJZg0KDQoNCgkJCURpbSB0YXJnZXRVc2VyDQoJCQlTZXQgdGFyZ2V0VXNlcj1OZXcgVFVzZXINCgkJCUlmIHRhcmdldFVzZXIuTG9hZEluZm9ieUlEKElEKSBUaGVuDQoNCgkJCQlJZiBMZW4oUGFzc1dvcmQpPTAgVGhlbg0KCQkJCQlQYXNzV29yZD10YXJnZXRVc2VyLlBhc3NXb3JkDQoJCQkJRW5kIElmDQoNCgkJCQlJZiBMZW4oUGFzc1dvcmQpPD4zMiBUaGVuIENhbGwgU2hvd0Vycm9yKDU1KQ0KDQoJCQkJb2JqQ29ubi5FeGVjdXRlKCJVUERBVEUgW2Jsb2dfTWVtYmVyXSBTRVQgW21lbV9MZXZlbF09IiZMZXZlbCYiLFttZW1fTmFtZV09JyImTmFtZSYiJyxbbWVtX1Bhc3NXb3JkXT0nIiZQYXNzV29yZCYiJyxbbWVtX0VtYWlsXT0nIiZFbWFpbCYiJyxbbWVtX0hvbWVQYWdlXT0nIiZIb21lUGFnZSYiJyxbbWVtX1VybF09JyImQWxpYXMmIicsW21lbV9JbnRyb109JyImSW50cm8mIicsW21lbV9UZW1wbGF0ZV09JyImVGVtcGxhdGVOYW1lJiInLFttZW1fTWV0YV09JyImTWV0YVN0cmluZyYiJyBXSEVSRSBbbWVtX0lEXT0iJklEKQ0KDQoJCQkJSWYgTmFtZSA8PiB0YXJnZXRVc2VyLk5hbWUgVGhlbg0KCQkJCQlvYmpDb25uLkV4ZWN1dGUoIlVQREFURSBbYmxvZ19Db21tZW50XSBTRVQgW2NvbW1fQXV0aG9yXT0nIiZOYW1lJiInIFdIRVJFIFtjb21tX0F1dGhvcklEXT0iJklEKQ0KCQkJCUVuZCBJZg0KCQkJCUlmIEVtYWlsIDw+IHRhcmdldFVzZXIuRW1haWwgVGhlbg0KCQkJCQlvYmpDb25uLkV4ZWN1dGUoIlVQREFURSBbYmxvZ19Db21tZW50XSBTRVQgW2NvbW1fRW1haWxdPSciJkVtYWlsJiInIFdIRVJFIFtjb21tX0F1dGhvcklEXT0iJklEKQ0KCQkJCUVuZCBJZg0KDQoJCQlFbmQgSWYNCgkJCQ0KCQkJRGltIHRtcENsc0lEDQoJCQl0bXBDbHNJRD1NRDUoQmxvZ1BhdGggJiBaQ19CTE9HX0NMU0lEX09SSUdJTkFMKQ0KCQkJQXBwbGljYXRpb24uTG9jaw0KCQkJQXBwbGljYXRpb24odG1wQ2xzSUQgJiAiUVVJQ0tMT0dJTl9JRCIgJiBTZXNzaW9uKHRtcENsc0lEICYgInF1aWNrbG9naW5faWQiKSk9RW1wdHkNCgkJCUFwcGxpY2F0aW9uKHRtcENsc0lEICYgIlFVSUNLTE9HSU5fSUQiICYgSUQpPUVtcHR5DQoJCQlBcHBsaWNhdGlvbi5VbkxvY2sNCgkJCVNlc3Npb24odG1wQ2xzSUQgJiAicXVpY2tsb2dpbiIpPUVtcHR5DQoJCQlTZXNzaW9uKHRtcENsc0lEICYgInF1aWNrbG9naW5faWQiKT1FbXB0eQ0KDQoNCgkJRW5kIElmDQoNCgkJRWRpdD1UcnVlDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJRnVuY3Rpb24gUmVnaXN0ZXIoKQ0KDQoJCURpbSBjdXJyZW50VXNlcg0KCQlTZXQgY3VycmVudFVzZXI9QmxvZ1VzZXINCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVFVzZXJfUmVnaXN0ZXIoSUQsTmFtZSxMZXZlbCxQYXNzd29yZCxFbWFpbCxIb21lUGFnZSxDb3VudCxBbGlhcyxUZW1wbGF0ZU5hbWUsRnVsbFVybCxJbnRybyxNZXRhU3RyaW5nLGN1cnJlbnRVc2VyKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoSUQsImludCIsMCkNCgkJQ2FsbCBDaGVja1BhcmFtZXRlcihMZXZlbCwiaW50IiwwKQ0KDQoJCVBhc3NXb3JkPU1ENShQYXNzd29yZCAmIEd1aWQpDQoNCgkJSWYgKExldmVsPD0xKSBUaGVuIENhbGwgU2hvd0Vycm9yKDE2KQ0KCQlJZiAoTmFtZT0iIikgVGhlbiBDYWxsIFNob3dFcnJvcig3KQ0KCQlJZiBMZW4oTmFtZSkgPlpDX1VTRVJOQU1FX01BWCBUaGVuIENhbGwgU2hvd0Vycm9yKDcpDQoJCUlmIE5vdCBDaGVja1JlZ0V4cChOYW1lLCJbdXNlcm5hbWVdIikgVGhlbiBDYWxsIFNob3dFcnJvcig3KQ0KDQoJCUVtYWlsPUZpbHRlclNRTChFbWFpbCkNCgkJSG9tZVBhZ2U9RmlsdGVyU1FMKEhvbWVQYWdlKQ0KDQoJCUVtYWlsPVRyYW5zZmVySFRNTChFbWFpbCwiW2h0bWwtZm9ybWF0XSIpDQoJCUhvbWVQYWdlPVRyYW5zZmVySFRNTChIb21lUGFnZSwiW2h0bWwtZm9ybWF0XSIpDQoNCgkJQWxpYXM9VHJhbnNmZXJIVE1MKEFsaWFzLCJbZGlyZWN0b3J5JmZpbGVdIikNCgkJSWYgTGVmdChBbGlhcywxKT0iLyIgVGhlbiBBbGlhcz1SaWdodChBbGlhcyxMZW4oQWxpYXMpLTEpDQoJCUlmIFJpZ2h0KEFsaWFzLDEpPSIvIiBUaGVuIEFsaWFzPUxlZnQoQWxpYXMsTGVuKEFsaWFzKS0xKQ0KCQlBbGlhcz1GaWx0ZXJTUUwoQWxpYXMpDQoNCgkJVGVtcGxhdGVOYW1lPVVDYXNlKEZpbHRlclNRTChUZW1wbGF0ZU5hbWUpKQ0KCQlJZiBUZW1wbGF0ZU5hbWU9IkNBVEFMT0ciIFRoZW4gVGVtcGxhdGVOYW1lPSIiDQoNCgkJSWYgTGVuKEVtYWlsKT0wIFRoZW4gQ2FsbCBTaG93RXJyb3IoMjkpDQoJCUlmIExlbihFbWFpbCk+WkNfRU1BSUxfTUFYIFRoZW4gQ2FsbCBTaG93RXJyb3IoMjkpDQoJCUlmIExlbihIb21lUGFnZSk+WkNfSE9NRVBBR0VfTUFYIFRoZW4gQ2FsbCBTaG93RXJyb3IoMjkpDQoNCgkJSWYgTm90IENoZWNrUmVnRXhwKEVtYWlsLCJbZW1haWxdIikgVGhlbiBDYWxsIFNob3dFcnJvcigzMCkNCgkJSUYgTGVuKEhvbWVQYWdlKT4wIFRoZW4NCgkJCUlmIE5vdCBDaGVja1JlZ0V4cChIb21lUGFnZSwiW2hvbWVwYWdlXSIpIFRoZW4gQ2FsbCBTaG93RXJyb3IoMzApDQoJCUVuZCBJZg0KDQoNCgkJSWYgSUQ9MCBUaGVuDQoNCgkJCUlmIExldmVsIDw9IDEgVGhlbiBTaG93RXJyb3IoNikNCgkJCUlmIExlbihQYXNzV29yZCk8PjMyIFRoZW4gQ2FsbCBTaG93RXJyb3IoNTUpDQoNCgkJCURpbSBvYmpSUzINCgkJCVNldCBvYmpSUzIgPSBvYmpDb25uLmV4ZWN1dGUgKCJTRUxFQ1QgW21lbV9pZF0gRlJPTSBbYmxvZ19NZW1iZXJdIFdIRVJFIFttZW1fTmFtZV09JyIgJiBOYW1lICYgIicgIikNCgkJCUlmIChOb3Qgb2JqUlMyLmJvZikgQW5kIChOb3Qgb2JqUlMyLmVvZikgVGhlbg0KCQkJCUNhbGwgU2hvd0Vycm9yKDYyKQ0KCQkJRW5kIElmDQoJCQlTZXQgb2JqUlMyPU5vdGhpbmcNCg0KCQkJb2JqQ29ubi5FeGVjdXRlKCJJTlNFUlQgSU5UTyBbYmxvZ19NZW1iZXJdKFttZW1fTGV2ZWxdLFttZW1fTmFtZV0sW21lbV9QYXNzV29yZF0sW21lbV9FbWFpbF0sW21lbV9Ib21lUGFnZV0sW21lbV9VcmxdLFttZW1fR3VpZF0sW21lbV9JbnRyb10sW21lbV9NZXRhXSkgVkFMVUVTICgiJkxldmVsJiIsJyImTmFtZSYiJywnIiZQYXNzV29yZCYiJywnIiZFbWFpbCYiJywnIiZIb21lUGFnZSYiJywnIiZBbGlhcyYiJywnIiZHdWlkJiInLCciJkludHJvJiInLCciJk1ldGFTdHJpbmcmIicpIikNCg0KCQkJRGltIG9ialJTDQoJCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgTUFYKFttZW1fSURdKSBGUk9NIFtibG9nX01lbWJlcl0iKQ0KCQkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KCQkJCUlEPW9ialJTKDApDQoJCQlFbmQgSWYNCgkJCVNldCBvYmpSUz1Ob3RoaW5nDQoNCgkJCVJlZ2lzdGVyPVRydWUNCg0KCQlFbmQgSWYNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglGdW5jdGlvbiBEZWwoY3VycmVudFVzZXIpDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RVc2VyX0RlbChJRCxOYW1lLExldmVsLFBhc3N3b3JkLEVtYWlsLEhvbWVQYWdlLENvdW50LEFsaWFzLFRlbXBsYXRlTmFtZSxGdWxsVXJsLEludHJvLE1ldGFTdHJpbmcsY3VycmVudFVzZXIpDQoNCgkJRGltIG9ialJTDQoJCURpbSBvYmpVcExvYWRGaWxlDQoNCgkJQ2FsbCBDaGVja1BhcmFtZXRlcihJRCwiaW50IiwwKQ0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKExldmVsLCJpbnQiLDApDQoNCgkJRGltIHRhcmdldFVzZXINCgkJU2V0IHRhcmdldFVzZXI9TmV3IFRVc2VyDQoJCUlmIHRhcmdldFVzZXIuTG9hZEluZm9ieUlEKElEKSBUaGVuDQoJCQlJZiB0YXJnZXRVc2VyLkxldmVsPD0gY3VycmVudFVzZXIuTGV2ZWwgVGhlbiBTaG93RXJyb3IoNikNCgkJCUlmIGN1cnJlbnRVc2VyLklEID0gdGFyZ2V0VXNlci5JRCBUaGVuIFNob3dFcnJvcigxNykNCgkJRWxzZQ0KCQkJRXhpdCBGdW5jdGlvbg0KCQlFbmQgSWYNCg0KCQlvYmpDb25uLkV4ZWN1dGUoIkRFTEVURSBGUk9NIFtibG9nX0FydGljbGVdIFdIRVJFIFtsb2dfQXV0aG9ySURdID0iICYgSUQpDQoJCW9iakNvbm4uRXhlY3V0ZSgiREVMRVRFIEZST00gW2Jsb2dfQ29tbWVudF0gV0hFUkUgW2NvbW1fQXV0aG9ySURdID0iICYgSUQpDQoJCW9iakNvbm4uRXhlY3V0ZSgiREVMRVRFIEZST00gW2Jsb2dfTWVtYmVyXSBXSEVSRSBbbWVtX0lEXSA9IiAmIElEKQ0KDQoJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCB1bF9pZCBGUk9NIFtibG9nX1VwTG9hZF0gV0hFUkUgW3VsX0F1dGhvcklEXSA9IiAmIElEKQ0KCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoJCQlEbyBXaGlsZSBOb3Qgb2JqUlMuZW9mDQoJCQkJU2V0IG9ialVwTG9hZEZpbGU9TmV3IFRVcExvYWRGaWxlDQoJCQkJSWYgb2JqVXBMb2FkRmlsZS5Mb2FkSW5mb0J5SUQob2JqUlMoInVsX0lEIikpIFRoZW4gb2JqVXBMb2FkRmlsZS5EZWwNCgkJCQlTZXQgb2JqVXBMb2FkRmlsZT1Ob3RoaW5nDQoJCQkJb2JqUlMuTW92ZU5leHQNCgkJCUxvb3ANCgkJRW5kIElmDQoJCW9ialJTLkNsb3NlDQoJCVNldCBvYmpSUz1Ob3RoaW5nDQoNCgkJb2JqQ29ubi5FeGVjdXRlKCJERUxFVEUgRlJPTSBbYmxvZ19VcExvYWRdIFdIRVJFIFt1bF9BdXRob3JJRF0gPSIgJiBJRCkNCg0KCQlEZWw9VHJ1ZQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCglGdW5jdGlvbiBHZXRJRGJ5TmFtZShuKQ0KDQoJCW49RmlsdGVyU1FMKG4pDQoNCgkJRGltIG9ialJTDQoJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBbbWVtX0lEXSBGUk9NIFtibG9nX01lbWJlcl0gV0hFUkUgW21lbV9OYW1lXT0nIiYgbiAmICInIikNCgkJSWYgKE5vdCBvYmpSUy5Cb2YpIEFuZCAoTm90IG9ialJTLkVvZikgVGhlbg0KCQkJR2V0SURieU5hbWU9Q0xuZyhvYmpSUygibWVtX0lEIikpDQoJCUVuZCBJZg0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVByaXZhdGUgU3ViIENsYXNzX0luaXRpYWxpemUoKQ0KDQoJCUxldmVsPTUNCgkJSUQ9MA0KCQlOYW1lPVpDX01TRzAxOA0KDQoJCVNleD0wDQoJCUVtYWlsPSIiDQoJCU1TTj0iIg0KCQlRUT0iIg0KCQlIb21lUGFnZT0iIg0KCQlJbnRybz0iIg0KDQoJCUxvZ2luVHlwZT0iQ29va2llcyINCg0KCQlSZUNvdW50PTANCgkJRXhJRD0tMQ0KDQoJCVNldCBNZXRhPU5ldyBUTWV0YQ0KDQoJRW5kIFN1Yg0KDQoNCkVuZCBDbGFzcw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgICDlrprkuYlUQ29tbWVudOexuw0KJyDovpPlhaXvvJogICAg5pegDQonIOi/lOWbnu+8miAgICDml6ANCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkNsYXNzIFRDb21tZW50DQoNCglQdWJsaWMgSUQNCglQdWJsaWMgbG9nX0lEDQoJUHVibGljIFBhcmVudElEDQoJDQoJUHVibGljIEF1dGhvcklEDQoJUHVibGljIEF1dGhvcg0KCVB1YmxpYyBDb250ZW50DQoJUHVibGljIEVtYWlsDQoJUHVibGljIEhvbWVQYWdlDQoNCglQdWJsaWMgUG9zdFRpbWUNCglQdWJsaWMgSVANCglQdWJsaWMgQWdlbnQNCg0KCVB1YmxpYyBSZXBseQ0KCVB1YmxpYyBMYXN0UmVwbHlJUA0KCVB1YmxpYyBMYXN0UmVwbHlUaW1lDQoNCglQdWJsaWMgQ291bnQNCglQdWJsaWMgSXNDaGVjaw0KCVB1YmxpYyBNZXRhDQoNCglQdWJsaWMgSXNUaHJvdyAn5q2k5YC85Li6VHJ1ZeaXtizns7vnu5/kuI3kvJrkv53lrZjnmoQs5Lya55u05o6l5omU5Ye65Y67Lg0KDQoJUHVibGljIFByb3BlcnR5IEdldCBNZXRhU3RyaW5nDQoJCU1ldGFTdHJpbmc9TWV0YS5TYXZlU3RyaW5nDQoJRW5kIFByb3BlcnR5DQoJUHVibGljIFByb3BlcnR5IExldCBNZXRhU3RyaW5nKHMpDQoJCU1ldGEuTG9hZFN0cmluZz1zDQoJRW5kIFByb3BlcnR5DQoNCg0KCVByaXZhdGUgRkF2YXRhcg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgQXZhdGFyDQoJCSdwbHVnaW4gbm9kZQ0KCQliQWN0aW9uX1BsdWdpbl9UQ29tbWVudF9BdmF0YXI9RmFsc2UNCgkJRm9yIEVhY2ggc0FjdGlvbl9QbHVnaW5fVENvbW1lbnRfQXZhdGFyIGluIEFjdGlvbl9QbHVnaW5fVENvbW1lbnRfQXZhdGFyDQoJCQlJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9UQ29tbWVudF9BdmF0YXIpIFRoZW4gQ2FsbCBFeGVjdXRlKHNBY3Rpb25fUGx1Z2luX1RDb21tZW50X0F2YXRhcikNCgkJCUlmIGJBY3Rpb25fUGx1Z2luX1RDb21tZW50X0F2YXRhcj1UcnVlIFRoZW4gRXhpdCBQcm9wZXJ0eQ0KCQlOZXh0DQoNCgkJSWYgRkF2YXRhcj0iIiBUaGVuIEZBdmF0YXI9VXNlcnMoQXV0aG9ySUQpLkF2YXRhcg0KDQoJCUF2YXRhcj1GQXZhdGFyDQoNCglFbmQgUHJvcGVydHkNCg0KDQoJUHVibGljIGh0bWwNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgSG9tZVBhZ2VGb3JBbnRpU3BhbQ0KCQlIb21lUGFnZUZvckFudGlTcGFtPVVSTEVuY29kZUZvckFudGlTcGFtKEhvbWVQYWdlKQ0KCUVuZCBQcm9wZXJ0eQ0KDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFNhZmVFbWFpbA0KCQlEaW0gcw0KCQlJZiBFbWFpbD0iIiBUaGVuIHM9Im51bGxAbnVsbC5jb20iDQoJCVNhZmVFbWFpbD1SZXBsYWNlKHMsIkAiLCJbQVRdIikNCglFbmQgUHJvcGVydHkNCg0KDQoJUHVibGljIFByb3BlcnR5IEdldCBFbWFpbE1ENQ0KCQlJZiBBdXRob3JJRD4wIFRoZW4NCgkJCUVtYWlsTUQ1PVVzZXJzKEF1dGhvcklEKS5FbWFpbE1ENQ0KCQlFbHNlDQoJCQlJZiBFbWFpbD0iIiBPciBJc051bGwoRW1haWwpPVRydWUgVGhlbg0KCQkJCUVtYWlsTUQ1PSIiDQoJCQlFbHNlDQoJCQkJRW1haWxNRDU9TUQ1KEVtYWlsKQ0KCQkJRW5kIElmDQoJCUVuZCBJZg0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBGaXJzdENvbnRhY3QNCgkJSWYgTGVuKEhvbWVQYWdlKT4wIFRoZW4NCgkJCUZpcnN0Q29udGFjdD1Ib21lUGFnZUZvckFudGlTcGFtDQoJCUVsc2UNCgkJCUZpcnN0Q29udGFjdD0ibWFpbHRvOiIgJiBTYWZlRW1haWwNCgkJRW5kIElmDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IEh0bWxDb250ZW50DQoJCSdIdG1sQ29udGVudD1UcmFuc2ZlckhUTUwoVUJCQ29kZShDb250ZW50LCJbZm9udF1bZmFjZV0iKSwiW2VudGVyXVtub2ZvbGxvd10iKQ0KCQlIdG1sQ29udGVudD1UcmFuc2ZlckhUTUwoVUJCQ29kZShDb250ZW50ICYgUmVwbHksIltsaW5rXVtsaW5rLWFudGlzcGFtXVtmb250XVtmYWNlXVt0eXBlc2V0XSIpLCJbZW50ZXJdW25vZm9sbG93XSIpDQoJRW5kIFByb3BlcnR5DQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBQb3N0KCkNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVENvbW1lbnRfUG9zdChJRCxsb2dfSUQsQXV0aG9ySUQsQXV0aG9yLENvbnRlbnQsRW1haWwsSG9tZVBhZ2UsUG9zdFRpbWUsSVAsQWdlbnQsUmVwbHksTGFzdFJlcGx5SVAsTGFzdFJlcGx5VGltZSxQYXJlbnRJRCxJc0NoZWNrLE1ldGFTdHJpbmcpDQoNCgkJSWYgSXNUaHJvdz1UcnVlIFRoZW4gUG9zdD1UcnVlOkV4aXQgRnVuY3Rpb24NCg0KCQlJZiBJUD0iIiBUaGVuDQoJCQlJUD1HZXRSZWFsbHlJUCgpDQoJCQlBZ2VudD1SZXF1ZXN0LlNlcnZlclZhcmlhYmxlcygiSFRUUF9VU0VSX0FHRU5UIikNCgkJRW5kIElmDQoJCQ0KCQlJZiBMZW4oSG9tZVBhZ2UpPjAgVGhlbg0KCQkJSWYgSW5TdHIoSG9tZVBhZ2UsImh0dHA6Ly8iKT0wIFRoZW4gSG9tZVBhZ2U9Imh0dHA6Ly8iICYgSG9tZVBhZ2UNCgkJRW5kIElmDQoNCgkJJ+ajgOafpeWPguaVsA0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKGxvZ19JRCwiaW50IiwwKQ0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKEF1dGhvcklELCJpbnQiLDApDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoUG9zdFRpbWUsImR0bSIsR2V0VGltZShOb3coKSkpDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoUGFyZW50SUQsImludCIsMCkNCgkJQ2FsbCBDaGVja1BhcmFtZXRlcihJc0NoZWNrLCJib29sIixGYWxzZSkNCg0KCQlJZiBQYXJlbnRJRD0iIiBUaGVuIFBhcmVudElEPTANCgkJQXV0aG9yPUZpbHRlclNRTChBdXRob3IpDQoJCUNvbnRlbnQ9RmlsdGVyU1FMKENvbnRlbnQpDQoJCUVtYWlsPUZpbHRlclNRTChFbWFpbCkNCgkJSG9tZVBhZ2U9RmlsdGVyU1FMKEhvbWVQYWdlKQ0KDQoJCVBvc3RUaW1lPUZpbHRlclNRTChQb3N0VGltZSkNCgkJSVA9RmlsdGVyU1FMKElQKQ0KCQlBZ2VudD1GaWx0ZXJTUUwoQWdlbnQpDQoNCgkJUmVwbHk9RmlsdGVyU1FMKFJlcGx5KQ0KCQlMYXN0UmVwbHlJUD1GaWx0ZXJTUUwoTGFzdFJlcGx5SVApDQoNCgkJJ+S9nOiAheS4jeiDveS4uuepug0KCQlJZiBMZW4oQXV0aG9yKT0wIFRoZW4gQ2FsbCAgU2hvd0Vycm9yKDE1KQ0KCQknSWYgTGVuKENvbnRlbnQpPTAgVGhlbiBDYWxsICBTaG93RXJyb3IoNDYpDQoJCSdJZiBMZW4oQ29udGVudCk+WkNfQ09OVEVOVF9NQVggVGhlbiBDYWxsICBTaG93RXJyb3IoNDYpDQoNCgkJQXV0aG9yPVRyYW5zZmVySFRNTChBdXRob3IsIltodG1sLWZvcm1hdF0iKQ0KCQlFbWFpbD1UcmFuc2ZlckhUTUwoRW1haWwsIltodG1sLWZvcm1hdF0iKQ0KCQlIb21lUGFnZT1UcmFuc2ZlckhUTUwoSG9tZVBhZ2UsIltodG1sLWZvcm1hdF0iKQ0KCQlDb250ZW50PVRyYW5zZmVySFRNTChDb250ZW50LCJbaHRtbC1mb3JtYXRdIikNCg0KCQlJZiBMZW4oQXV0aG9yKT5aQ19VU0VSTkFNRV9NQVggVGhlbiBDYWxsICBTaG93RXJyb3IoMTUpDQoJCUlmIExlbihFbWFpbCk+WkNfRU1BSUxfTUFYIFRoZW4gQ2FsbCAgU2hvd0Vycm9yKDI5KQ0KCQlJZiBMZW4oSG9tZVBhZ2UpPlpDX0hPTUVQQUdFX01BWCBUaGVuIENhbGwgIFNob3dFcnJvcigzMCkNCg0KCQlJZiBOb3QgQ2hlY2tSZWdFeHAoQXV0aG9yLCJbdXNlcm5hbWVdIikgVGhlbiBDYWxsICBTaG93RXJyb3IoMTUpDQoNCgkJSUYgTGVuKEVtYWlsKT4wIFRoZW4NCgkJCUlmIE5vdCBDaGVja1JlZ0V4cChFbWFpbCwiW2VtYWlsXSIpIFRoZW4gQ2FsbCAgU2hvd0Vycm9yKDI5KQ0KCQlFbmQgSWYNCg0KCQlJRiBMZW4oSG9tZVBhZ2UpPjAgVGhlbg0KCQkJSWYgTm90IENoZWNrUmVnRXhwKEhvbWVQYWdlLCJbaG9tZXBhZ2VdIikgVGhlbiBDYWxsICBTaG93RXJyb3IoMzApDQoJCUVuZCBJZg0KDQoJCURpbSBvYmpSUw0KCQlEaW0gc3RyU3BhbUlQDQoJCURpbSBzdHJTcGFtQ29udGVudA0KDQoJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBbY29tbV9JUF0sW2NvbW1fQ29udGVudF0gRlJPTSBbYmxvZ19Db21tZW50XSBXSEVSRSBbY29tbV9JRF09ICggU0VMRUNUIE1BWChjb21tX0lEKSBGUk9NIFtibG9nX0NvbW1lbnRdICkiKQ0KDQoJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCgkJCXN0clNwYW1JUD1vYmpSUygiY29tbV9JUCIpDQoJCQlzdHJTcGFtQ29udGVudD1vYmpSUygiY29tbV9Db250ZW50IikNCgkJRW5kIElmDQoNCgkJSWYgSXNEYXRlKExhc3RSZXBseVRpbWUpPUZhbHNlIFRoZW4gTGFzdFJlcGx5VGltZT1HZXRUaW1lKE5vdygpKQ0KDQoJCW9ialJTLkNsb3NlDQoJCVNldCBvYmpSUz1Ob3RoaW5nDQoNCgkJSWYgKElEPTApIEFuZCAoc3RyU3BhbUlQPUlQKSBBbmQgKHN0clNwYW1Db250ZW50PUNvbnRlbnQpIFRoZW4NCgkJCUNhbGwgU2hvd0Vycm9yKDM5KQ0KCQlFbmQgSWYNCg0KCQlJZiBJRD0wIFRoZW4NCgkJCW9iakNvbm4uRXhlY3V0ZSgiSU5TRVJUIElOVE8gW2Jsb2dfQ29tbWVudF0oW2xvZ19JRF0sW2NvbW1fQXV0aG9ySURdLFtjb21tX0F1dGhvcl0sW2NvbW1fQ29udGVudF0sW2NvbW1fRW1haWxdLFtjb21tX0hvbWVQYWdlXSxbY29tbV9JUF0sW2NvbW1fUG9zdFRpbWVdLFtjb21tX0FnZW50XSxbY29tbV9SZXBseV0sW2NvbW1fTGFzdFJlcGx5SVBdLFtjb21tX0xhc3RSZXBseVRpbWVdLFtjb21tX1BhcmVudElEXSxbY29tbV9Jc0NoZWNrXSxbY29tbV9NZXRhXSkgVkFMVUVTICgiJmxvZ19JRCYiLCImQXV0aG9ySUQmIiwnIiZBdXRob3ImIicsJyImQ29udGVudCYiJywnIiZFbWFpbCYiJywnIiZIb21lUGFnZSYiJywnIiZJUCYiJywnIiZQb3N0VGltZSYiJywnIiZBZ2VudCYiJywnIiZSZXBseSYiJywnIiZMYXN0UmVwbHlJUCYiJywnIiZMYXN0UmVwbHlUaW1lJiInLCciJlBhcmVudElEJiInLCImQ0xuZyhJc0NoZWNrKSYiLCciJk1ldGFTdHJpbmcmIicpIikNCgkJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBNQVgoW2NvbW1fSURdKSBGUk9NIFtibG9nX0NvbW1lbnRdIikNCgkJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCgkJCQlJRD1vYmpSUygwKQ0KCQkJRW5kIElmDQoJCQlTZXQgb2JqUlM9Tm90aGluZw0KCQlFbHNlDQoJCQlvYmpDb25uLkV4ZWN1dGUoIlVQREFURSBbYmxvZ19Db21tZW50XSBTRVQgW2xvZ19JRF09IiZsb2dfSUQmIiwgW2NvbW1fQXV0aG9ySURdPSImQXV0aG9ySUQmIixbY29tbV9BdXRob3JdPSciJkF1dGhvciYiJyxbY29tbV9Db250ZW50XT0nIiZDb250ZW50JiInLFtjb21tX0VtYWlsXT0nIiZFbWFpbCYiJyxbY29tbV9Ib21lUGFnZV09JyImSG9tZVBhZ2UmIicsW2NvbW1fSVBdPSciJklQJiInLFtjb21tX1Bvc3RUaW1lXT0nIiZQb3N0VGltZSYiJyxbY29tbV9BZ2VudF09JyImQWdlbnQmIicsW2NvbW1fUmVwbHldPSciJlJlcGx5JiInLFtjb21tX0xhc3RSZXBseUlQXT0nIiZMYXN0UmVwbHlJUCYiJyxbY29tbV9MYXN0UmVwbHlUaW1lXT0nIiZMYXN0UmVwbHlUaW1lJiInLFtjb21tX1BhcmVudElEXT0nIiZQYXJlbnRJRCYiJyxbY29tbV9Jc0NoZWNrXT0iJkNMbmcoSXNDaGVjaykmIixbY29tbV9NZXRhXT0nIiZNZXRhU3RyaW5nJiInIFdIRVJFIFtjb21tX0lEXSA9IiAmIElEKQ0KCQlFbmQgSWYNCg0KCQlQb3N0PVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gRGVsKCkNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVENvbW1lbnRfRGVsKElELGxvZ19JRCxBdXRob3JJRCxBdXRob3IsQ29udGVudCxFbWFpbCxIb21lUGFnZSxQb3N0VGltZSxJUCxBZ2VudCxSZXBseSxMYXN0UmVwbHlJUCxMYXN0UmVwbHlUaW1lLFBhcmVudElELElzQ2hlY2ssTWV0YVN0cmluZykNCg0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKElELCJpbnQiLDApDQoJCUlmIChJRD0wKSBUaGVuIERlbD1GYWxzZTpFeGl0IEZ1bmN0aW9uDQoJCW9iakNvbm4uRXhlY3V0ZSgiREVMRVRFIEZST00gW2Jsb2dfQ29tbWVudF0gV0hFUkUgW2NvbW1fSURdID0iICYgSUQpDQoJCURlbD1UcnVlDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBMb2FkSW5mb0J5SUQoY29tbV9JRCkNCg0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKGNvbW1fSUQsImludCIsMCkNCg0KCQlEaW0gb2JqUlMNCgkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFtjb21tX0lEXSxbbG9nX0lEXSxbY29tbV9BdXRob3JJRF0sW2NvbW1fQXV0aG9yXSxbY29tbV9Db250ZW50XSxbY29tbV9FbWFpbF0sW2NvbW1fSG9tZVBhZ2VdLFtjb21tX1Bvc3RUaW1lXSxbY29tbV9JUF0sW2NvbW1fQWdlbnRdLFtjb21tX1JlcGx5XSxbY29tbV9MYXN0UmVwbHlJUF0sW2NvbW1fTGFzdFJlcGx5VGltZV0sW2NvbW1fUGFyZW50SURdLFtjb21tX0lzQ2hlY2tdLFtjb21tX01ldGFdIEZST00gW2Jsb2dfQ29tbWVudF0gV0hFUkUgW2NvbW1fSURdPSIgJiBjb21tX0lEKQ0KDQoJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCg0KCQkJSUQ9b2JqUlMoImNvbW1fSUQiKQ0KCQkJbG9nX0lEPW9ialJTKCJsb2dfSUQiKQ0KCQkJQXV0aG9ySUQ9b2JqUlMoImNvbW1fQXV0aG9ySUQiKQ0KCQkJQXV0aG9yPW9ialJTKCJjb21tX0F1dGhvciIpDQoJCQlDb250ZW50PW9ialJTKCJjb21tX0NvbnRlbnQiKQ0KCQkJRW1haWw9b2JqUlMoImNvbW1fRW1haWwiKQ0KCQkJSG9tZVBhZ2U9b2JqUlMoImNvbW1fSG9tZVBhZ2UiKQ0KCQkJUG9zdFRpbWU9b2JqUlMoImNvbW1fUG9zdFRpbWUiKQ0KCQkJSVA9b2JqUlMoImNvbW1fSVAiKQ0KCQkJQWdlbnQ9b2JqUlMoImNvbW1fQWdlbnQiKQ0KCQkJUmVwbHk9b2JqUlMoImNvbW1fUmVwbHkiKQ0KCQkJTGFzdFJlcGx5SVA9b2JqUlMoImNvbW1fTGFzdFJlcGx5SVAiKQ0KCQkJTGFzdFJlcGx5VGltZT1vYmpSUygiY29tbV9MYXN0UmVwbHlUaW1lIikNCgkJCVBhcmVudElEPW9ialJTKCJjb21tX1BhcmVudElEIikNCgkJCUlzQ2hlY2s9b2JqUlMoImNvbW1fSXNDaGVjayIpDQoJCQlNZXRhU3RyaW5nPW9ialJTKCJjb21tX01ldGEiKQ0KDQoJCQlMb2FkSW5mb0J5SUQ9VHJ1ZQ0KDQoJCUVuZCBJZg0KDQoJCW9ialJTLkNsb3NlDQoJCVNldCBvYmpSUz1Ob3RoaW5nDQoNCgkJSWYgSXNOdWxsKEhvbWVQYWdlKSBUaGVuIEhvbWVQYWdlPSIiDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RDb21tZW50X0xvYWRJbmZvQnlJRChJRCxsb2dfSUQsQXV0aG9ySUQsQXV0aG9yLENvbnRlbnQsRW1haWwsSG9tZVBhZ2UsUG9zdFRpbWUsSVAsQWdlbnQsUmVwbHksTGFzdFJlcGx5SVAsTGFzdFJlcGx5VGltZSxQYXJlbnRJRCxJc0NoZWNrLE1ldGFTdHJpbmcpDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIExvYWRJbmZvQnlBcnJheShhcnlDb21tSW5mbykNCg0KCQlJZiBJc0FycmF5KGFyeUNvbW1JbmZvKT1UcnVlIFRoZW4NCgkJCUlEPWFyeUNvbW1JbmZvKDApDQoJCQlsb2dfSUQ9YXJ5Q29tbUluZm8oMSkNCgkJCUF1dGhvcklEPWFyeUNvbW1JbmZvKDIpDQoJCQlBdXRob3I9YXJ5Q29tbUluZm8oMykNCgkJCUNvbnRlbnQ9YXJ5Q29tbUluZm8oNCkNCgkJCUVtYWlsPWFyeUNvbW1JbmZvKDUpDQoJCQlIb21lUGFnZT1hcnlDb21tSW5mbyg2KQ0KCQkJUG9zdFRpbWU9YXJ5Q29tbUluZm8oNykNCgkJCUlQPWFyeUNvbW1JbmZvKDgpDQoJCQlBZ2VudD1hcnlDb21tSW5mbyg5KQ0KCQkJUmVwbHk9YXJ5Q29tbUluZm8oMTApDQoJCQlMYXN0UmVwbHlJUD1hcnlDb21tSW5mbygxMSkNCgkJCUxhc3RSZXBseVRpbWU9YXJ5Q29tbUluZm8oMTIpDQoJCQlQYXJlbnRJRD1hcnlDb21tSW5mbygxMykNCgkJCUlzQ2hlY2s9YXJ5Q29tbUluZm8oMTQpDQoJCQlNZXRhU3RyaW5nPWFyeUNvbW1JbmZvKDE1KQ0KDQoJCUVuZCBJZg0KDQoJCUlmIElzTnVsbChIb21lUGFnZSkgVGhlbiBIb21lUGFnZT0iIg0KDQoJCUxvYWRJbmZvQnlBcnJheT1UcnVlDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RDb21tZW50X0xvYWRJbmZvQnlBcnJheShJRCxsb2dfSUQsQXV0aG9ySUQsQXV0aG9yLENvbnRlbnQsRW1haWwsSG9tZVBhZ2UsUG9zdFRpbWUsSVAsQWdlbnQsUmVwbHksTGFzdFJlcGx5SVAsTGFzdFJlcGx5VGltZSxQYXJlbnRJRCxJc0NoZWNrLE1ldGFTdHJpbmcpDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIE1ha2VUZW1wbGF0ZShzdHJDKQ0KDQoJCURpbSBodG1sLGksag0KCQlodG1sPXN0ckMNCg0KCQkncGx1Z2luIG5vZGUNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RDb21tZW50X01ha2VUZW1wbGF0ZV9UZW1wbGF0ZShodG1sKQ0KDQoJCURpbSBhcnlUZW1wbGF0ZVRhZ3NOYW1lKCkNCgkJRGltIGFyeVRlbXBsYXRlVGFnc1ZhbHVlKCkNCg0KCQlSZURpbSBhcnlUZW1wbGF0ZVRhZ3NOYW1lKDI2KQ0KCQlSZURpbSBhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyNikNCg0KCQlJZiBQYXJlbnRJRD0iIiBUaGVuIFBhcmVudElEPTANCg0KCQlEaW0gcw0KCQlJZiBBdXRob3JJRD4wIFRoZW4gDQoJCQlDYWxsIEdldFVzZXJzYnlVc2VySURMaXN0KEF1dGhvcklEKQ0KCQkJSWYgVXNlcnMoQXV0aG9ySUQpLkFsaWFzPSIiIFRoZW4NCgkJCQlzPVVzZXJzKEF1dGhvcklEKS5OYW1lDQoJCQlFbHNlDQoJCQkJcz1Vc2VycyhBdXRob3JJRCkuQWxpYXMNCgkJCUVuZCBJZg0KCQlFbHNlDQoJCQlzPUF1dGhvcg0KCQlFbmQgSWYNCg0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAgMSk9ImFydGljbGUvY29tbWVudC9pZCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoIDEpPUlEDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoICAyKT0iYXJ0aWNsZS9jb21tZW50L25hbWUiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKCAyKT1zDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoICAzKT0iYXJ0aWNsZS9jb21tZW50L3VybCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoIDMpPUhvbWVQYWdlDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoICA0KT0iYXJ0aWNsZS9jb21tZW50L3VybGVuY29kZXIiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKCA0KT1UcmFuc2ZlckhUTUwoSG9tZVBhZ2VGb3JBbnRpU3BhbSwiW2FudGktemNfYmxvZ19ob3N0XSIpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoICA1KT0iYXJ0aWNsZS9jb21tZW50L2VtYWlsIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSggNSk9U2FmZUVtYWlsDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoICA2KT0iYXJ0aWNsZS9jb21tZW50L3Bvc3R0aW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSggNik9UG9zdFRpbWUNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggIDcpPSJhcnRpY2xlL2NvbW1lbnQvY29udGVudCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoIDcpPUh0bWxDb250ZW50ICYgIjwhLS1yZXYiJmlkJiItLT4iICYgIjxhIHN0eWxlPSIiZGlzcGxheTpub25lOyIiIGlkPSIiQWpheENvbW1lbnRFbmQiJmlkJiIiIj48L2E+Ig0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAgOCk9ImFydGljbGUvY29tbWVudC9jb3VudCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoIDgpPSI8IS0tKGNvdW50LS0+IiYgQ291bnQgJiI8IS0tY291bnQpLS0+Ig0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAgOSk9ImFydGljbGUvY29tbWVudC9hdXRob3JpZCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoIDkpPUF1dGhvcklEDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoIDEwKT0iYXJ0aWNsZS9jb21tZW50L2ZpcnN0Y29udGFjdCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMTApPVRyYW5zZmVySFRNTChGaXJzdENvbnRhY3QsIlthbnRpLXpjX2Jsb2dfaG9zdF0iKQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAxMSk9ImFydGljbGUvY29tbWVudC9lbWFpbG1kNSINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMTEpPUVtYWlsTUQ1DQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoIDEyKT0iYXJ0aWNsZS9jb21tZW50L3BhcmVudGlkIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgxMik9UGFyZW50SUQNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggMTMpPSJhcnRpY2xlL2NvbW1lbnQvYXZhdGFyIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgxMyk9QXZhdGFyDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoIDE0KT0iYXJ0aWNsZS9jb21tZW50L3Bvc3R0aW1lL2xvbmdkYXRlIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgxNCk9Rm9ybWF0RGF0ZVRpbWUoUG9zdFRpbWUsdmJMb25nRGF0ZSkNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggMTUpPSJhcnRpY2xlL2NvbW1lbnQvcG9zdHRpbWUvc2hvcnRkYXRlIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgxNSk9Rm9ybWF0RGF0ZVRpbWUoUG9zdFRpbWUsdmJTaG9ydERhdGUpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoIDE2KT0iYXJ0aWNsZS9jb21tZW50L3Bvc3R0aW1lL2xvbmd0aW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgxNik9Rm9ybWF0RGF0ZVRpbWUoUG9zdFRpbWUsdmJMb25nVGltZSkNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggMTcpPSJhcnRpY2xlL2NvbW1lbnQvcG9zdHRpbWUvc2hvcnR0aW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgxNyk9Rm9ybWF0RGF0ZVRpbWUoUG9zdFRpbWUsdmJTaG9ydFRpbWUpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoIDE4KT0iYXJ0aWNsZS9jb21tZW50L3Bvc3R0aW1lL3llYXIiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDE4KT1ZZWFyKFBvc3RUaW1lKQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAxOSk9ImFydGljbGUvY29tbWVudC9wb3N0dGltZS9tb250aCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMTkpPVJpZ2h0KCIwIiZNb250aChQb3N0VGltZSksMikNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggMjApPSJhcnRpY2xlL2NvbW1lbnQvcG9zdHRpbWUvbW9udGhuYW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyMCk9WlZBX01vbnRoKE1vbnRoKFBvc3RUaW1lKSkNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggMjEpPSJhcnRpY2xlL2NvbW1lbnQvcG9zdHRpbWUvZGF5Ig0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyMSk9UmlnaHQoIjAiJkRheShQb3N0VGltZSksMikNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggMjIpPSJhcnRpY2xlL2NvbW1lbnQvcG9zdHRpbWUvd2Vla2RheSINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoMjIpPVdlZWtkYXkoUG9zdFRpbWUpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoIDIzKT0iYXJ0aWNsZS9jb21tZW50L3Bvc3R0aW1lL3dlZWtkYXluYW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyMyk9WlZBX1dlZWsoV2Vla2RheShQb3N0VGltZSkpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoIDI0KT0iYXJ0aWNsZS9jb21tZW50L3Bvc3R0aW1lL2hvdXIiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKDI0KT1SaWdodCgiMCImSG91cihQb3N0VGltZSksMikNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggMjUpPSJhcnRpY2xlL2NvbW1lbnQvcG9zdHRpbWUvbWludXRlIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyNSk9UmlnaHQoIjAiJk1pbnV0ZShQb3N0VGltZSksMikNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggMjYpPSJhcnRpY2xlL2NvbW1lbnQvcG9zdHRpbWUvc2Vjb25kIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSgyNik9UmlnaHQoIjAiJlNlY29uZChQb3N0VGltZSksMikNCg0KCQkncGx1Z2luIG5vZGUNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RDb21tZW50X01ha2VUZW1wbGF0ZV9UZW1wbGF0ZVRhZ3MoYXJ5VGVtcGxhdGVUYWdzTmFtZSxhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSkNCg0KCQlqPVVCb3VuZChhcnlUZW1wbGF0ZVRhZ3NOYW1lKQ0KCQlGb3IgaT0xIHRvIGoNCgkJCWh0bWw9UmVwbGFjZShodG1sLCI8IyIgJiBhcnlUZW1wbGF0ZVRhZ3NOYW1lKGkpICYgIiM+IixhcnlUZW1wbGF0ZVRhZ3NWYWx1ZShpKSkNCgkJTmV4dA0KDQoJCU1ha2VUZW1wbGF0ZT1odG1sDQoNCglFbmQgRnVuY3Rpb24NCg0KCVByaXZhdGUgU3ViIENsYXNzX0luaXRpYWxpemUoKQ0KDQoJCVNldCBNZXRhPU5ldyBUTWV0YQ0KDQoJRW5kIFN1Yg0KDQpFbmQgQ2xhc3MNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAg5a6a5LmJVFRyYWNrQmFja+exuw0KJyDovpPlhaXvvJogICAg5pegDQonIOi/lOWbnu+8miAgICDml6ANCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkNsYXNzIFRUcmFja0JhY2sNCg0KCVB1YmxpYyBJRA0KCVB1YmxpYyBsb2dfSUQNCg0KCVB1YmxpYyBVUkwNCglQdWJsaWMgVGl0bGUNCglQdWJsaWMgQmxvZw0KCVB1YmxpYyBFeGNlcnB0DQoNCglQdWJsaWMgUG9zdFRpbWUNCglQdWJsaWMgSVANCglQdWJsaWMgQWdlbnQNCg0KCVB1YmxpYyBDb3VudA0KCVB1YmxpYyBNZXRhDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IE1ldGFTdHJpbmcNCgkJTWV0YVN0cmluZz1NZXRhLlNhdmVTdHJpbmcNCglFbmQgUHJvcGVydHkNCglQdWJsaWMgUHJvcGVydHkgTGV0IE1ldGFTdHJpbmcocykNCgkJTWV0YS5Mb2FkU3RyaW5nPXMNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBodG1sDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFVybEZvckFudGlTcGFtDQoJCVVybEZvckFudGlTcGFtPVVSTEVuY29kZUZvckFudGlTcGFtKFVybCkNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgSHRtbEV4Y2VycHQNCgkJSHRtbEV4Y2VycHQ9VHJhbnNmZXJIVE1MKEV4Y2VycHQsIltlbnRlcl0iKQ0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFRiWE1MDQoNCglQcml2YXRlIEZ1bmN0aW9uIFJldHVyblRiWE1MKHN0ck1zZykNCg0KCQlEaW0gc3RyWE1MDQoNCgkJc3RyWE1MPSI8P3htbCB2ZXJzaW9uPSIiMS4wIiIgZW5jb2Rpbmc9IiJVVEYtOCIiIHN0YW5kYWxvbmU9IiJ5ZXMiIj8+PHJlc3BvbnNlPjxlcnJvcj4lZTwvZXJyb3I+PG1lc3NhZ2U+JW08L21lc3NhZ2U+PC9yZXNwb25zZT4iDQoNCgkJSWYgc3RyTXNnPSJ1bmRpc2NvdmVyZWQiIFRoZW4n5pyq5Y+R546w55u45bqUSUQNCgkJCXN0clhNTD1SZXBsYWNlKHN0clhNTCwiJWUiLCIxIikNCgkJCXN0clhNTD1SZXBsYWNlKHN0clhNTCwiJW0iLHN0ck1zZykNCgkJRWxzZUlmIHN0ck1zZz0icmVwZXRpdGlvbiIgVGhlbifph43lpI1QSU5HDQoJCQlzdHJYTUw9UmVwbGFjZShzdHJYTUwsIiVlIiwiMSIpDQoJCQlzdHJYTUw9UmVwbGFjZShzdHJYTUwsIiVtIixzdHJNc2cpDQoJCUVsc2VpZiBzdHJNc2c9ImludmFsaWQgcGFyYW1ldGVyIiBUaGVuJ+mdnuazleWPguaVsA0KCQkJc3RyWE1MPVJlcGxhY2Uoc3RyWE1MLCIlZSIsIjEiKQ0KCQkJc3RyWE1MPVJlcGxhY2Uoc3RyWE1MLCIlbSIsc3RyTXNnKQ0KCQlFbHNlaWYgc3RyTXNnPSJub25lIGRhdGEiIFRoZW4n5peg5pWw5o2uDQoJCQlzdHJYTUw9UmVwbGFjZShzdHJYTUwsIiVlIiwiMSIpDQoJCQlzdHJYTUw9UmVwbGFjZShzdHJYTUwsIiVtIixzdHJNc2cpDQoJCUVsc2UnUElORyDmiJDlip8NCgkJCXN0clhNTD1SZXBsYWNlKHN0clhNTCwiJWUiLCIwIikNCgkJCXN0clhNTD1SZXBsYWNlKHN0clhNTCwiJW0iLHN0ck1zZykNCgkJRW5kIElmDQoNCgkJVGJYTUw9c3RyWE1MDQoNCgkJJ1Jlc3BvbnNlLkNvbnRlbnRUeXBlID0gInRleHQvaHRtbCINCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gUG9zdCgpDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RUcmFja0JhY2tfUG9zdChJRCxsb2dfSUQsVVJMLFRpdGxlLEJsb2csRXhjZXJwdCxQb3N0VGltZSxJUCxBZ2VudCxNZXRhU3RyaW5nKQ0KDQoJCURpbSBvYmpSUw0KDQoJCSdDYWxsIFJldHVyblRiWE1MKCJ1bmRpc2NvdmVyZWQiKTpFeGl0IEZ1bmN0aW9uDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIobG9nX0lELCJpbnQiLDApDQoNCgkJSWYgSXNEYXRlKFBvc3RUaW1lKT1GYWxzZSBUaGVuIFBvc3RUaW1lPUdldFRpbWUoTm93KCkpDQoJCUlQPUdldFJlYWxseUlQKCkNCgkJQWdlbnQ9UmVxdWVzdC5TZXJ2ZXJWYXJpYWJsZXMoIkhUVFBfVVNFUl9BR0VOVCIpDQoNCgkJSVA9RmlsdGVyU1FMKElQKQ0KCQlBZ2VudD1GaWx0ZXJTUUwoQWdlbnQpDQoNCgkJVVJMPUZpbHRlclNRTChVUkwpDQoJCVRpdGxlPUZpbHRlclNRTChUaXRsZSkNCgkJQmxvZz1GaWx0ZXJTUUwoQmxvZykNCgkJRXhjZXJwdD1GaWx0ZXJTUUwoRXhjZXJwdCkNCg0KCQlCbG9nPVRyYW5zZmVySFRNTChCbG9nLCJbaHRtbC1mb3JtYXRdIikNCgkJVGl0bGU9VHJhbnNmZXJIVE1MKFRpdGxlLCJbaHRtbC1mb3JtYXRdIikNCgkJRXhjZXJwdD1UcmFuc2ZlckhUTUwoRXhjZXJwdCwiW2h0bWwtZm9ybWF0XVtub2h0bWxdIikNCgkJVVJMPVRyYW5zZmVySFRNTChVUkwsIltodG1sLWZvcm1hdF0iKQ0KDQoJCSdsb2dfSUTkuI3og73kuLowDQoJCUlmIChsb2dfSUQ9MCkgVGhlbiBDYWxsIFJldHVyblRiWE1MKCJpbnZhbGlkIHBhcmFtZXRlciIpOlBvc3Q9RmFsc2U6RXhpdCBGdW5jdGlvbg0KCQlJZiBMZW4oVVJMKT0wIFRoZW4gQ2FsbCBSZXR1cm5UYlhNTCgibm9uZSBkYXRhIik6UG9zdD1GYWxzZTpFeGl0IEZ1bmN0aW9uDQoJCUlmIExlbihVUkwpPlpDX0hPTUVQQUdFX01BWCBUaGVuIENhbGwgUmV0dXJuVGJYTUwoInVybCBpcyBsb25nIik6UG9zdD1GYWxzZTpFeGl0IEZ1bmN0aW9uDQoNCgkJSWYgTGVuKEJsb2cpPlpDX0VNQUlMX01BWCBUaGVuIENhbGwgUmV0dXJuVGJYTUwoIm5hbWUgaXMgbG9uZyIpOlBvc3Q9RmFsc2U6RXhpdCBGdW5jdGlvbg0KCQlJZiBMZW4oQmxvZyk9MCBUaGVuIEJsb2c9IlVua25vdyINCgkJSWYgTGVuKEV4Y2VycHQpPTAgVGhlbiBFeGNlcnB0PSIiDQoJCUlmIExlbihFeGNlcnB0KT5aQ19BUlRJQ0xFX0VYQ0VSUFRfTUFYIFRoZW4gRXhjZXJwdD1MZWZ0KEV4Y2VycHQsWkNfQVJUSUNMRV9FWENFUlBUX01BWCkmIi4uLiINCgkJSWYgTGVuKFRpdGxlKT5aQ19IT01FUEFHRV9NQVggVGhlbiBDYWxsIFJldHVyblRiWE1MKCJ0aXRsZSBpcyBsb25nIik6UG9zdD1GYWxzZTpFeGl0IEZ1bmN0aW9uDQoJCUlmIExlbihUaXRsZSk9MCBUaGVuIFRpdGxlPVVSTA0KDQoNCgkn5qOA5p+lSUTmmK/lkKblrZjlnKgNCgkJJ1NldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCAqIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgW2xvZ19JRF09IiAmIGxvZ19JRCkNCgkJJ0lmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCgkJJ0Vsc2UNCgkJJwlvYmpSUy5jbG9zZQ0KCQknCUNhbGwgcmV0dXJuVGJYTUwoInVuZGlzY292ZXJlZCIpDQoJCScJRXhpdCBGdW5jdGlvbg0KCQknRW5kIElmDQoJCSdvYmpSUy5DbG9zZQ0KCQknU2V0IG9ialJTPU5vdGhpbmcNCg0KCSfmo4Dmn6XmmK/lkKblt7JUQui/hw0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgKiBGUk9NIFtibG9nX1RyYWNrQmFja10gV0hFUkUgW2xvZ19JRF09IiAmIGxvZ19JRCAmICIgYW5kIFt0Yl91cmxdPSciICYgVVJMICYgIiciKQ0KCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoJCQlvYmpSUy5jbG9zZQ0KCQkJQ2FsbCByZXR1cm5UYlhNTCgicmVwZXRpdGlvbiIpDQoJCQlFeGl0IEZ1bmN0aW9uDQoJCUVuZCBJZg0KCQlvYmpSUy5DbG9zZQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJJ+aOpeaUtlRCDQoNCgkJSWYgSUQ9MCBUaGVuDQoJCQlvYmpDb25uLkV4ZWN1dGUoIklOU0VSVCBJTlRPIFtibG9nX1RyYWNrQmFja10oW2xvZ19JRF0sW3RiX1VSTF0sW3RiX1RpdGxlXSxbdGJfQmxvZ10sW3RiX0V4Y2VycHRdLFt0Yl9Qb3N0VGltZV0sW3RiX0lQXSxbdGJfQWdlbnRdLFt0Yl9NZXRhXSkgVkFMVUVTICgiJmxvZ19JRCYiLCciJlVSTCYiJywnIiZUaXRsZSYiJywnIiZCbG9nJiInLCciJkV4Y2VycHQmIicsJyImUG9zdFRpbWUmIicsJyImSVAmIicsJyImQWdlbnQmIicsJyImTWV0YVN0cmluZyYiJykiKQ0KCQlFbHNlDQoJCQlvYmpDb25uLkV4ZWN1dGUoIlVQREFURSBbYmxvZ19UcmFja0JhY2tdIFNFVCBbbG9nX0lEXT0iJmxvZ19JRCYiLCBbdGJfVVJMXT0nIiZVUkwmIicsW3RiX0V4Y2VycHRdPSciJkV4Y2VycHQmIicsW3RiX1RpdGxlXT0nIiZUaXRsZSYiJyxbdGJfQmxvZ109JyImQmxvZyYiJyxbdGJfSVBdPSciJklQJiInLFt0Yl9Qb3N0VGltZV09JyImUG9zdFRpbWUmIicsW3RiX0FnZW50XT0nIiZBZ2VudCYiJyxbdGJfTWV0YV09JyImTWV0YVN0cmluZyYiJyBXSEVSRSBbdGJfSURdID0iICYgSUQpDQoJCUVuZCBJZg0KCQlDYWxsIHJldHVyblRiWE1MKCJzdWNjZWVkIikNCg0KCQlQb3N0PVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoJUHVibGljIEZ1bmN0aW9uIERlbCgpDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RUcmFja0JhY2tfRGVsKElELGxvZ19JRCxVUkwsVGl0bGUsQmxvZyxFeGNlcnB0LFBvc3RUaW1lLElQLEFnZW50LE1ldGFTdHJpbmcpDQoNCgkJQ2FsbCBDaGVja1BhcmFtZXRlcihJRCwiaW50IiwwKQ0KCQlJZiAoSUQ9MCkgVGhlbiBEZWw9RmFsc2U6RXhpdCBGdW5jdGlvbg0KCQlvYmpDb25uLkV4ZWN1dGUoIkRFTEVURSBGUk9NIFtibG9nX1RyYWNrQmFja10gV0hFUkUgW3RiX0lEXSA9IiAmIElEKQ0KCQlEZWw9VHJ1ZQ0KCUVuZCBGdW5jdGlvbg0KDQoNCglGdW5jdGlvbiBTZW5kKHN0ckFkZHJlc3MpDQoNCgkJRGltIHN0clNlbmRUQg0KCQlzdHJTZW5kVEIgPSAidGl0bGU9IiAmIFNlcnZlci5VUkxFbmNvZGUoVGl0bGUpICYgIiZ1cmw9IiAmIFNlcnZlci5VUkxFbmNvZGUoVVJMKSAmICImZXhjZXJwdD0iICYgU2VydmVyLlVSTEVuY29kZShFeGNlcnB0KSAmICImYmxvZ19uYW1lPSIgJiBTZXJ2ZXIuVVJMRW5jb2RlKEJsb2cpDQoNCgkJRGltIG9ialBpbmcNCgkJU2V0IG9ialBpbmcgPSBTZXJ2ZXIuQ3JlYXRlT2JqZWN0KCJNU1hNTDIuU2VydmVyWE1MSFRUUCIpDQoJCW9ialBpbmcuU2V0VGltZU91dHMgMTAwMDAsIDEwMDAwLCAxMDAwMCwgMTAwMDANCg0KCQlvYmpQaW5nLm9wZW4gIlBPU1QiLHN0ckFkZHJlc3MsRmFsc2UNCg0KCQlvYmpQaW5nLnNldFJlcXVlc3RIZWFkZXIgIkNvbnRlbnQtVHlwZSIsICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiDQoJCW9ialBpbmcuc2VuZCBzdHJTZW5kVEINCgkJJ1Jlc3BvbnNlLkNvbnRlbnRUeXBlID0gInRleHQveG1sIg0KCQknUmVzcG9uc2UuQ2xlYXINCgkJJ1Jlc3BvbnNlLldyaXRlIG9ialBpbmcucmVzcG9uc2VYTUwueG1sDQoJCVNldCBvYmpQaW5nID0gTm90aGluZw0KCQlTZW5kPVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gTG9hZEluZm9CeUlEKHRiX0lEKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIodGJfSUQsImludCIsMCkNCg0KCQlEaW0gb2JqUlMNCgkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFt0Yl9JRF0sW2xvZ19JRF0sW3RiX1VSTF0sW3RiX1RpdGxlXSxbdGJfQmxvZ10sW3RiX0V4Y2VycHRdLFt0Yl9Qb3N0VGltZV0sW3RiX0lQXSxbdGJfQWdlbnRdLFt0Yl9NZXRhXSBGUk9NIFtibG9nX1RyYWNrQmFja10gV0hFUkUgW3RiX0lEXT0iICYgdGJfSUQpDQoNCgkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KDQoJCQlJRD1vYmpSUygidGJfSUQiKQ0KCQkJbG9nX0lEPW9ialJTKCJsb2dfSUQiKQ0KCQkJVVJMPW9ialJTKCJ0Yl9VUkwiKQ0KCQkJVGl0bGU9b2JqUlMoInRiX1RpdGxlIikNCgkJCUJsb2c9b2JqUlMoInRiX0Jsb2ciKQ0KCQkJRXhjZXJwdD1vYmpSUygidGJfRXhjZXJwdCIpDQoJCQlQb3N0VGltZT1vYmpSUygidGJfUG9zdFRpbWUiKQ0KCQkJSVA9b2JqUlMoInRiX0lQIikNCgkJCUFnZW50PW9ialJTKCJ0Yl9BZ2VudCIpDQoJCQlNZXRhU3RyaW5nPW9ialJTKCJ0Yl9NZXRhIikNCg0KCQkJTG9hZEluZm9CeUlEPVRydWUNCg0KCQlFbmQgSWYNCg0KCQlvYmpSUy5DbG9zZQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJCUlmIElzTnVsbChFeGNlcnB0KSBUaGVuIEV4Y2VycHQ9IiINCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVFRyYWNrQmFja19Mb2FkSW5mb0J5SUQoSUQsbG9nX0lELFVSTCxUaXRsZSxCbG9nLEV4Y2VycHQsUG9zdFRpbWUsSVAsQWdlbnQsTWV0YVN0cmluZykNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gTG9hZEluZm9CeUFycmF5KGFyeVRiSW5mbykNCg0KCQlJZiBJc0FycmF5KGFyeVRiSW5mbyk9VHJ1ZSBUaGVuDQoNCgkJCUlEPWFyeVRiSW5mbygwKQ0KCQkJbG9nX0lEPWFyeVRiSW5mbygxKQ0KCQkJVVJMPWFyeVRiSW5mbygyKQ0KCQkJVGl0bGU9YXJ5VGJJbmZvKDMpDQoJCQlCbG9nPWFyeVRiSW5mbyg0KQ0KCQkJRXhjZXJwdD1hcnlUYkluZm8oNSkNCgkJCVBvc3RUaW1lPWFyeVRiSW5mbyg2KQ0KCQkJSVA9YXJ5VGJJbmZvKDcpDQoJCQlBZ2VudD1hcnlUYkluZm8oOCkNCgkJCU1ldGFTdHJpbmc9YXJ5VGJJbmZvKDkpDQoNCgkJRW5kIElmDQoNCgkJSWYgSXNOdWxsKEV4Y2VycHQpIFRoZW4gRXhjZXJwdD0iIg0KDQoJCUxvYWRJbmZvQnlBcnJheT1UcnVlDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RUcmFja0JhY2tfTG9hZEluZm9CeUFycmF5KElELGxvZ19JRCxVUkwsVGl0bGUsQmxvZyxFeGNlcnB0LFBvc3RUaW1lLElQLEFnZW50LE1ldGFTdHJpbmcpDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIE1ha2VUZW1wbGF0ZShzdHJUKQ0KDQoJCURpbSBodG1sLGksag0KCQlodG1sPXN0clQNCg0KCQkncGx1Z2luIG5vZGUNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RUcmFja0JhY2tfTWFrZVRlbXBsYXRlX1RlbXBsYXRlKGh0bWwpDQoNCgkJRGltIGFyeVRlbXBsYXRlVGFnc05hbWUoKQ0KCQlEaW0gYXJ5VGVtcGxhdGVUYWdzVmFsdWUoKQ0KDQoJCVJlRGltIGFyeVRlbXBsYXRlVGFnc05hbWUoNykNCgkJUmVEaW0gYXJ5VGVtcGxhdGVUYWdzVmFsdWUoNykNCg0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAgMSk9ImFydGljbGUvdHJhY2tiYWNrL2lkIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSggMSk9SUQNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggIDIpPSJhcnRpY2xlL3RyYWNrYmFjay9uYW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSggMik9QmxvZw0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAgMyk9ImFydGljbGUvdHJhY2tiYWNrL3VybCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoIDMpPVRyYW5zZmVySFRNTChVcmxGb3JBbnRpU3BhbSwiW2FudGktemNfYmxvZ19ob3N0XSIpDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoICA0KT0iYXJ0aWNsZS90cmFja2JhY2svdGl0bGUiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKCA0KT1UaXRsZQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAgNSk9ImFydGljbGUvdHJhY2tiYWNrL3Bvc3R0aW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSggNSk9UG9zdFRpbWUNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggIDYpPSJhcnRpY2xlL3RyYWNrYmFjay9jb250ZW50Ig0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSggNik9SHRtbEV4Y2VycHQNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggIDcpPSJhcnRpY2xlL3RyYWNrYmFjay9jb3VudCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoIDcpPUNvdW50DQoNCgkJJ3BsdWdpbiBub2RlDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UVHJhY2tCYWNrX01ha2VUZW1wbGF0ZV9UZW1wbGF0ZVRhZ3MoYXJ5VGVtcGxhdGVUYWdzTmFtZSxhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSkNCg0KCQlqPVVCb3VuZChhcnlUZW1wbGF0ZVRhZ3NOYW1lKQ0KCQlGb3IgaT0xIHRvIGoNCgkJCWh0bWw9UmVwbGFjZShodG1sLCI8IyIgJiBhcnlUZW1wbGF0ZVRhZ3NOYW1lKGkpICYgIiM+IixhcnlUZW1wbGF0ZVRhZ3NWYWx1ZShpKSkNCgkJTmV4dA0KDQoJCU1ha2VUZW1wbGF0ZT1odG1sDQoNCglFbmQgRnVuY3Rpb24NCg0KCVByaXZhdGUgU3ViIENsYXNzX0luaXRpYWxpemUoKQ0KDQoJCVNldCBNZXRhPU5ldyBUTWV0YQ0KDQoJRW5kIFN1Yg0KDQoNCkVuZCBDbGFzcw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgICDlrprkuYlUVXBMb2FkRmlsZeexuw0KJyDovpPlhaXvvJogICAg5pegDQonIOi/lOWbnu+8miAgICDml6ANCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkNsYXNzIFRVcExvYWRGaWxlDQoNCglQdWJsaWMgSUQNCglQdWJsaWMgQXV0aG9ySUQNCg0KCVB1YmxpYyBGaWxlU2l6ZQ0KCVB1YmxpYyBGaWxlTmFtZQ0KCVB1YmxpYyBQb3N0VGltZQ0KCVB1YmxpYyBTdHJlYW0NCglQdWJsaWMgRGlyQnlUaW1lDQoJUHVibGljIEZpbGVJbnRybw0KCVB1YmxpYyBRdW90ZQ0KDQoJUHVibGljIE1ldGENCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgTWV0YVN0cmluZw0KCQlNZXRhU3RyaW5nPU1ldGEuU2F2ZVN0cmluZw0KCUVuZCBQcm9wZXJ0eQ0KCVB1YmxpYyBQcm9wZXJ0eSBMZXQgTWV0YVN0cmluZyhzKQ0KCQlNZXRhLkxvYWRTdHJpbmc9cw0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIGh0bWwNCg0KCVB1YmxpYyBBdXRvTmFtZQ0KCVB1YmxpYyBGdWxsUGF0aA0KCVB1YmxpYyBJc01hbnVhbA0KDQoJUHVibGljIEZ1bmN0aW9uIExvYWRJbmZvQnlJRCh1bF9JRCkNCg0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKHVsX0lELCJpbnQiLDApDQoNCgkJRGltIG9ialJTDQoJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBbdWxfSURdLFt1bF9BdXRob3JJRF0sW3VsX0ZpbGVTaXplXSxbdWxfRmlsZU5hbWVdLFt1bF9Qb3N0VGltZV0sW3VsX0ZpbGVJbnRyb10sW3VsX0RpckJ5VGltZV0sW3VsX1F1b3RlXSxbdWxfTWV0YV0gRlJPTSBbYmxvZ19VcExvYWRdIFdIRVJFIFt1bF9JRF09IiAmIHVsX0lEKQ0KDQoJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCg0KCQkJSUQ9b2JqUlMoInVsX0lEIikNCgkJCUF1dGhvcklEPW9ialJTKCJ1bF9BdXRob3JJRCIpDQoJCQlGaWxlU2l6ZT1vYmpSUygidWxfRmlsZVNpemUiKQ0KCQkJRmlsZU5hbWU9b2JqUlMoInVsX0ZpbGVOYW1lIikNCgkJCVBvc3RUaW1lPW9ialJTKCJ1bF9Qb3N0VGltZSIpDQoJCQlGaWxlSW50cm89b2JqUlMoInVsX0ZpbGVJbnRybyIpDQoJCQlEaXJCeVRpbWU9b2JqUlMoInVsX0RpckJ5VGltZSIpDQoJCQlRdW90ZT1vYmpSUygidWxfUXVvdGUiKQ0KCQkJTWV0YVN0cmluZz1vYmpSUygidWxfTWV0YSIpDQoNCgkJCSdJZiBJc051bGwoRGlyQnlUaW1lKSBPciBEaXJCeVRpbWU9IiIgVGhlbiBEaXJCeVRpbWU9RmFsc2UNCg0KCQkJTG9hZEluZm9ieUlEPVRydWUNCg0KCQlFbmQgSWYNCg0KCQlvYmpSUy5DbG9zZQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UVXBMb2FkRmlsZV9Mb2FkSW5mb0J5SUQoSUQsQXV0aG9ySUQsRmlsZVNpemUsRmlsZU5hbWUsUG9zdFRpbWUsRmlsZUludHJvLERpckJ5VGltZSxRdW90ZSxNZXRhKQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBMb2FkSW5mb0J5QXJyYXkoYXJ5VUxJbmZvKQ0KDQoJCUlmIElzQXJyYXkoYXJ5VUxJbmZvKT1UcnVlIFRoZW4NCg0KCQkJSUQ9YXJ5VUxJbmZvKDApDQoJCQlBdXRob3JJRD1hcnlVTEluZm8oMSkNCgkJCUZpbGVTaXplPWFyeVVMSW5mbygyKQ0KCQkJRmlsZU5hbWU9YXJ5VUxJbmZvKDMpDQoJCQlQb3N0VGltZT1hcnlVTEluZm8oNCkNCgkJCUZpbGVJbnRybz1hcnlVTEluZm8oNSkNCgkJCURpckJ5VGltZT1hcnlVTEluZm8oNikNCgkJCVF1b3RlPWFyeVVMSW5mbyg3KQ0KCQkJTWV0YVN0cmluZz1hcnlVTEluZm8oOCkNCg0KCQlFbmQgSWYNCg0KCQlMb2FkSW5mb0J5QXJyYXk9VHJ1ZQ0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UVXBMb2FkRmlsZV9Mb2FkSW5mb0J5QXJyYXkoSUQsQXV0aG9ySUQsRmlsZVNpemUsRmlsZU5hbWUsUG9zdFRpbWUsRmlsZUludHJvLERpckJ5VGltZSxRdW90ZSxNZXRhKQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBVcExvYWRfRm9ybSgpDQoNCgkJRGltIGksag0KCQlEaW0geCx5LHoNCgkJRGltIGludEZvcm1TaXplDQoJCURpbSBiaW5Gb3JtRGF0YQ0KCQlEaW0gc3RyRmlsZU5hbWUNCg0KCQlEaW0gcyx0DQoNCgkJaW50Rm9ybVNpemUgPSBSZXF1ZXN0LlRvdGFsQnl0ZXMNCgkJYmluRm9ybURhdGEgPSBSZXF1ZXN0LkJpbmFyeVJlYWQoaW50Rm9ybVNpemUpDQoNCgkJaT0wDQoJCWk9SW5zdHJCKGJpbkZvcm1EYXRhLENockIoMTMpJkNockIoMTApJkNockIoMTMpJkNockIoMTApKQ0KCQlJZiBpPjAgVGhlbiBpPWkrMw0KCQl0PUluc3RyQihiaW5Gb3JtRGF0YSxDaHJCKDEzKSZDaHJCKDEwKSkNCgkJcz1NaWRiKGJpbkZvcm1EYXRhLDEsdCkNCgkJdD1JbnN0ckIoYmluRm9ybURhdGEsQ2hyQigxMykmQ2hyQigxMCkmcykNCgkJaj10DQoNCgkJSWYgTGVuKFJlcXVlc3QuUXVlcnlTdHJpbmcoImZpbGVuYW1lIikpPjAgVGhlbg0KCQkJc3RyRmlsZU5hbWU9UmVxdWVzdC5RdWVyeVN0cmluZygiZmlsZW5hbWUiKQ0KCQlFbHNlDQoJCQl4PUluc3RyQihiaW5Gb3JtRGF0YSxDaHJCKCZINjYpJkNockIoJkg2OSkmQ2hyQigmSDZDKSZDaHJCKCZINjUpJkNockIoJkg2RSkmQ2hyQigmSDYxKSZDaHJCKCZINkQpJkNockIoJkg2NSkmQ2hyQigmSDNEKSZDaHJCKCZIMjIpKQ0KCQkJeT1JbnN0ckIoeCsxMSxiaW5Gb3JtRGF0YSxDaHJCKCZIMjIpKQ0KCQkJRm9yIHo9MSB0byB5LXgtMTANCgkJCQlzdHJGaWxlTmFtZT1zdHJGaWxlTmFtZSAmIENocihBc2NCKE1pZEIoYmluRm9ybURhdGEseCt6KzksMSkpKQ0KCQkJTmV4dA0KCQlFbmQgSWYNCg0KCQlEaW0gb2JqU3RyZWFtVXANCgkJU2V0IG9ialN0cmVhbVVwID0gU2VydmVyLkNyZWF0ZU9iamVjdCgiQURPREIuU3RyZWFtIikNCg0KCQlXaXRoIG9ialN0cmVhbVVwDQoJCQkuVHlwZSA9IGFkVHlwZUJpbmFyeQ0KCQkJLk1vZGUgPSBhZE1vZGVSZWFkV3JpdGUNCgkJCS5PcGVuDQoJCQkuUG9zaXRpb24gPSAwDQoJCQkuV3JpdGUgYmluRm9ybURhdGENCgkJCS5Qb3NpdGlvbiA9IGkNCgkJCVN0cmVhbT0uUmVhZChqLWktMSkNCgkJCS5DbG9zZQ0KCQlFbmQgV2l0aA0KDQoJCUZpbGVOYW1lPXN0ckZpbGVOYW1lDQoJCUZpbGVTaXplPUxlbkIoU3RyZWFtKQ0KDQoJCVVwTG9hZF9Gb3JtPVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gVXBMb2FkKCkNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVFVwTG9hZEZpbGVfVXBMb2FkKElELEF1dGhvcklELEZpbGVTaXplLEZpbGVOYW1lLFBvc3RUaW1lLEZpbGVJbnRybyxEaXJCeVRpbWUsUXVvdGUsTWV0YSkNCg0KCQlEaXJCeVRpbWU9VHJ1ZQ0KDQoJCUlmIElzTWFudWFsPUZhbHNlIFRoZW4NCgkJCUNhbGwgVXBMb2FkX0Zvcm0oKQ0KCQlFbmQgSWYNCg0KCQlJZiBJblN0clJldihGaWxlTmFtZSwiXCIpPjAgVGhlbg0KCQkJRmlsZU5hbWU9TWlkKEZpbGVOYW1lLEluU3RyUmV2KEZpbGVOYW1lLCJcIikrMSkNCgkJRW5kIElmDQoNCgkJSWYgSW5TdHJSZXYoRmlsZU5hbWUsIi8iKT4wIFRoZW4NCgkJCUZpbGVOYW1lPU1pZChGaWxlTmFtZSxJblN0clJldihGaWxlTmFtZSwiLyIpKzEpDQoJCUVuZCBJZg0KDQoJCUZpbGVOYW1lPVRyYW5zZmVySFRNTChGaWxlTmFtZSwiW2ZpbGVuYW1lXSIpDQoNCgkJJ+i2heWHuuexu+Wei+mZkOWItg0KCQlJZiBOb3QgQ2hlY2tSZWdFeHAoTENhc2UoRmlsZU5hbWUpLCJcLigiJiBaQ19VUExPQURfRklMRVRZUEUgJiIpJCIpIFRoZW4gQ2FsbCBTaG93RXJyb3IoMjYpDQoNCgkJJ+i2heWHuuWkp+Wwj+mZkOWItg0KCQlJZiBGaWxlU2l6ZT5aQ19VUExPQURfRklMRVNJWkUgVGhlbiBDYWxsIFNob3dFcnJvcigyNykNCg0KCQlGaWxlTmFtZT1GaWx0ZXJTUUwoRmlsZU5hbWUpDQoNCgkJSWYgQXV0b05hbWU9VHJ1ZSBUaGVuDQoJCQlSYW5kb21pemUNCgkJCUZpbGVOYW1lPVllYXIoR2V0VGltZShOb3coKSkpICYgUmlnaHQoIjAiJk1vbnRoKEdldFRpbWUoTm93KCkpKSwyKSAmIFJpZ2h0KCIwIiZEYXkoR2V0VGltZShOb3coKSkpLDIpICYgUmlnaHQoIjAiJkhvdXIoR2V0VGltZShOb3coKSkpLDIpICYgUmlnaHQoIjAiJk1pbnV0ZShHZXRUaW1lKE5vdygpKSksMikgJiBSaWdodCgiMCImU2Vjb25kKEdldFRpbWUoTm93KCkpKSwyKSAmIEludCg5ICogUm5kKSAmIEludCg5ICogUm5kKSAmIEludCg5ICogUm5kKSAmIEludCg5ICogUm5kKSAmIFJpZ2h0KEZpbGVOYW1lLExlbihGaWxlTmFtZSktSW5TdHJSZXYoRmlsZU5hbWUsIi4iKSsxKQ0KCQlFbmQgSWYNCg0KCQlGaWxlSW50cm89RmlsdGVyU1FMKEZpbGVJbnRybykNCg0KCQlEaW0gb2JqUlMNCgkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUICogRlJPTSBbYmxvZ19VcExvYWRdIFdIRVJFIFt1bF9GaWxlTmFtZV0gPSAnIiAmIEZpbGVOYW1lICYgIiciKQ0KDQoJCUlmIExlbihGaWxlTmFtZSk+MjU1IFRoZW4gRmlsZU5hbWU9UmlnaHQoRmlsZU5hbWUsMjU1KQ0KCQlQb3N0VGltZT1HZXRUaW1lKE5vdygpKQ0KDQoJCW9iakNvbm4uRXhlY3V0ZSgiSU5TRVJUIElOVE8gW2Jsb2dfVXBMb2FkXShbdWxfQXV0aG9ySURdLFt1bF9GaWxlU2l6ZV0sW3VsX0ZpbGVOYW1lXSxbdWxfUG9zdFRpbWVdLFt1bF9GaWxlSW50cm9dLFt1bF9EaXJCeVRpbWVdLFt1bF9RdW90ZV0sW3VsX01ldGFdKSBWQUxVRVMgKCImIEF1dGhvcklEICYiLCImIEZpbGVTaXplICYiLCciJiBGaWxlTmFtZSAmIicsJyImIFBvc3RUaW1lICYiJywnIiZGaWxlSW50cm8mIicsIiZDTG5nKERpckJ5VGltZSkmIiwnIiZRdW90ZSYiJywnIiZNZXRhU3RyaW5nJiInKSIpDQoNCgkJRGltIHN0clVQTE9BRERJUg0KDQoJCXN0clVQTE9BRERJUiA9IFpDX1VQTE9BRF9ESVJFQ1RPUlkmIi8iJlllYXIoR2V0VGltZShOb3coKSkpJiIvIiZNb250aChHZXRUaW1lKE5vdygpKSkNCg0KCQlDYWxsIENyZWF0RGlyZWN0b3J5QnlDdXN0b21EaXJlY3Rvcnkoc3RyVVBMT0FERElSKQ0KDQoJCUZ1bGxQYXRoPUJsb2dQYXRoICYgc3RyVVBMT0FERElSICYiLyIgJiBGaWxlTmFtZQ0KDQoNCgkJSWYgSXNNYW51YWw9RmFsc2UgVGhlbg0KCQkJQ2FsbCBTYXZlRmlsZSgpDQoJCUVuZCBJZg0KDQoNCgkJVXBMb2FkPVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gU2F2ZUZpbGUoKQ0KDQoJCURpbSBvYmpTdHJlYW1GaWxlDQoJCVNldCBvYmpTdHJlYW1GaWxlID0gU2VydmVyLkNyZWF0ZU9iamVjdCgiQURPREIuU3RyZWFtIikNCg0KCQlvYmpTdHJlYW1GaWxlLlR5cGUgPSBhZFR5cGVCaW5hcnkNCgkJb2JqU3RyZWFtRmlsZS5Nb2RlID0gYWRNb2RlUmVhZFdyaXRlDQoJCW9ialN0cmVhbUZpbGUuT3Blbg0KCQlvYmpTdHJlYW1GaWxlLldyaXRlIFN0cmVhbQ0KDQoJCW9ialN0cmVhbUZpbGUuU2F2ZVRvRmlsZSBGdWxsUGF0aCxhZFNhdmVDcmVhdGVPdmVyV3JpdGUNCgkJb2JqU3RyZWFtRmlsZS5DbG9zZQ0KDQoJCVNhdmVGaWxlPVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBEZWwoKQ0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UVXBMb2FkRmlsZV9EZWwoSUQsQXV0aG9ySUQsRmlsZVNpemUsRmlsZU5hbWUsUG9zdFRpbWUsRmlsZUludHJvLERpckJ5VGltZSxRdW90ZSxNZXRhKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoSUQsImludCIsMCkNCg0KCQlEaW0gb2JqUlMsc3RyRmlsZVBhdGgNCg0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgKiBGUk9NIFtibG9nX1VwTG9hZF0gV0hFUkUgW3VsX0lEXSA9ICIgJiBJRCkNCg0KCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoNCg0KCQkJRGltIGZzbw0KCQkJU2V0IGZzbyA9IENyZWF0ZU9iamVjdCgiU2NyaXB0aW5nLkZpbGVTeXN0ZW1PYmplY3QiKQ0KDQoJCQlzdHJGaWxlUGF0aCA9IEJsb2dQYXRoICYgWkNfVVBMT0FEX0RJUkVDVE9SWSAmIi8iICYgb2JqUlMoInVsX0ZpbGVOYW1lIikNCgkJCUNhbGwgRGVsVG9GaWxlKHN0ckZpbGVQYXRoKQ0KDQoNCgkJCXN0ckZpbGVQYXRoID0gQmxvZ1BhdGggJiBaQ19VUExPQURfRElSRUNUT1JZICYgIi8iICYgWWVhcihvYmpSUygidWxfUG9zdFRpbWUiKSkgJiAiLyIgJiBNb250aChvYmpSUygidWxfUG9zdFRpbWUiKSkgJiIvIiAmIG9ialJTKCJ1bF9GaWxlTmFtZSIpDQoJCQlDYWxsIERlbFRvRmlsZShzdHJGaWxlUGF0aCkNCg0KCQkJb2JqQ29ubi5FeGVjdXRlKCJERUxFVEUgRlJPTSBbYmxvZ19VcExvYWRdIFdIRVJFIFt1bF9JRF0gPSIgJiBJRCkNCg0KCQlFbHNlDQoNCgkJCUV4aXQgRnVuY3Rpb24NCg0KCQlFbmQgSWYNCg0KCQlvYmpSUy5DbG9zZQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJCURlbD1UcnVlDQoNCglFbmQgRnVuY3Rpb24NCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgRnVsbFVybA0KDQoJCURpbSBzdHJVUExPQURESVINCg0KCQlzdHJVUExPQURESVIgPSBaQ19VUExPQURfRElSRUNUT1JZJiIvIiZZZWFyKEdldFRpbWUoTm93KCkpKSYiLyImTW9udGgoR2V0VGltZShOb3coKSkpDQoNCgkJRnVsbFVybD1CbG9nSG9zdCAmIHN0clVQTE9BRERJUiAmICIvIiAmIEZpbGVOYW1lDQoNCglFbmQgUHJvcGVydHkNCg0KCVByaXZhdGUgU3ViIENsYXNzX0luaXRpYWxpemUoKQ0KDQoJCVNldCBNZXRhPU5ldyBUTWV0YQ0KCQlBdXRvTmFtZT1GYWxzZQ0KCQlJc01hbnVhbD1GYWxzZQ0KCQkNCg0KCUVuZCBTdWINCg0KDQpFbmQgQ2xhc3MNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KDQoNCg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KJyDnm67nmoTvvJogICAg5a6a5LmJVFRhZ+exuw0KJyDovpPlhaXvvJogICAg5pegDQonIOi/lOWbnu+8miAgICDml6ANCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkNsYXNzIFRUYWcNCg0KCVB1YmxpYyBJRA0KCVB1YmxpYyBOYW1lDQoJUHVibGljIEludHJvDQoJUHVibGljIE9yZGVyDQoJUHVibGljIENvdW50DQoJUHVibGljIEFsaWFzDQoJUHVibGljIFBhcmVudElEDQoJUHVibGljIEZ1bGxVcmwNCglQdWJsaWMgTWV0YQ0KCVB1YmxpYyBUZW1wbGF0ZU5hbWUNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgTWV0YVN0cmluZw0KCQlNZXRhU3RyaW5nPU1ldGEuU2F2ZVN0cmluZw0KCUVuZCBQcm9wZXJ0eQ0KCVB1YmxpYyBQcm9wZXJ0eSBMZXQgTWV0YVN0cmluZyhzKQ0KCQlNZXRhLkxvYWRTdHJpbmc9cw0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIGh0bWwNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgRW5jb2RlTmFtZQ0KCQlFbmNvZGVOYW1lID0gU2VydmVyLlVSTEVuY29kZShOYW1lKQ0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHJpdmF0ZSBGdGVtcGxhdGUNCglQdWJsaWMgUHJvcGVydHkgTGV0IFRlbXBsYXRlKHN0ckZpbGVOYW1lKQ0KCQlGdGVtcGxhdGU9R2V0VGVtcGxhdGUoIlRFTVBMQVRFXyIgJiBzdHJGaWxlTmFtZSkNCglFbmQgUHJvcGVydHkNCglQdWJsaWMgUHJvcGVydHkgR2V0IFRlbXBsYXRlDQoJCUlmIEZ0ZW1wbGF0ZTw+IiIgVGhlbg0KCQkJVGVtcGxhdGUgPSBGdGVtcGxhdGUNCgkJCUV4aXQgUHJvcGVydHkNCgkJRWxzZQ0KCQkJSWYgVGVtcGxhdGVOYW1lPD4iIiBUaGVuDQoJCQkJRGltIHMNCgkJCQlzPUdldFRlbXBsYXRlKCJURU1QTEFURV8iICZUZW1wbGF0ZU5hbWUpDQoJCQkJSWYgczw+IiIgVGhlbg0KCQkJCQlGdGVtcGxhdGUgPSBzDQoJCQkJRWxzZQ0KCQkJCQlGdGVtcGxhdGU9R2V0VGVtcGxhdGUoIlRFTVBMQVRFX0NBVEFMT0ciKQ0KCQkJCUVuZCBJZg0KCQkJRWxzZQ0KCQkJCUZ0ZW1wbGF0ZT1HZXRUZW1wbGF0ZSgiVEVNUExBVEVfQ0FUQUxPRyIpDQoJCQlFbmQgSWYNCgkJCVRlbXBsYXRlID0gRnRlbXBsYXRlDQoJCUVuZCBJZg0KCUVuZCBQcm9wZXJ0eQ0KDQoNCglQdWJsaWMgRnVuY3Rpb24gR2V0RGVmYXVsdFRlbXBsYXRlTmFtZQ0KCQlJZiBUZW1wbGF0ZU5hbWU8PiIiIFRoZW4NCgkJCUdldERlZmF1bHRUZW1wbGF0ZU5hbWU9VGVtcGxhdGVOYW1lDQoJCUVsc2UNCgkJCUdldERlZmF1bHRUZW1wbGF0ZU5hbWU9IkNBVEFMT0ciDQoJCUVuZCBJZg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IEZ1bGxQYXRoDQoJCUZ1bGxQYXRoPVBhcnNlQ3VzdG9tRGlyZWN0b3J5Rm9yUGF0aChGdWxsUmVnZXgsWkNfU1RBVElDX0RJUkVDVE9SWSwiIiwiIiwiIiwiIiwiIixJRCxOYW1lLEVuY29kZU5hbWUpDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFVybA0KDQoJCSdwbHVnaW4gbm9kZQ0KCQliQWN0aW9uX1BsdWdpbl9UVGFnX1VybD1GYWxzZQ0KCQlGb3IgRWFjaCBzQWN0aW9uX1BsdWdpbl9UVGFnX1VybCBpbiBBY3Rpb25fUGx1Z2luX1RUYWdfVXJsDQoJCQlJZiBOb3QgSXNFbXB0eShzQWN0aW9uX1BsdWdpbl9UVGFnX1VybCkgVGhlbiBDYWxsIEV4ZWN1dGUoc0FjdGlvbl9QbHVnaW5fVFRhZ19VcmwpDQoJCQlJZiBiQWN0aW9uX1BsdWdpbl9UVGFnX1VybD1UcnVlIFRoZW4gRXhpdCBQcm9wZXJ0eQ0KCQlOZXh0DQoNCgkJVXJsID1QYXJzZUN1c3RvbURpcmVjdG9yeUZvclVybChGdWxsUmVnZXgsWkNfU1RBVElDX0RJUkVDVE9SWSwiIiwiIiwiIiwiIiwiIixJRCxOYW1lLEVuY29kZU5hbWUpDQoJCUlmIFJpZ2h0KFVybCwxMik9ImRlZmF1bHQuaHRtbCIgVGhlbiBVcmw9TGVmdChVcmwsTGVuKFVybCktMTIpDQoNCgkJVXJsPVJlcGxhY2UoUmVwbGFjZShVcmwsIi8vIiwiLyIpLCI6LyIsIjovLyIsMSwxKQ0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UVGFnX1VybChVcmwpDQoNCglFbmQgUHJvcGVydHkNCg0KDQoJUHVibGljIFByb3BlcnR5IEdldCBTdGF0aWNOYW1lDQoJCVN0YXRpY05hbWUgPUVuY29kZU5hbWUNCgkJJ0lmIElzTnVsbChBbGlhcykgT3IgSXNFbXB0eShBbGlhcykgT3IgQWxpYXM9IiIgVGhlbg0KCQknCVN0YXRpY05hbWUgPSBJRA0KCQknRWxzZQ0KCQknCVN0YXRpY05hbWUgPSBBbGlhcw0KCQknRW5kIElmDQoJRW5kIFByb3BlcnR5DQoNCg0KCVByaXZhdGUgRmZ1bGxyZWdleA0KCVB1YmxpYyBQcm9wZXJ0eSBMZXQgRnVsbFJlZ2V4KHMpDQoJCUZmdWxscmVnZXg9cw0KCUVuZCBQcm9wZXJ0eQ0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgRnVsbFJlZ2V4DQoJCUlmIEZmdWxscmVnZXg8PiIiIFRoZW4gDQoJCQlGdWxsUmVnZXg9RmZ1bGxyZWdleA0KCQlFbHNlDQoJCQlGdWxsUmVnZXg9WkNfVEFHU19SRUdFWA0KCQlFbmQgSWYNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgSHRtbFVybA0KCQlIdG1sVXJsPVRyYW5zZmVySFRNTChVcmwsIltodG1sLWZvcm1hdF0iKQ0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBIdG1sSW50cm8NCgkJSHRtbEludHJvPVRyYW5zZmVySFRNTChJbnRybywiW2h0bWwtZm9ybWF0XSIpDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IEh0bWxOYW1lDQoJCUh0bWxOYW1lPVRyYW5zZmVySFRNTChOYW1lLCJbaHRtbC1mb3JtYXRdIikNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgUnNzVXJsDQoJCVJzc1VybCA9IEJsb2dIb3N0ICYgImZlZWQuYXNwP3RhZ3M9IiAmIElEDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUmVDb3VudA0KDQoJUHVibGljIEZ1bmN0aW9uIFBvc3QoKQ0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UVGFnX1Bvc3QoSUQsTmFtZSxJbnRybyxPcmRlcixDb3VudCxQYXJlbnRJRCxBbGlhcyxUZW1wbGF0ZU5hbWUsRnVsbFVybCxNZXRhU3RyaW5nKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoSUQsImludCIsMCkNCgkJQ2FsbCBDaGVja1BhcmFtZXRlcihPcmRlciwiaW50IiwwKQ0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKFBhcmVudElELCJpbnQiLDApDQoNCgkJTmFtZT1GaWx0ZXJTUUwoTmFtZSkNCgkJTmFtZT1UcmFuc2ZlckhUTUwoTmFtZSwiW25vcm1hbG5hbWVdIikNCgkJSWYgTGVuKE5hbWUpPTAgVGhlbiBQb3N0PUZhbHNlOkV4aXQgRnVuY3Rpb24NCg0KCQlJbnRybz1GaWx0ZXJTUUwoSW50cm8pDQoJCUFsaWFzPUZpbHRlclNRTChBbGlhcykNCgkJJ0ludHJvPVRyYW5zZmVySFRNTChJbnRybywiW2h0bWwtZm9ybWF0XSIpDQoNCgkJVGVtcGxhdGVOYW1lPVVDYXNlKEZpbHRlclNRTChUZW1wbGF0ZU5hbWUpKQ0KCQlJZiBUZW1wbGF0ZU5hbWU9IkNBVEFMT0ciIFRoZW4gVGVtcGxhdGVOYW1lPSIiDQoNCgkJSWYgSUQ9MCBUaGVuDQoJCQlvYmpDb25uLkV4ZWN1dGUoIklOU0VSVCBJTlRPIFtibG9nX1RhZ10oW3RhZ19OYW1lXSxbdGFnX09yZGVyXSxbdGFnX0ludHJvXSxbdGFnX1BhcmVudElEXSxbdGFnX1VSTF0sW3RhZ19UZW1wbGF0ZV0sW3RhZ19NZXRhXSkgVkFMVUVTICgnIiZOYW1lJiInLCImT3JkZXImIiwnIiZJbnRybyYiJywiJlBhcmVudElEJiIsJyImQWxpYXMmIicsJyImVGVtcGxhdGVOYW1lJiInLCciJk1ldGFTdHJpbmcmIicpIikNCgkJCURpbSBvYmpSUw0KCQkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIE1BWChbdGFnX0lEXSkgRlJPTSBbYmxvZ19UYWddIikNCgkJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCgkJCQlJRD1vYmpSUygwKQ0KCQkJRW5kIElmDQoJCQlTZXQgb2JqUlM9Tm90aGluZw0KCQlFbHNlDQoJCQlvYmpDb25uLkV4ZWN1dGUoIlVQREFURSBbYmxvZ19UYWddIFNFVCBbdGFnX05hbWVdPSciJk5hbWUmIicsW3RhZ19PcmRlcl09IiZPcmRlciYiLFt0YWdfSW50cm9dPSciJkludHJvJiInLFt0YWdfUGFyZW50SURdPSImUGFyZW50SUQmIixbdGFnX1VSTF09JyImQWxpYXMmIicsW3RhZ19UZW1wbGF0ZV09JyImVGVtcGxhdGVOYW1lJiInLFt0YWdfTWV0YV09JyImTWV0YVN0cmluZyYiJyBXSEVSRSBbdGFnX0lEXSA9IiAmIElEKQ0KCQlFbmQgSWYNCg0KCQlQb3N0PVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gTG9hZEluZm9CeUlEKHRhZ19JRCkNCg0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKHRhZ19JRCwiaW50IiwwKQ0KDQoJCURpbSBvYmpSUw0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgW3RhZ19JRF0sW3RhZ19OYW1lXSxbdGFnX0ludHJvXSxbdGFnX09yZGVyXSxbdGFnX0NvdW50XSxbdGFnX1BhcmVudElEXSxbdGFnX1VSTF0sW3RhZ19UZW1wbGF0ZV0sW3RhZ19GdWxsVXJsXSxbdGFnX01ldGFdIEZST00gW2Jsb2dfVGFnXSBXSEVSRSBbdGFnX0lEXT0iICYgdGFnX0lEKQ0KDQoJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCg0KCQkJSUQ9b2JqUlMoInRhZ19JRCIpDQoJCQlOYW1lPW9ialJTKCJ0YWdfTmFtZSIpDQoJCQlJbnRybz1vYmpSUygidGFnX0ludHJvIikNCgkJCU9yZGVyPW9ialJTKCJ0YWdfT3JkZXIiKQ0KCQkJQ291bnQ9b2JqUlMoInRhZ19Db3VudCIpDQoJCQlQYXJlbnRJRD1vYmpSUygidGFnX1BhcmVudElEIikNCgkJCUFsaWFzPW9ialJTKCJ0YWdfVVJMIikNCgkJCVRlbXBsYXRlTmFtZT1vYmpSUygidGFnX1RlbXBsYXRlIikNCgkJCUZ1bGxVcmw9b2JqUlMoInRhZ19GdWxsVXJsIikNCgkJCU1ldGFTdHJpbmc9b2JqUlMoInRhZ19NZXRhIikNCg0KCQkJTG9hZEluZm9CeUlEPVRydWUNCg0KCQlFbmQgSWYNCg0KCQlvYmpSUy5DbG9zZQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJCUlmIElzTnVsbChJbnRybykgVGhlbiBJbnRybz0iIg0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9UVGFnX0xvYWRJbmZvQnlJRChJRCxOYW1lLEludHJvLE9yZGVyLENvdW50LFBhcmVudElELEFsaWFzLFRlbXBsYXRlTmFtZSxGdWxsVXJsLE1ldGFTdHJpbmcpDQoNCglFbmQgRnVuY3Rpb24NCg0KCVB1YmxpYyBGdW5jdGlvbiBMb2FkSW5mb0J5QXJyYXkoYXJ5VGFnSW5mbykNCg0KCQlJZiBJc0FycmF5KGFyeVRhZ0luZm8pPVRydWUgVGhlbg0KCQkJSUQ9YXJ5VGFnSW5mbygwKQ0KCQkJTmFtZT1hcnlUYWdJbmZvKDEpDQoJCQlJbnRybz1hcnlUYWdJbmZvKDIpDQoJCQlPcmRlcj1hcnlUYWdJbmZvKDMpDQoJCQlDb3VudD1hcnlUYWdJbmZvKDQpDQoJCQlQYXJlbnRJRD1hcnlUYWdJbmZvKDUpDQoJCQlBbGlhcz1hcnlUYWdJbmZvKDYpDQoJCQlUZW1wbGF0ZU5hbWU9YXJ5VGFnSW5mbyg3KQ0KCQkJRnVsbFVybD1hcnlUYWdJbmZvKDgpDQoJCQlNZXRhU3RyaW5nPWFyeVRhZ0luZm8oOSkNCgkJRW5kIElmDQoNCgkJSWYgSXNOdWxsKEludHJvKSBUaGVuIEludHJvPSIiDQoJCUlmIElzTnVsbChBbGlhcykgVGhlbiBBbGlhcz0iIg0KDQoJCUxvYWRJbmZvQnlBcnJheT1UcnVlDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RUYWdfTG9hZEluZm9CeUFycmF5KElELE5hbWUsSW50cm8sT3JkZXIsQ291bnQsUGFyZW50SUQsQWxpYXMsVGVtcGxhdGVOYW1lLEZ1bGxVcmwsTWV0YVN0cmluZykNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gRGVsKCkNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVFRhZ19EZWwoSUQsTmFtZSxJbnRybyxPcmRlcixDb3VudCxQYXJlbnRJRCxBbGlhcyxUZW1wbGF0ZU5hbWUsRnVsbFVybCxNZXRhU3RyaW5nKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoSUQsImludCIsMCkNCgkJSWYgKElEPTApIFRoZW4gRGVsPUZhbHNlOkV4aXQgRnVuY3Rpb24NCg0KCQlEaW0gcw0KCQlEaW0gaQ0KCQlEaW0gb2JqUlMNCg0KCQlTZXQgb2JqUlM9U2VydmVyLkNyZWF0ZU9iamVjdCgiQURPREIuUmVjb3Jkc2V0IikNCgkJb2JqUlMuQ3Vyc29yVHlwZSA9IGFkT3BlbktleXNldA0KCQlvYmpSUy5Mb2NrVHlwZSA9IGFkTG9ja1JlYWRPbmx5DQoJCW9ialJTLkFjdGl2ZUNvbm5lY3Rpb249b2JqQ29ubg0KCQlvYmpSUy5Tb3VyY2U9IiINCg0KCQlvYmpSUy5PcGVuKCJTRUxFQ1QgW2xvZ19JRF0sW2xvZ190YWddIEZST00gW2Jsb2dfQXJ0aWNsZV0gV0hFUkUgW2xvZ19UYWddIExJS0UgJyV7IiAmIElEICYgIn0lJyIpDQoNCgkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KCQkJRG8gV2hpbGUgTm90IG9ialJTLmVvZg0KCQkJCWk9b2JqUlMoImxvZ19JRCIpDQoJCQkJcz1vYmpSUygibG9nX3RhZyIpDQoJCQkJcz1SZXBsYWNlKHMsInsiJiBJRCAmIn0iLCIiKQ0KCQkJCW9iakNvbm4uRXhlY3V0ZSgiVVBEQVRFIFtibG9nX0FydGljbGVdIFNFVCBbbG9nX3RhZ109JyImIHMgJiInIFdIRVJFIFtsb2dfSURdID0iICYgaSkNCgkJCQlvYmpSUy5Nb3ZlTmV4dA0KCQkJTG9vcA0KCQlFbmQgSWYNCgkJb2JqUlMuQ2xvc2UNCg0KCQlvYmpDb25uLkV4ZWN1dGUoIkRFTEVURSBGUk9NIFtibG9nX1RhZ10gV0hFUkUgW3RhZ19JRF0gPSIgJiBJRCkNCgkJRGVsPVRydWUNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIE1ha2VUZW1wbGF0ZShzKQ0KDQoJCURpbSBodG1sLGksag0KCQlodG1sPXMNCg0KCQkncGx1Z2luIG5vZGUNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RUYWdfTWFrZVRlbXBsYXRlX1RlbXBsYXRlKGh0bWwpDQoNCgkJRGltIGFyeVRlbXBsYXRlVGFnc05hbWUoKQ0KCQlEaW0gYXJ5VGVtcGxhdGVUYWdzVmFsdWUoKQ0KDQoJCVJlRGltIGFyeVRlbXBsYXRlVGFnc05hbWUoNykNCgkJUmVEaW0gYXJ5VGVtcGxhdGVUYWdzVmFsdWUoNykNCg0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAgMSk9ImFydGljbGUvdGFnL2lkIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSggMSk9SUQNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggIDIpPSJhcnRpY2xlL3RhZy9uYW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSggMik9SHRtbE5hbWUNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggIDMpPSJhcnRpY2xlL3RhZy9pbnRybyINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoIDMpPUh0bWxJbnRybw0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAgNCk9ImFydGljbGUvdGFnL2NvdW50Ig0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSggNCk9Q291bnQNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggIDUpPSJhcnRpY2xlL3RhZy91cmwiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKCA1KT1IdG1sVXJsDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoICA2KT0iYXJ0aWNsZS90YWcvZW5jb2RlbmFtZSINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoIDYpPUVuY29kZU5hbWUNCg0KCQkncGx1Z2luIG5vZGUNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RUYWdfTWFrZVRlbXBsYXRlX1RlbXBsYXRlVGFncyhhcnlUZW1wbGF0ZVRhZ3NOYW1lLGFyeVRlbXBsYXRlVGFnc1ZhbHVlKQ0KDQoJCWo9VUJvdW5kKGFyeVRlbXBsYXRlVGFnc05hbWUpDQoJCUZvciBpPTEgdG8gag0KCQkJSWYgSXNOdWxsKGFyeVRlbXBsYXRlVGFnc1ZhbHVlKGkpKT1GYWxzZSBUaGVuDQoJCQkJaHRtbD1SZXBsYWNlKGh0bWwsIjwjIiAmIGFyeVRlbXBsYXRlVGFnc05hbWUoaSkgJiAiIz4iLGFyeVRlbXBsYXRlVGFnc1ZhbHVlKGkpKQ0KCQkJRWxzZQ0KCQkJCWh0bWw9UmVwbGFjZShodG1sLCI8IyIgJiBhcnlUZW1wbGF0ZVRhZ3NOYW1lKGkpICYgIiM+IiwiIikNCgkJCUVuZCBJZg0KCQlOZXh0DQoNCgkJTWFrZVRlbXBsYXRlPWh0bWwNCg0KCUVuZCBGdW5jdGlvbg0KDQoJUHJpdmF0ZSBTdWIgQ2xhc3NfSW5pdGlhbGl6ZSgpDQoNCgkJUmVDb3VudD0wDQoNCgkJU2V0IE1ldGE9TmV3IFRNZXRhDQoNCglFbmQgU3ViDQoNCg0KRW5kIENsYXNzDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIOWumuS5iVRLZXlXb3Jk57G7DQonIOi+k+WFpe+8miAgICDml6ANCicg6L+U5Zue77yaICAgIOaXoA0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KQ2xhc3MgVEtleVdvcmQNCg0KCVB1YmxpYyBJRA0KCVB1YmxpYyBOYW1lDQoJUHVibGljIEludHJvDQoJUHVibGljIFVybA0KDQoJUHVibGljIEZ1bmN0aW9uIFBvc3QoKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoSUQsImludCIsMCkNCg0KCQlOYW1lPUZpbHRlclNRTChOYW1lKQ0KCQlOYW1lPVRyYW5zZmVySFRNTChOYW1lLCJbbm9ybWFsbmFtZV0iKQ0KDQoJCUlmIExlbihOYW1lKT0wIFRoZW4gUG9zdD1GYWxzZTpFeGl0IEZ1bmN0aW9uDQoNCgkJSW50cm89RmlsdGVyU1FMKEludHJvKQ0KCQlJbnRybz1UcmFuc2ZlckhUTUwoSW50cm8sIltodG1sLWZvcm1hdF0iKQ0KDQoJCVVybD1GaWx0ZXJTUUwoVXJsKQ0KCQlJZiBMZW4oVXJsKT0wIFRoZW4gUG9zdD1GYWxzZTpFeGl0IEZ1bmN0aW9uDQoJCUlmIE5vdCBDaGVja1JlZ0V4cChVcmwsIltob21lcGFnZV0iKSBUaGVuIENhbGwgIFNob3dFcnJvcigzMCkNCg0KCQlJZiBJRD0wIFRoZW4NCgkJCW9iakNvbm4uRXhlY3V0ZSgiSU5TRVJUIElOVE8gW2Jsb2dfS2V5d29yZF0oW2tleV9OYW1lXSxba2V5X1VSTF0sW2tleV9JbnRyb10pIFZBTFVFUyAoJyImTmFtZSYiJywnIiZVcmwmIicsJyImSW50cm8mIicpIikNCgkJRWxzZQ0KCQkJb2JqQ29ubi5FeGVjdXRlKCJVUERBVEUgW2Jsb2dfS2V5d29yZF0gU0VUIFtrZXlfTmFtZV09JyImTmFtZSYiJyxba2V5X1VSTF09JyImVXJsJiInLFtrZXlfSW50cm9dPSciJkludHJvJiInIFdIRVJFIFtrZXlfSURdID0iICYgSUQpDQoJCUVuZCBJZg0KDQoJCVBvc3Q9VHJ1ZQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBMb2FkSW5mb0J5SUQoa2V5X0lEKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoa2V5X0lELCJpbnQiLDApDQoNCgkJRGltIG9ialJTDQoJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBba2V5X0lEXSxba2V5X05hbWVdLFtrZXlfSW50cm9dLFtrZXlfVXJsXSBGUk9NIFtibG9nX0tleXdvcmRdIFdIRVJFIFtrZXlfSURdPSIgJiBrZXlfSUQpDQoNCgkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KDQoJCQlJRD1vYmpSUygia2V5X0lEIikNCgkJCU5hbWU9b2JqUlMoImtleV9OYW1lIikNCgkJCUludHJvPW9ialJTKCJrZXlfSW50cm8iKQ0KCQkJVXJsPW9ialJTKCJrZXlfVXJsIikNCg0KCQkJTG9hZEluZm9CeUlEPVRydWUNCg0KCQlFbmQgSWYNCg0KCQlvYmpSUy5DbG9zZQ0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJCUlmIElzTnVsbChJbnRybykgVGhlbiBJbnRybz0iIg0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBMb2FkSW5mb0J5QXJyYXkoYXJ5S2V5V29yZEluZm8pDQoNCgkJSWYgSXNBcnJheShhcnlLZXl3b3JkSW5mbyk9VHJ1ZSBUaGVuDQoNCgkJCUlEPWFyeUtleVdvcmRJbmZvKDApDQoJCQlOYW1lPWFyeUtleVdvcmRJbmZvKDEpDQoJCQlJbnRybz1hcnlLZXlXb3JkSW5mbygyKQ0KCQkJVXJsPWFyeUtleVdvcmRJbmZvKDMpDQoNCgkJRW5kIElmDQoNCgkJSWYgSXNOdWxsKEludHJvKSBUaGVuIEludHJvPSIiDQoNCgkJTG9hZEluZm9CeUFycmF5PVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gRGVsKCkNCg0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKElELCJpbnQiLDApDQoJCUlmIChJRD0wKSBUaGVuIERlbD1GYWxzZTpFeGl0IEZ1bmN0aW9uDQoNCgkJb2JqQ29ubi5FeGVjdXRlKCJERUxFVEUgRlJPTSBbYmxvZ19LZXl3b3JkXSBXSEVSRSBba2V5X0lEXSA9IiAmIElEKQ0KCQlEZWw9VHJ1ZQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KRW5kIENsYXNzDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIOWumuS5iVRSc3MyRXhwb3J057G7IE5ld+eJiA0KJyDovpPlhaXvvJogICAg5pegDQonIOi/lOWbnu+8miAgICDml6ANCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkNsYXNzIFROZXdSc3MyRXhwb3J0DQoNCglQdWJsaWMgVGltZVpvbmUNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgeG1sDQoJCXhtbCA9IG9ialhNTGRvYy54bWwNCglFbmQgUHJvcGVydHkNCg0KCXB1YmxpYyBGc3RyV2ViTGluaw0KCXB1YmxpYyBGc3RyQXV0aG9yDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IFdlYkxpbmsNCgkJV2ViTGluayA9IEZzdHJXZWJMaW5rDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgTGV0IFdlYkxpbmsoc3RyV2ViTGluaykNCgkJRnN0cldlYkxpbmsgPSBzdHJXZWJMaW5rDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IEF1dGhvcg0KCQlBdXRob3IgPSBGc3RyQXV0aG9yDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgTGV0IEF1dGhvcihzdHJBdXRob3IpDQoJCUZzdHJBdXRob3IgPSBzdHJBdXRob3INCglFbmQgUHJvcGVydHkNCg0KCVByaXZhdGUgb2JqWE1MZG9jDQoNCglQcml2YXRlIG9ialhNTHJzcw0KDQoJUHJpdmF0ZSBvYmpYTUxjaGFubmVsDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBBZGRDaGFubmVsQXR0cmlidXRlKHRpdGxlLHZhbHVlKQ0KDQoJCURpbSBvYmpYTUxpdGVtDQoJCVNldCBvYmpYTUxpdGVtID0gb2JqWE1MZG9jLmNyZWF0ZUVsZW1lbnQodGl0bGUpDQoNCgkJSWYgdGl0bGU9InB1YkRhdGUiIFRoZW4gdmFsdWU9UGFyc2VEYXRlRm9yUkZDODIyKHZhbHVlKQ0KDQoJCW9ialhNTGl0ZW0udGV4dD12YWx1ZQ0KCQlvYmpYTUxjaGFubmVsLkFwcGVuZENoaWxkKG9ialhNTGl0ZW0pDQoNCgkJQWRkQ2hhbm5lbEF0dHJpYnV0ZT1UcnVlDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIEFkZEl0ZW0odGl0bGUsYXV0aG9yLGxpbmsscHViRGF0ZSxndWlkLGRlc2NyaXB0aW9uLGNhdGVnb3J5LGNvbW1lbnRzLHdmd19jb21tZW50LHdmd19jb21tZW50UnNzLHRyYWNrYmFja19waW5nKQ0KDQoJCURpbSBvYmpYTUxpdGVtDQoJCVNldCBvYmpYTUxpdGVtID0gb2JqWE1MZG9jLmNyZWF0ZUVsZW1lbnQoIml0ZW0iKQ0KCQlEaW0gb2JqWE1MY2RhdGENCg0KCQlJZihMZW4odGl0bGUpPjApIFRoZW4NCgkJCW9ialhNTGl0ZW0uQXBwZW5kQ2hpbGQob2JqWE1MZG9jLmNyZWF0ZUVsZW1lbnQoInRpdGxlIikpDQoJCQlvYmpYTUxpdGVtLnNlbGVjdFNpbmdsZU5vZGUoInRpdGxlIikudGV4dD10aXRsZQ0KCQlFbmQgSWYNCgkJSWYoTGVuKGF1dGhvcik+MCkgVGhlbg0KCQkJb2JqWE1MaXRlbS5BcHBlbmRDaGlsZChvYmpYTUxkb2MuY3JlYXRlRWxlbWVudCgiYXV0aG9yIikpDQoJCQlvYmpYTUxpdGVtLnNlbGVjdFNpbmdsZU5vZGUoImF1dGhvciIpLnRleHQ9YXV0aG9yDQoJCUVuZCBJZg0KCQlJZihMZW4obGluayk+MCkgVGhlbg0KCQkJb2JqWE1MaXRlbS5BcHBlbmRDaGlsZChvYmpYTUxkb2MuY3JlYXRlRWxlbWVudCgibGluayIpKQ0KCQkJb2JqWE1MaXRlbS5zZWxlY3RTaW5nbGVOb2RlKCJsaW5rIikudGV4dD1saW5rDQoJCUVuZCBJZg0KCQlJZihMZW4ocHViRGF0ZSk+MCkgVGhlbg0KCQkJb2JqWE1MaXRlbS5BcHBlbmRDaGlsZChvYmpYTUxkb2MuY3JlYXRlRWxlbWVudCgicHViRGF0ZSIpKQ0KCQkJb2JqWE1MaXRlbS5zZWxlY3RTaW5nbGVOb2RlKCJwdWJEYXRlIikudGV4dD1QYXJzZURhdGVGb3JSRkM4MjIocHViRGF0ZSkNCgkJRW5kIElmDQoJCUlmKExlbihndWlkKT4wKSBUaGVuDQoJCQlvYmpYTUxpdGVtLkFwcGVuZENoaWxkKG9ialhNTGRvYy5jcmVhdGVFbGVtZW50KCJndWlkIikpDQoJCQlvYmpYTUxpdGVtLnNlbGVjdFNpbmdsZU5vZGUoImd1aWQiKS50ZXh0PWd1aWQNCgkJRW5kIElmDQoJCUlmKExlbihkZXNjcmlwdGlvbik+MCkgVGhlbg0KDQoJCQlvYmpYTUxpdGVtLkFwcGVuZENoaWxkKG9ialhNTGRvYy5jcmVhdGVFbGVtZW50KCJkZXNjcmlwdGlvbiIpKQ0KCQkJU2V0IG9ialhNTGNkYXRhID0gb2JqWE1MZG9jLmNyZWF0ZU5vZGUoImNkYXRhc2VjdGlvbiIsICIiLCIiKQ0KCQkJb2JqWE1MY2RhdGEuTm9kZVZhbHVlPWRlc2NyaXB0aW9uDQoJCQlvYmpYTUxpdGVtLnNlbGVjdFNpbmdsZU5vZGUoImRlc2NyaXB0aW9uIikuQXBwZW5kQ2hpbGQob2JqWE1MY2RhdGEpDQoNCgkJCVNldCBvYmpYTUxjZGF0YSA9IE5vdGhpbmcNCg0KCQlFbmQgSWYNCgkJSWYoTGVuKGNhdGVnb3J5KT4wKSBUaGVuDQoJCQlvYmpYTUxpdGVtLkFwcGVuZENoaWxkKG9ialhNTGRvYy5jcmVhdGVFbGVtZW50KCJjYXRlZ29yeSIpKQ0KCQkJb2JqWE1MaXRlbS5zZWxlY3RTaW5nbGVOb2RlKCJjYXRlZ29yeSIpLnRleHQ9Y2F0ZWdvcnkNCgkJRW5kIElmDQoNCgkJSWYoTGVuKGNvbW1lbnRzKT4wKSBUaGVuDQoJCQlvYmpYTUxpdGVtLkFwcGVuZENoaWxkKG9ialhNTGRvYy5jcmVhdGVFbGVtZW50KCJjb21tZW50cyIpKQ0KCQkJb2JqWE1MaXRlbS5zZWxlY3RTaW5nbGVOb2RlKCJjb21tZW50cyIpLnRleHQ9Y29tbWVudHMNCgkJRW5kIElmDQoJCSdJZihMZW4od2Z3X2NvbW1lbnQpPjApIFRoZW4NCgkJJwlvYmpYTUxpdGVtLkFwcGVuZENoaWxkKG9ialhNTGRvYy5jcmVhdGVFbGVtZW50KCJ3Znc6Y29tbWVudCIpKQ0KCQknCW9ialhNTGl0ZW0uc2VsZWN0U2luZ2xlTm9kZSgid2Z3OmNvbW1lbnQiKS50ZXh0PXdmd19jb21tZW50DQoJCSdFbmQgSWYNCgkJSWYoTGVuKHdmd19jb21tZW50UnNzKT4wKSBUaGVuDQoJCQlvYmpYTUxpdGVtLkFwcGVuZENoaWxkKG9ialhNTGRvYy5jcmVhdGVFbGVtZW50KCJ3Znc6Y29tbWVudFJzcyIpKQ0KCQkJb2JqWE1MaXRlbS5zZWxlY3RTaW5nbGVOb2RlKCJ3Znc6Y29tbWVudFJzcyIpLnRleHQ9d2Z3X2NvbW1lbnRSc3MNCgkJRW5kIElmDQoJCSdJZihMZW4odHJhY2tiYWNrX3BpbmcpPjApIFRoZW4NCgkJJwlvYmpYTUxpdGVtLkFwcGVuZENoaWxkKG9ialhNTGRvYy5jcmVhdGVFbGVtZW50KCJ0cmFja2JhY2s6cGluZyIpKQ0KCQknCW9ialhNTGl0ZW0uc2VsZWN0U2luZ2xlTm9kZSgidHJhY2tiYWNrOnBpbmciKS50ZXh0PXRyYWNrYmFja19waW5nDQoJCSdFbmQgSWYNCg0KCQlvYmpYTUxjaGFubmVsLkFwcGVuZENoaWxkKG9ialhNTGl0ZW0pDQoNCgkJQWRkSXRlbT1UcnVlDQoNCglFbmQgRnVuY3Rpb24NCg0KCVB1YmxpYyBGdW5jdGlvbiBFeGVjdXRlKCkNCg0KCQknUmVzcG9uc2UuQ29udGVudFR5cGUgPSAidGV4dC9odG1sIg0KCQlSZXNwb25zZS5Db250ZW50VHlwZSA9ICJ0ZXh0L3htbCINCgkJUmVzcG9uc2UuQ2xlYXINCgkJUmVzcG9uc2UuV3JpdGUgeG1sDQoNCgkJRXhlY3V0ZT1UcnVlDQoNCglFbmQgRnVuY3Rpb24NCg0KCVB1YmxpYyBGdW5jdGlvbiBTYXZlVG9GaWxlKHN0ckZpbGVOYW1lKQ0KCQlPbiBFcnJvciBSZXN1bWUgTmV4dA0KCQlvYmpYTUxkb2Muc2F2ZShzdHJGaWxlTmFtZSkNCg0KCQlTYXZlVG9GaWxlPVRydWUNCgkJRXJyLkNsZWFyDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCUZ1bmN0aW9uIFBhcnNlRGF0ZUZvclJGQzgyMihkdG1EYXRlKQ0KDQoJCURpbSBkdG1EYXksIGR0bVdlZWtEYXksIGR0bU1vbnRoLCBkdG1ZZWFyDQoJCURpbSBkdG1Ib3VycywgZHRtTWludXRlcywgZHRtU2Vjb25kcw0KDQoJCVNlbGVjdCBDYXNlIFdlZWtEYXkoZHRtRGF0ZSkNCgkJCUNhc2UgMTpkdG1XZWVrRGF5PSJTdW4iDQoJCQlDYXNlIDI6ZHRtV2Vla0RheT0iTW9uIg0KCQkJQ2FzZSAzOmR0bVdlZWtEYXk9IlR1ZSINCgkJCUNhc2UgNDpkdG1XZWVrRGF5PSJXZWQiDQoJCQlDYXNlIDU6ZHRtV2Vla0RheT0iVGh1Ig0KCQkJQ2FzZSA2OmR0bVdlZWtEYXk9IkZyaSINCgkJCUNhc2UgNzpkdG1XZWVrRGF5PSJTYXQiDQoJCUVuZCBTZWxlY3QNCg0KCQlTZWxlY3QgQ2FzZSBNb250aChkdG1EYXRlKQ0KCQkJQ2FzZSAxOmR0bU1vbnRoPSJKYW4iDQoJCQlDYXNlIDI6ZHRtTW9udGg9IkZlYiINCgkJCUNhc2UgMzpkdG1Nb250aD0iTWFyIg0KCQkJQ2FzZSA0OmR0bU1vbnRoPSJBcHIiDQoJCQlDYXNlIDU6ZHRtTW9udGg9Ik1heSINCgkJCUNhc2UgNjpkdG1Nb250aD0iSnVuIg0KCQkJQ2FzZSA3OmR0bU1vbnRoPSJKdWwiDQoJCQlDYXNlIDg6ZHRtTW9udGg9IkF1ZyINCgkJCUNhc2UgOTpkdG1Nb250aD0iU2VwIg0KCQkJQ2FzZSAxMDpkdG1Nb250aD0iT2N0Ig0KCQkJQ2FzZSAxMTpkdG1Nb250aD0iTm92Ig0KCQkJQ2FzZSAxMjpkdG1Nb250aD0iRGVjIg0KCQlFbmQgU2VsZWN0DQoNCgkJZHRtWWVhciA9IFllYXIoZHRtRGF0ZSkNCgkJZHRtRGF5ID0gUmlnaHQoIjAwIiAmIERheShkdG1EYXRlKSwyKQ0KDQoJCWR0bUhvdXJzID0gUmlnaHQoIjAwIiAmIEhvdXIoZHRtRGF0ZSksMikNCgkJZHRtTWludXRlcyA9IFJpZ2h0KCIwMCIgJiBNaW51dGUoZHRtRGF0ZSksMikNCgkJZHRtU2Vjb25kcyA9IFJpZ2h0KCIwMCIgJiBTZWNvbmQoZHRtRGF0ZSksMikNCg0KCQlQYXJzZURhdGVGb3JSRkM4MjIgPSBkdG1XZWVrRGF5ICYgIiwgIiAmIGR0bURheSAmIiAiICYgZHRtTW9udGggJiAiICIgJiBkdG1ZZWFyICYgIiAiICYgZHRtSG91cnMgJiAiOiIgJiBkdG1NaW51dGVzICYgIjoiICYgZHRtU2Vjb25kcyAmICIgIiAmIFRpbWVab25lDQoNCglFbmQgRnVuY3Rpb24NCg0KCScg57G75Yid5aeL5YyWDQoJUHJpdmF0ZSBTdWIgQ2xhc3NfSW5pdGlhbGl6ZSgpDQoNCgkJT24gRXJyb3IgUmVzdW1lIE5leHQNCg0KCQkn5a+5b2JqWE1MZG9j6L+b6KGM5Yid5aeL5YyW77yM5aaC5LiN6IO95bu65a+56LGh5YiZ5oql6ZSZDQoJCVNldCBvYmpYTUxkb2MgPVNlcnZlci5DcmVhdGVPYmplY3QoIk1pY3Jvc29mdC5YTUxET00iKQ0KDQoJCUlmIEVyci5OdW1iZXI8PjAgVGhlbg0KDQoJCUVuZCBJZg0KDQoJCURpbSBvYmpQSQ0KDQoJCSdTZXQgb2JqUEkgPSBvYmpYTUxkb2MuY3JlYXRlUHJvY2Vzc2luZ0luc3RydWN0aW9uKCJ4bWwtc3R5bGVzaGVldCIsInR5cGU9IiJ0ZXh0L2NzcyIiIGhyZWY9IiJ6Yl9zeXN0ZW0vY3NzL3Jzcy5jc3MiIiIpDQoJCSdvYmpYTUxkb2MuaW5zZXJ0QmVmb3JlIG9ialBJLCBvYmpYTUxkb2MuY2hpbGROb2RlcygwKQ0KCQknU2V0IG9ialBJID0gTm90aGluZw0KDQoJCSdTZXQgb2JqUEkgPSBvYmpYTUxkb2MuY3JlYXRlUHJvY2Vzc2luZ0luc3RydWN0aW9uKCJ4bWwtc3R5bGVzaGVldCIsInR5cGU9IiJ0ZXh0L3hzbCIiIGhyZWY9IiJ6Yl9zeXN0ZW0vY3NzL3Jzcy54c2x0IiIiKQ0KCQknb2JqWE1MZG9jLmluc2VydEJlZm9yZSBvYmpQSSwgb2JqWE1MZG9jLmNoaWxkTm9kZXMoMCkNCgkJJ1NldCBvYmpQSSA9IE5vdGhpbmcNCg0KCQlTZXQgb2JqUEkgPSBvYmpYTUxkb2MuY3JlYXRlUHJvY2Vzc2luZ0luc3RydWN0aW9uKCJ4bWwiLCJ2ZXJzaW9uPSIiMS4wIiIgZW5jb2Rpbmc9IiJVVEYtOCIiIHN0YW5kYWxvbmU9IiJ5ZXMiIiIpDQoJCW9ialhNTGRvYy5pbnNlcnRCZWZvcmUgb2JqUEksIG9ialhNTGRvYy5jaGlsZE5vZGVzKDApDQoJCVNldCBvYmpQSSA9IE5vdGhpbmcNCg0KCQlTZXQgb2JqWE1McnNzID0gb2JqWE1MZG9jLmNyZWF0ZUVsZW1lbnQoInJzcyIpDQoNCgkJU2V0IG9ialhNTGNoYW5uZWwgPSBvYmpYTUxkb2MuY3JlYXRlRWxlbWVudCgiY2hhbm5lbCIpDQoNCg0KCQlvYmpYTUxyc3MuQXBwZW5kQ2hpbGQob2JqWE1MY2hhbm5lbCkNCgkJb2JqWE1MZG9jLkFwcGVuZENoaWxkKG9ialhNTHJzcykNCg0KCQlvYmpYTUxyc3Muc2V0QXR0cmlidXRlICJ2ZXJzaW9uIiwiMi4wIg0KCQlvYmpYTUxyc3Muc2V0QXR0cmlidXRlICJ4bWxuczpkYyIsImh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIg0KCQlvYmpYTUxyc3Muc2V0QXR0cmlidXRlICJ4bWxuczp0cmFja2JhY2siLCJodHRwOi8vbWFkc2tpbGxzLmNvbS9wdWJsaWMveG1sL3Jzcy9tb2R1bGUvdHJhY2tiYWNrLyINCgkJb2JqWE1McnNzLnNldEF0dHJpYnV0ZSAieG1sbnM6d2Z3IiwiaHR0cDovL3dlbGxmb3JtZWR3ZWIub3JnL0NvbW1lbnRBUEkvIg0KCQlvYmpYTUxyc3Muc2V0QXR0cmlidXRlICJ4bWxuczpzbGFzaCIsImh0dHA6Ly9wdXJsLm9yZy9yc3MvMS4wL21vZHVsZXMvc2xhc2gvIg0KDQoNCglFbmQgU3ViDQoNCgknIOexu+mHiuaUvg0KCVByaXZhdGUgU3ViIENsYXNzX1Rlcm1pbmF0ZSgpDQoNCgkJU2V0IG9ialhNTHJzcyA9IE5vdGhpbmcNCgkJU2V0IG9ialhNTGRvYyAgPSBOb3RoaW5nDQoNCglFbmQgU3ViDQoNCkVuZCBDbGFzcw0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCg0KDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQonIOebrueahO+8miAgICDlrprkuYlUTWV0YQ0KJyDovpPlhaXvvJogICAg5pegDQonIOi/lOWbnu+8miAgICDml6ANCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkRpbSBtZXRhX3NwbGl0X3N0cmluZ18xDQpEaW0gbWV0YV9zcGxpdF9zdHJpbmdfMg0KbWV0YV9zcGxpdF9zdHJpbmdfMT1DaHIoMSkNCm1ldGFfc3BsaXRfc3RyaW5nXzI9Q2hyKDIpDQpDbGFzcyBUTWV0YQ0KDQoJUHVibGljIE5hbWVzKCkNCglQdWJsaWMgVmFsdWVzKCkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgQ291bnQNCgkJQ291bnQgPSBVQm91bmQobmFtZXMpDQoJRW5kIFByb3BlcnR5DQoNCglQcml2YXRlIEZ1bmN0aW9uIFNhdmUoKQ0KDQoJCURpbSBuLHYNCgkJSWYgVUJvdW5kKG5hbWVzKT4wIFRoZW4NCg0KCQkJJ249Sm9pbihOYW1lcywiPC9uYW1lPjxuYW1lPiIpDQoJCQknbj0iPG5hbWU+IiZuJiI8L25hbWU+Ig0KCQkJJ3Y9Sm9pbihWYWx1ZXMsIjwvdmFsdWU+PHZhbHVlPiIpDQoJCQkndj0iPHZhbHVlPiImdiYiPC92YWx1ZT4iDQoJCQknU2F2ZT0iPG5hbWVzPiImbiYiPC9uYW1lcz4iICYgIjx2YWx1ZXM+IiZ2JiI8L3ZhbHVlcz4iDQoJCQknU2F2ZT0iPHhtbD4iICYgU2F2ZSAmICI8L3htbD4iDQoNCgkJCW49Sm9pbihOYW1lcyxtZXRhX3NwbGl0X3N0cmluZ18xKQ0KCQkJdj1Kb2luKFZhbHVlcyxtZXRhX3NwbGl0X3N0cmluZ18xKQ0KDQoJCQlTYXZlPUpvaW4oQXJyYXkobix2KSxtZXRhX3NwbGl0X3N0cmluZ18yKQ0KDQoJCUVuZCBJZg0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgU2F2ZVN0cmluZw0KCQlTYXZlU3RyaW5nID0gU2F2ZSgpDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgTGV0IExvYWRTdHJpbmcocykNCgkJQ2FsbCBMb2FkKHMpDQoJRW5kIFByb3BlcnR5DQoNCglQcml2YXRlIEZ1bmN0aW9uIExvYWQocykNCg0KCQlJZiBJc051bGwocyk9VHJ1ZSBUaGVuIEV4aXQgRnVuY3Rpb24NCgkJSWYgSXNFbXB0eShzKT1UcnVlIFRoZW4gRXhpdCBGdW5jdGlvbg0KDQoJCURpbSB4LG4sdg0KCQl4PVNwbGl0KHMsbWV0YV9zcGxpdF9zdHJpbmdfMikNCg0KCQlJZiBVQm91bmQoeCk8PjEgVGhlbiBFeGl0IEZ1bmN0aW9uDQoNCgkJbj1TcGxpdCh4KDApLG1ldGFfc3BsaXRfc3RyaW5nXzEpDQoJCXY9U3BsaXQoeCgxKSxtZXRhX3NwbGl0X3N0cmluZ18xKQ0KDQoJCURpbSBpDQoJCVJlRGltIE5hbWVzKFVCb3VuZChuKSkNCgkJUmVEaW0gVmFsdWVzKFVCb3VuZChuKSkNCgkJRm9yIGk9MCBUbyBVQm91bmQobikNCgkJCU5hbWVzKGkpPW4oaSkNCgkJCVZhbHVlcyhpKT12KGkpDQoJCU5leHQNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQcml2YXRlIEZ1bmN0aW9uIExvYWRCeUFycmF5KG4sdikNCg0KCQlEaW0gaQ0KCQlSZURpbSBOYW1lcyhVQm91bmQobikpDQoJCVJlRGltIFZhbHVlcyhVQm91bmQobikpDQoJCUZvciBpPTAgVG8gVUJvdW5kKG4pDQoJCQlOYW1lcyhpKT1uKGkpDQoJCQlWYWx1ZXMoaSk9dihpKQ0KCQlOZXh0DQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIFNldFZhbHVlKG5hbWUsdmFsdWUpDQoNCgkJbmFtZT1UcmltKG5hbWUpDQoNCgkJSWYgSXNFbXB0eShuYW1lKSBPciBJc051bGwobmFtZSkgVGhlbiBFeGl0IEZ1bmN0aW9uDQoNCgkJbmFtZT1SZXBsYWNlKG5hbWUsbWV0YV9zcGxpdF9zdHJpbmdfMSwiIikNCgkJbmFtZT1SZXBsYWNlKG5hbWUsbWV0YV9zcGxpdF9zdHJpbmdfMiwiIikNCg0KCQlJZiBJc051bGwodmFsdWUpPVRydWUgVGhlbiB2YWx1ZT0iIg0KDQoJCURpbSBuLGkNCgkJaT0wDQoJCUZvciBFYWNoIG4gSW4gbmFtZXMNCgkJCUlmIExDYXNlKG4pPUxDYXNlKG5hbWUpIFRoZW4NCgkJCQl2YWx1ZXMoaSk9dmJzZXNjYXBlKHZhbHVlKQ0KCQkJCSdJZiB2YWx1ZXMoaSk9InVuZGVmaW5lZCIgVGhlbiB2YWx1ZXMoaSk9IiINCgkJCQlFeGl0IGZ1bmN0aW9uDQoJCQlFbmQgSWYNCgkJCWk9aSsxDQoJCU5leHQNCg0KCQlpPVVCb3VuZChuYW1lcykNCg0KCQlSZURpbSBQcmVzZXJ2ZSBOYW1lcyhpKzEpDQoJCVJlRGltIFByZXNlcnZlIFZhbHVlcyhpKzEpDQoNCgkJTmFtZXMoaSsxKT1uYW1lDQoJCVZhbHVlcyhpKzEpPXZic2VzY2FwZSh2YWx1ZSkNCgkJJ0lmIHZhbHVlcyhpKzEpPSJ1bmRlZmluZWQiIFRoZW4gdmFsdWVzKGkrMSk9IiINCg0KCUVuZCBGdW5jdGlvbg0KDQoJUHVibGljIEZ1bmN0aW9uIEdldFZhbHVlKG5hbWUpDQoNCgkJRGltIG4saQ0KCQlpPTANCgkJRm9yIEVhY2ggbiBJbiBuYW1lcw0KDQoJCQlJZiBMQ2FzZShuKT1MQ2FzZShuYW1lKSBUaGVuDQoJCQkJR2V0VmFsdWUgPSB2YnN1bmVzY2FwZSh2YWx1ZXMoaSkpDQoJCQkJRXhpdCBmdW5jdGlvbg0KCQkJRW5kIElmDQoJCQlpPWkrMQ0KCQlOZXh0DQoNCgkJR2V0VmFsdWUgPSBFbXB0eQ0KCUVuZCBGdW5jdGlvbg0KDQoJUHVibGljIEZ1bmN0aW9uIFJlbW92ZShuYW1lKQ0KDQoJCURpbSBuKCkNCgkJRGltIHYoKQ0KCQlEaW0gYg0KDQoJCVJlRGltIG4oVUJvdW5kKG5hbWVzKSkNCgkJUmVEaW0gdihVQm91bmQobmFtZXMpKQ0KDQoJCURpbSBpLGoNCgkJaj0wDQoJCUZvciBpPTAgVG8gVUJvdW5kKG5hbWVzKQ0KCQkJSWYgTENhc2UobmFtZXMoaSkpPUxDYXNlKG5hbWUpIFRoZW4NCgkJCQliPVRydWUNCgkJCUVsc2UNCgkJCQluKGopPW5hbWVzKGkpDQoJCQkJdihqKT12YWx1ZXMoaSkNCgkJCQlqPWorMQ0KCQkJRW5kIElmDQoJCU5leHQNCg0KCQlJZiBiPVRydWUgVGhlbg0KDQoJCQlSZURpbSBuYW1lcyhqLTEpDQoJCQlSZURpbSB2YWx1ZXMoai0xKQ0KDQoJCQlGb3IgaT0wIFRvIGotMQ0KCQkJCW5hbWVzKGkpPW4oaSkNCgkJCQl2YWx1ZXMoaSk9dihpKQ0KCQkJTmV4dA0KDQoJCUVuZCBJZg0KDQoJRW5kIEZ1bmN0aW9uDQoNCglQdWJsaWMgRnVuY3Rpb24gRXhpc3RzKG5hbWUpDQoNCgkJSWYgTmFtZT0iIiBUaGVuIEV4aXQgRnVuY3Rpb24NCg0KCQlEaW0gcw0KCQlGb3IgRWFjaCBzIEluIG5hbWVzDQoJCQlJZiBMQ2FzZShzKT1MQ2FzZShuYW1lKSBUaGVuDQoJCQkJRXhpc3RzPVRydWUNCgkJCQlFeGl0IEZ1bmN0aW9uDQoJCQlFbmQgSWYNCgkJTmV4dA0KDQoJCUV4aXN0cz1GYWxzZQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCglQcml2YXRlIFN1YiBDbGFzc19Jbml0aWFsaXplKCkNCg0KCQlSZURpbSBOYW1lcygwKQ0KCQlSZURpbSBWYWx1ZXMoMCkNCg0KCUVuZCBTdWINCg0KRW5kIENsYXNzDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCg0KDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIOWumuS5iVRDb25maWcNCicg6L6T5YWl77yaICAgIOaXoA0KJyDov5Tlm57vvJogICAg5pegDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQpDbGFzcyBUQ29uZmlnDQoNCglQcml2YXRlIE5hbWUNCg0KCVB1YmxpYyBNZXRhDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IENvdW50DQoJCUNvdW50ID0gTWV0YS5Db3VudA0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIEZ1bmN0aW9uIFNhdmUoKQ0KDQoJCURpbSBuLHMNCgkJbj1GaWx0ZXJTUUwoTmFtZSkNCgkJcz1GaWx0ZXJTUUwoTWV0YS5TYXZlU3RyaW5nKQ0KDQoJCURpbSBvYmpSUw0KCQlTZXQgb2JqUlM9b2JqQ29ubi5FeGVjdXRlKCJTRUxFQ1QgW2NvbmZfTmFtZV0gRlJPTSBbYmxvZ19Db25maWddIFdIRVJFIFtjb25mX05hbWVdPSciJm4mIiciICkNCgkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KCQkJb2JqQ29ubi5FeGVjdXRlKCJVUERBVEUgW2Jsb2dfQ29uZmlnXSBTRVQgW2NvbmZfVmFsdWVdPSciJnMmIicgV0hFUkUgW2NvbmZfTmFtZV09JyImbiYiJyIpDQoJCUVsc2UNCgkJCW9iakNvbm4uRXhlY3V0ZSgiSU5TRVJUIElOVE8gW2Jsb2dfQ29uZmlnXShbY29uZl9OYW1lXSxbY29uZl9WYWx1ZV0pIFZBTFVFUyAoJyImbiYiJywnIiZzJiInKSIpDQoJCUVuZCBJZg0KCQlTZXQgb2JqUlM9Tm90aGluZw0KDQoJRW5kIEZ1bmN0aW9uDQoNCglQdWJsaWMgRnVuY3Rpb24gRGVsZXRlDQoNCgkJb2JqQ29ubi5FeGVjdXRlKCJERUxFVEUgRlJPTSBbYmxvZ19Db25maWddIFdIRVJFIFtjb25mX05hbWVdPSciJk5hbWUmIiciKQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCglQdWJsaWMgRnVuY3Rpb24gTG9hZChjb25maWduYW1lKQ0KDQoJCUNhbGwgR2V0Q29uZmlncygpDQoNCgkJTmFtZT1jb25maWduYW1lDQoNCgkJRGltIHMNCgkJRm9yIEVhY2ggcyBJbiBDb25maWdNZXRhcy5OYW1lcw0KCQkJSWYgTENhc2Uocyk9TENhc2UoTmFtZSkgVGhlbg0KCQkJCU1ldGEuTG9hZFN0cmluZz1Db25maWdNZXRhcy5HZXRWYWx1ZShOYW1lKQ0KCQkJRW5kIElmDQoJCU5leHQNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gV3JpdGUobmFtZSx2YWx1ZSkNCgkJSWYgVHlwZU5hbWUodmFsdWUpPSJCb29sZWFuIiBBbmQgVUNhc2UodmFsdWUpPVVDYXNlKCJ0cnVlIikgVGhlbiB2YWx1ZT0iVHJ1ZSINCgkJSWYgVHlwZU5hbWUodmFsdWUpPSJCb29sZWFuIiBBbmQgIFVDYXNlKHZhbHVlKT1VQ2FzZSgiZmFsc2UiKSBUaGVuIHZhbHVlPSJGYWxzZSINCgkJV3JpdGU9TWV0YS5TZXRWYWx1ZShuYW1lLHZhbHVlKQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCglQdWJsaWMgRnVuY3Rpb24gUmVhZChuYW1lKQ0KDQoJCVJlYWQ9TWV0YS5HZXRWYWx1ZShuYW1lKQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCglQdWJsaWMgRnVuY3Rpb24gUmVtb3ZlKG5hbWUpDQoNCgkJUmVtb3ZlPU1ldGEuUmVtb3ZlKG5hbWUpDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIEV4aXN0cyhuYW1lKQ0KDQoJCUV4aXN0cz1NZXRhLkV4aXN0cyhuYW1lKQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVByaXZhdGUgU3ViIENsYXNzX0luaXRpYWxpemUoKQ0KDQoJCU5hbWU9RW1wdHkNCg0KCQlTZXQgTWV0YT1OZXcgVE1ldGENCg0KCUVuZCBTdWINCg0KRW5kIENsYXNzDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicg55uu55qE77yaICAgIOWumuS5ieaooeWdl+WKn+iDveexuw0KJyDovpPlhaXvvJogICAg5pegDQonIOi/lOWbnu+8miAgICDml6ANCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCkNsYXNzIFRGdW5jdGlvbg0KDQoJUHVibGljIElEDQoJUHVibGljIE5hbWUNCglQdWJsaWMgRmlsZU5hbWUNCglQdWJsaWMgT3JkZXINCglQdWJsaWMgQ29udGVudA0KCVB1YmxpYyBJc0hpZGRlbg0KCVB1YmxpYyBTaWRlYmFySUQNCglQdWJsaWMgSHRtbElEDQoJUHVibGljIEZ0eXBlICdkaXYgb3IgdWwNCglQdWJsaWMgTWF4TGkNCglQdWJsaWMgTWV0YQ0KCVB1YmxpYyBTb3VyY2UNCglQdWJsaWMgVmlld1R5cGUNCglQdWJsaWMgSW5EYXRhQmFzZQ0KCVB1YmxpYyBJc0hpZGVUaXRsZQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBJc0Rpc3BsYXkNCgkJSXNEaXNwbGF5PU5vdCBJc0hpZGRlbg0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBJc1N5c3RlbQ0KCQlJZiBTb3VyY2U9InN5c3RlbSIgVGhlbg0KCQkJSXNTeXN0ZW09VHJ1ZQ0KCQlFbHNlDQoJCQlJc1N5c3RlbT1GYWxzZQ0KCQlFbmQgSWYNCglFbmQgUHJvcGVydHkNCglQdWJsaWMgUHJvcGVydHkgTGV0IElzU3lzdGVtKHMpDQoJCUlmIHM9VHJ1ZSBUaGVuDQoJCQlTb3VyY2U9InN5c3RlbSINCgkJRW5kIElmDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IElzVXNlcnMNCgkJSWYgU291cmNlPSJ1c2VycyIgVGhlbg0KCQkJSXNVc2Vycz1UcnVlDQoJCUVsc2UNCgkJCUlzVXNlcnM9RmFsc2UNCgkJRW5kIElmDQoJRW5kIFByb3BlcnR5DQoJUHVibGljIFByb3BlcnR5IExldCBJc1VzZXJzKHMpDQoJCUlmIHM9VHJ1ZSBUaGVuDQoJCQlTb3VyY2U9InVzZXJzIg0KCQlFbmQgSWYNCglFbmQgUHJvcGVydHkNCg0KCVB1YmxpYyBQcm9wZXJ0eSBHZXQgSXNQbHVnaW4NCgkJSWYgSW5TdHIoU291cmNlLCJwbHVnaW5fIik+MCBUaGVuDQoJCQlJc1BsdWdpbj1UcnVlDQoJCUVsc2UNCgkJCUlzUGx1Z2luPUZhbHNlDQoJCUVuZCBJZg0KCUVuZCBQcm9wZXJ0eQ0KCVB1YmxpYyBQcm9wZXJ0eSBMZXQgSXNQbHVnaW4ocykNCgkJU291cmNlPSJwbHVnaW5fIiZzDQoJRW5kIFByb3BlcnR5DQoJDQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IElzVGhlbWUNCgkJSWYgSW5TdHIoU291cmNlLCJ0aGVtZV8iKT4wIFRoZW4NCgkJCUlzVGhlbWU9VHJ1ZQ0KCQlFbHNlDQoJCQlJc1RoZW1lPUZhbHNlDQoJCUVuZCBJZg0KCUVuZCBQcm9wZXJ0eQ0KCVB1YmxpYyBQcm9wZXJ0eSBMZXQgSXNUaGVtZShzKQ0KCQlTb3VyY2U9InRoZW1lXyImcw0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBTb3VyY2VUeXBlDQoJCUlmIFNvdXJjZT0ic3lzdGVtIiBUaGVuDQoJCQlTb3VyY2VUeXBlPSJzeXN0ZW0iDQoJCUVuZCBJZg0KCQlJZiBTb3VyY2U9InVzZXJzIiBUaGVuDQoJCQlTb3VyY2VUeXBlPSJ1c2VycyINCgkJRW5kIElmDQoJCUlmIEluU3RyKFNvdXJjZSwicGx1Z2luXyIpPjAgVGhlbg0KCQkJU291cmNlVHlwZT0icGx1Z2luIg0KCQlFbmQgSWYNCgkJSWYgSW5TdHIoU291cmNlLCJ0aGVtZV8iKT4wIFRoZW4NCgkJCVNvdXJjZVR5cGU9InRoZW1lIg0KCQlFbmQgSWYNCgkJSWYgU291cmNlPSJvdGhlciIgVGhlbg0KCQkJU291cmNlVHlwZT0ib3RoZXIiDQoJCUVuZCBJZg0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBJc090aGVyDQoJCUlmIFNvdXJjZT0ib3RoZXIiIFRoZW4NCgkJCUlzT3RoZXI9VHJ1ZQ0KCQlFbHNlDQoJCQlJc090aGVyPUZhbHNlDQoJCUVuZCBJZg0KCUVuZCBQcm9wZXJ0eQ0KCVB1YmxpYyBQcm9wZXJ0eSBMZXQgSXNPdGhlcihzKQ0KCQlJZiBzPVRydWUgVGhlbg0KCQkJU291cmNlPSJvdGhlciINCgkJRW5kIElmDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgUHJvcGVydHkgR2V0IEFwcE5hbWUNCgkJSWYgU291cmNlVHlwZT0icGx1Z2luIiBUaGVuDQoJCQlBcHBOYW1lPVJpZ2h0KFNvdXJjZSxMZW4oU291cmNlKS1MZW4oInBsdWdpbl8iKSkNCgkJRWxzZUlmIFNvdXJjZVR5cGU9InRoZW1lIiBUaGVuDQoJCQlBcHBOYW1lPVJpZ2h0KFNvdXJjZSxMZW4oU291cmNlKS1MZW4oInRoZW1lXyIpKQ0KCQlFbHNlDQoJCQlBcHBOYW1lPSIiDQoJCUVuZCBJZg0KCUVuZCBQcm9wZXJ0eQ0KDQoJUHVibGljIFByb3BlcnR5IEdldCBNZXRhU3RyaW5nDQoJCU1ldGFTdHJpbmc9TWV0YS5TYXZlU3RyaW5nDQoJRW5kIFByb3BlcnR5DQoJUHVibGljIFByb3BlcnR5IExldCBNZXRhU3RyaW5nKHMpDQoJCU1ldGEuTG9hZFN0cmluZz1zDQoJRW5kIFByb3BlcnR5DQoNCglQdWJsaWMgRnVuY3Rpb24gUG9zdCgpDQoNCgkJQ2FsbCBGaWx0ZXJfUGx1Z2luX1RGdW5jdGlvbl9Qb3N0KElELE5hbWUsRmlsZU5hbWUsT3JkZXIsQ29udGVudCxJc0hpZGRlbixTaWRlYmFySUQsSHRtbElELEZ0eXBlLE1heExpLFNvdXJjZSxWaWV3VHlwZSxJc0hpZGVUaXRsZSxNZXRhU3RyaW5nKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoSUQsImludCIsMCkNCgkJQ2FsbCBDaGVja1BhcmFtZXRlcihPcmRlciwiaW50IiwwKQ0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKFNpZGViYXJJRCwiaW50IiwxKQ0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKElzSGlkZGVuLCJib29sIixGYWxzZSkNCgkJQ2FsbCBDaGVja1BhcmFtZXRlcihJc0hpZGVUaXRsZSwiYm9vbCIsRmFsc2UpDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoTWF4TGksImludCIsMCkNCg0KCQlOYW1lPUZpbHRlclNRTChOYW1lKQ0KCQlGaWxlTmFtZT1UcmFuc2ZlckhUTUwoTENhc2UoRmlsdGVyU1FMKEZpbGVOYW1lKSksIltkZWxzcGFjZV1bZmlsZW5hbWVdW25vcm1hbG5hbWVdIikNCgkJRmlsZU5hbWU9UmVwbGFjZShGaWxlTmFtZSwiLiIsIiIpDQoJCUh0bWxJRD1UcmFuc2ZlckhUTUwoRmlsdGVyU1FMKEh0bWxJRCksIltkZWxzcGFjZV1bZmlsZW5hbWVdIikNCgkJU291cmNlPUZpbHRlclNRTChTb3VyY2UpDQoJCVZpZXdUeXBlPUZpbHRlclNRTChWaWV3VHlwZSkNCg0KCQlJZiBOYW1lPSIiIFRoZW4NCgkJCU5hbWU9IkZ1bmN0aW9uIg0KCQlFbmQgSWYNCg0KCQlJZiBGaWxlTmFtZT0iIiBUaGVuDQoJCQlJZiBJRD0wIFRoZW4NCgkJCQlGaWxlTmFtZT0iZnVuY3Rpb24iJiBHZXROZXdJRA0KCQkJRWxzZQ0KCQkJCUZpbGVOYW1lPSJmdW5jdGlvbiIgJiBJRA0KCQkJRW5kIElmDQoJCUVuZCBJZg0KDQoJCUlmIEh0bWxJRD0iIiBUaGVuDQoJCQlJZiBJRD0wIFRoZW4gDQoJCQkJSHRtbElEPSJkaXZGdW5jdGlvbiIgJiBHZXROZXdJRA0KCQkJRWxzZQ0KCQkJCUh0bWxJRD0iZGl2RnVuY3Rpb24iICYgSUQNCgkJCUVuZCBJZg0KCQlFbmQgSWYNCg0KCQlJZiBPcmRlcj0wIFRoZW4NCgkJCU9yZGVyPUdldE5ld09yZGVyDQoJCUVuZCBJZg0KDQoJCUlmIFNvdXJjZT0iIiBUaGVuDQoJCQlTb3VyY2U9InVzZXJzIg0KCQlFbmQgSWYNCg0KCQlOYW1lPUxlZnQoTmFtZSw1MCkNCgkJRmlsZU5hbWU9TGVmdChGaWxlTmFtZSw1MCkNCgkJSHRtbElEPUxlZnQoSHRtbElELDUwKQ0KDQoJCUlmIEZ0eXBlPD4iZGl2IiBBbmQgRnR5cGU8PiJ1bCIgVGhlbiBGdHlwZT0iZGl2Ig0KDQoJCUNvbnRlbnQ9RmlsdGVyU1FMKENvbnRlbnQpDQoJCUNvbnRlbnQ9VHJhbnNmZXJIVE1MKENvbnRlbnQsIlthbnRpLXpjX2Jsb2dfaG9zdF0iKQ0KDQoJCQ0KCQlJZiBJRD0wIE9yIChJbkRhdGFCYXNlPUZhbHNlIEFuZCBTb3VyY2U8PiJvdGhlciIpIFRoZW4NCgkJCW9iakNvbm4uRXhlY3V0ZSgiSU5TRVJUIElOVE8gW2Jsb2dfRnVuY3Rpb25dKFtmbl9OYW1lXSxbZm5fRmlsZU5hbWVdLFtmbl9PcmRlcl0sW2ZuX0NvbnRlbnRdLFtmbl9Jc0hpZGRlbl0sW2ZuX1NpZGViYXJJRF0sW2ZuX0h0bWxJRF0sW2ZuX0Z0eXBlXSxbZm5fTWF4TGldLFtmbl9Tb3VyY2VdLFtmbl9WaWV3VHlwZV0sW2ZuX0lzSGlkZVRpdGxlXSxbZm5fTWV0YV0pIFZBTFVFUyAoJyImTmFtZSYiJywnIiZGaWxlTmFtZSYiJywiJk9yZGVyJiIsJyImQ29udGVudCYiJywiJkNMbmcoSXNIaWRkZW4pJiIsIiZTaWRlYmFySUQmIiwnIiZIdG1sSUQmIicsJyImRnR5cGUmIicsIiZNYXhMaSYiLCciJlNvdXJjZSYiJywnIiZWaWV3VHlwZSYiJywiJkNMbmcoSXNIaWRlVGl0bGUpJiIsJyImTWV0YVN0cmluZyYiJykiKQ0KDQoJCQlEaW0gb2JqUlMNCgkJCVNldCBvYmpSUz1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBNQVgoW2ZuX0lEXSkgRlJPTSBbYmxvZ19GdW5jdGlvbl0iKQ0KCQkJSWYgKE5vdCBvYmpSUy5ib2YpIEFuZCAoTm90IG9ialJTLmVvZikgVGhlbg0KCQkJCUlEPW9ialJTKDApDQoJCQkJSW5EYXRhQmFzZT1UcnVlDQoJCQlFbmQgSWYNCg0KCQlFbHNlDQoJCQlJZiBJbkRhdGFCYXNlIFRoZW4NCgkJCQlvYmpDb25uLkV4ZWN1dGUoIlVQREFURSBbYmxvZ19GdW5jdGlvbl0gU0VUIFtmbl9OYW1lXT0nIiZOYW1lJiInLFtmbl9GaWxlTmFtZV09JyImRmlsZU5hbWUmIicsW2ZuX09yZGVyXT0iJk9yZGVyJiIsW2ZuX0NvbnRlbnRdPSciJkNvbnRlbnQmIicsW2ZuX0lzSGlkZGVuXT0iJkNMbmcoSXNIaWRkZW4pJiIsW2ZuX1NpZGViYXJJRF09IiZTaWRlYmFySUQmIixbZm5fSHRtbElEXT0nIiZIdG1sSUQmIicsW2ZuX0Z0eXBlXT0nIiZGdHlwZSYiJyxbZm5fTWF4TGldPSImTWF4TGkmIixbZm5fU291cmNlXT0nIiZTb3VyY2UmIicsW2ZuX1ZpZXdUeXBlXT0nIiZWaWV3VHlwZSYiJyxbZm5fSXNIaWRlVGl0bGVdPSImQ0xuZyhJc0hpZGVUaXRsZSkmIixbZm5fTWV0YV09JyImTWV0YVN0cmluZyYiJyBXSEVSRSBbZm5fSURdID0iICYgSUQpDQoJCQlFbmQgSWYJCQ0KCQlFbmQgSWYNCg0KCQlQb3N0PVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gTG9hZEluZm9CeUlEKGZuX0lEKQ0KDQoJCUNhbGwgQ2hlY2tQYXJhbWV0ZXIoZm5fSUQsImludCIsMCkNCg0KCQlEaW0gb2JqUlMNCgkJU2V0IG9ialJTPW9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFtmbl9JRF0sW2ZuX05hbWVdLFtmbl9GaWxlTmFtZV0sW2ZuX09yZGVyXSxbZm5fQ29udGVudF0sW2ZuX0lzSGlkZGVuXSxbZm5fU2lkZWJhcklEXSxbZm5fSHRtbElEXSxbZm5fRnR5cGVdLFtmbl9NYXhMaV0sW2ZuX1NvdXJjZV0sW2ZuX1ZpZXdUeXBlXSxbZm5fSXNIaWRlVGl0bGVdLFtmbl9NZXRhXSBGUk9NIFtibG9nX0Z1bmN0aW9uXSBXSEVSRSBbZm5fSURdPSIgJiBmbl9JRCkNCg0KCQlJZiAoTm90IG9ialJTLmJvZikgQW5kIChOb3Qgb2JqUlMuZW9mKSBUaGVuDQoNCgkJCUlEPW9ialJTKCJmbl9JRCIpDQoJCQlOYW1lPW9ialJTKCJmbl9OYW1lIikNCgkJCUZpbGVOYW1lPW9ialJTKCJmbl9GaWxlTmFtZSIpDQoJCQlPcmRlcj1vYmpSUygiZm5fT3JkZXIiKQ0KCQkJQ29udGVudD1vYmpSUygiZm5fQ29udGVudCIpDQoJCQlJc0hpZGRlbj1vYmpSUygiZm5fSXNIaWRkZW4iKQ0KCQkJU2lkZWJhcklEPW9ialJTKCJmbl9TaWRlYmFySUQiKQ0KCQkJSHRtbElEPW9ialJTKCJmbl9IdG1sSUQiKQ0KCQkJRnR5cGU9b2JqUlMoImZuX0Z0eXBlIikNCgkJCU1heExpPW9ialJTKCJmbl9NYXhMaSIpDQoJCQlTb3VyY2U9b2JqUlMoImZuX1NvdXJjZSIpDQoJCQlWaWV3VHlwZT1vYmpSUygiZm5fVmlld1R5cGUiKQ0KCQkJSXNIaWRlVGl0bGU9b2JqUlMoImZuX0lzSGlkZVRpdGxlIikNCgkJCU1ldGFTdHJpbmc9b2JqUlMoImZuX01ldGEiKQ0KDQoJCQlMb2FkSW5mb0J5SUQ9VHJ1ZQ0KCQkJSW5EYXRhQmFzZT1UcnVlDQoNCgkJRW5kIElmDQoNCgkJb2JqUlMuQ2xvc2UNCgkJU2V0IG9ialJTPU5vdGhpbmcNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVEZ1bmN0aW9uX0xvYWRJbmZvQnlJRChJRCxOYW1lLEZpbGVOYW1lLE9yZGVyLENvbnRlbnQsSXNIaWRkZW4sU2lkZWJhcklELEh0bWxJRCxGdHlwZSxNYXhMaSxTb3VyY2UsVmlld1R5cGUsSXNIaWRlVGl0bGUsTWV0YVN0cmluZykNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBMb2FkSW5mb0J5QXJyYXkoYXJ5Q2F0ZUluZm8pDQoNCgkJSWYgSXNBcnJheShhcnlDYXRlSW5mbyk9VHJ1ZSBUaGVuDQoJCQlJRD1hcnlDYXRlSW5mbygwKQ0KCQkJTmFtZT1hcnlDYXRlSW5mbygxKQ0KCQkJRmlsZU5hbWU9YXJ5Q2F0ZUluZm8oMikNCgkJCU9yZGVyPWFyeUNhdGVJbmZvKDMpDQoJCQlDb250ZW50PWFyeUNhdGVJbmZvKDQpDQoJCQlJc0hpZGRlbj1hcnlDYXRlSW5mbyg1KQ0KCQkJU2lkZWJhcklEPWFyeUNhdGVJbmZvKDYpDQoJCQlIdG1sSUQ9YXJ5Q2F0ZUluZm8oNykNCgkJCUZ0eXBlPWFyeUNhdGVJbmZvKDgpDQoJCQlNYXhMaT1hcnlDYXRlSW5mbyg5KQ0KCQkJU291cmNlPWFyeUNhdGVJbmZvKDEwKQ0KCQkJVmlld1R5cGU9YXJ5Q2F0ZUluZm8oMTEpDQoJCQlJc0hpZGVUaXRsZT1hcnlDYXRlSW5mbygxMikNCgkJCU1ldGFTdHJpbmc9YXJ5Q2F0ZUluZm8oMTMpDQoJCUVuZCBJZg0KDQoJCUxvYWRJbmZvQnlBcnJheT1UcnVlDQoJCUluRGF0YUJhc2U9VHJ1ZQ0KDQoJCUNhbGwgRmlsdGVyX1BsdWdpbl9URnVuY3Rpb25fTG9hZEluZm9CeUFycmF5KElELE5hbWUsRmlsZU5hbWUsT3JkZXIsQ29udGVudCxJc0hpZGRlbixTaWRlYmFySUQsSHRtbElELEZ0eXBlLE1heExpLFNvdXJjZSxWaWV3VHlwZSxJc0hpZGVUaXRsZSxNZXRhU3RyaW5nKQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBHZXROZXdJRCgpDQoNCgkJR2V0TmV3SUQ9Q0xuZyhvYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBUT1AgMSBbZm5fSURdIEZST00gW2Jsb2dfRnVuY3Rpb25dIE9SREVSIEJZIFtmbl9JRF0gREVTQyIpKDApKSsxDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIEdldE5ld09yZGVyKCkNCg0KCQlHZXROZXdPcmRlcj1DTG5nKG9iakNvbm4uRXhlY3V0ZSgiU0VMRUNUIFRPUCAxIFtmbl9PcmRlcl0gRlJPTSBbYmxvZ19GdW5jdGlvbl0gT1JERVIgQlkgW2ZuX09yZGVyXSBERVNDIikoMCkpKzENCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gSW5TaWRlYmFycyhudW0pDQoJCUlmIG51bT0xIFRoZW4gSW5TaWRlYmFycz1JblNpZGViYXINCgkJSWYgbnVtPTIgVGhlbiBJblNpZGViYXJzPUluU2lkZWJhcjINCgkJSWYgbnVtPTMgVGhlbiBJblNpZGViYXJzPUluU2lkZWJhcjMNCgkJSWYgbnVtPTQgVGhlbiBJblNpZGViYXJzPUluU2lkZWJhcjQNCgkJSWYgbnVtPTUgVGhlbiBJblNpZGViYXJzPUluU2lkZWJhcjUNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIEluU2lkZWJhcigpDQoJCUlmIFNpZGViYXJJRD0tMSBUaGVuIEluU2lkZWJhcj1GYWxzZTpFeGl0IEZ1bmN0aW9uDQoJCUluU2lkZWJhcj0oUm91bmQoUmlnaHQoU2lkZWJhcklELDEpLzEpPTEpDQoJRW5kIEZ1bmN0aW9uDQoNCglQdWJsaWMgRnVuY3Rpb24gSW5TaWRlYmFyMigpDQoJCUlmIFNpZGViYXJJRD0tMSBUaGVuIEluU2lkZWJhcjI9RmFsc2U6RXhpdCBGdW5jdGlvbg0KCQlJblNpZGViYXIyPShSb3VuZChSaWdodChTaWRlYmFySUQsMikvMTEpPTEpDQoJRW5kIEZ1bmN0aW9uDQoNCglQdWJsaWMgRnVuY3Rpb24gSW5TaWRlYmFyMygpDQoJCUlmIFNpZGViYXJJRD0tMSBUaGVuIEluU2lkZWJhcjM9RmFsc2U6RXhpdCBGdW5jdGlvbg0KCQlJblNpZGViYXIzPShSb3VuZChSaWdodChTaWRlYmFySUQsMykvMTExKT0xKQ0KCUVuZCBGdW5jdGlvbg0KDQoJUHVibGljIEZ1bmN0aW9uIEluU2lkZWJhcjQoKQ0KCQlJZiBTaWRlYmFySUQ9LTEgVGhlbiBJblNpZGViYXI0PUZhbHNlOkV4aXQgRnVuY3Rpb24NCgkJSW5TaWRlYmFyND0oUm91bmQoUmlnaHQoU2lkZWJhcklELDQpLzExMTEpPTEpDQoJRW5kIEZ1bmN0aW9uDQoNCglQdWJsaWMgRnVuY3Rpb24gSW5TaWRlYmFyNSgpDQoJCUlmIFNpZGViYXJJRD0tMSBUaGVuIEluU2lkZWJhcjU9RmFsc2U6RXhpdCBGdW5jdGlvbg0KCQlJblNpZGViYXI1PShSb3VuZChSaWdodChTaWRlYmFySUQsNSkvMTExMTEpPTEpDQoJRW5kIEZ1bmN0aW9uDQoNCg0KDQoJUHVibGljIEZ1bmN0aW9uIE1ha2VUZW1wbGF0ZShzdHJGdW5jdGlvbikNCg0KCQlEaW0gaHRtbCxpLGoscyxSRQ0KCQlodG1sPXN0ckZ1bmN0aW9uDQoNCgkJU2V0IFJFID0gTmV3IFJlZ0V4cCANCgkJUkUuSWdub3JlQ2FzZSA9IFRydWUgDQoJCVJFLkdsb2JhbCA9IFRydWUgDQoNCgkJSWYgSXNIaWRlVGl0bGU9VHJ1ZSBUaGVuIA0KCQkJUkUuUGF0dGVybiA9ICI8I3RlbXBsYXRlOmZ1bmN0aW9uX3RpdGxlOmJlZ2luIz4oLnxcbikqPCN0ZW1wbGF0ZTpmdW5jdGlvbl90aXRsZTplbmQjPiINCgkJCWh0bWwgPSBSRS5SZXBsYWNlKGh0bWwsICIiKQ0KCQlFbHNlDQoJCQlodG1sPVJlcGxhY2UoaHRtbCwiPCN0ZW1wbGF0ZTpmdW5jdGlvbl90aXRsZTpiZWdpbiM+IiwiIikNCgkJCWh0bWw9UmVwbGFjZShodG1sLCI8I3RlbXBsYXRlOmZ1bmN0aW9uX3RpdGxlOmVuZCM+IiwiIikNCgkJRW5kIElmDQoNCgkJSWYgRnR5cGU9ImRpdiIgVGhlbg0KCQkJcz0iPGRpdj48I0NBQ0hFX0lOQ0xVREVfIiAmIFVDYXNlKEZpbGVOYW1lKSAmICIjPjwvZGl2PiINCgkJCUlmIFZpZXdUeXBlPSJqcyIgVGhlbg0KCQkJCXM9IjxkaXY+PCNDQUNIRV9JTkNMVURFXyIgJiBVQ2FzZShGaWxlTmFtZSkgJiAiX0pTIz48L2Rpdj4iDQoJCQlFbmQgSWYNCgkJCUlmIFZpZXdUeXBlPSJodG1sIiBUaGVuDQoJCQkJcz0iPGRpdj48I0NBQ0hFX0lOQ0xVREVfIiAmIFVDYXNlKEZpbGVOYW1lKSAmICJfSFRNTCM+PC9kaXY+Ig0KCQkJRW5kIElmDQoJCUVuZCBJZg0KDQoJCUlmIEZ0eXBlPSJ1bCIgVGhlbg0KCQkJcz0iPHVsPjwjQ0FDSEVfSU5DTFVERV8iICYgVUNhc2UoRmlsZU5hbWUpICYgIiM+PC91bD4iDQoJCQlJZiBWaWV3VHlwZT0ianMiIFRoZW4NCgkJCQlzPSI8dWw+PCNDQUNIRV9JTkNMVURFXyIgJiBVQ2FzZShGaWxlTmFtZSkgJiAiX0pTIz48L3VsPiINCgkJCUVuZCBJZg0KCQkJSWYgVmlld1R5cGU9Imh0bWwiIFRoZW4NCgkJCQlzPSI8dWw+PCNDQUNIRV9JTkNMVURFXyIgJiBVQ2FzZShGaWxlTmFtZSkgJiAiX0hUTUwjPjwvdWw+Ig0KCQkJRW5kIElmDQoJCUVuZCBJZg0KDQoJCSdwbHVnaW4gbm9kZQ0KDQoNCgkJRGltIGFyeVRlbXBsYXRlVGFnc05hbWUoKQ0KCQlEaW0gYXJ5VGVtcGxhdGVUYWdzVmFsdWUoKQ0KDQoJCVJlRGltIGFyeVRlbXBsYXRlVGFnc05hbWUoNSkNCgkJUmVEaW0gYXJ5VGVtcGxhdGVUYWdzVmFsdWUoNSkNCg0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAgMSk9ImZ1bmN0aW9uL2lkIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSggMSk9SUQNCgkJYXJ5VGVtcGxhdGVUYWdzTmFtZSggIDIpPSJmdW5jdGlvbi9uYW1lIg0KCQlhcnlUZW1wbGF0ZVRhZ3NWYWx1ZSggMik9TmFtZQ0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAgMyk9ImZ1bmN0aW9uL2h0bWxpZCINCgkJYXJ5VGVtcGxhdGVUYWdzVmFsdWUoIDMpPUh0bWxJRA0KCQlhcnlUZW1wbGF0ZVRhZ3NOYW1lKCAgNCk9ImZ1bmN0aW9uL2NvbnRlbnQiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKCA0KT1zDQoJCWFyeVRlbXBsYXRlVGFnc05hbWUoICA1KT0iZnVuY3Rpb24vZmlsZW5hbWUiDQoJCWFyeVRlbXBsYXRlVGFnc1ZhbHVlKCA1KT1GaWxlTmFtZQ0KDQoNCgkJJ3BsdWdpbiBub2RlDQoNCg0KCQlqPVVCb3VuZChhcnlUZW1wbGF0ZVRhZ3NOYW1lKQ0KCQlGb3IgaT0xIHRvIGoNCgkJCWh0bWw9UmVwbGFjZShodG1sLCI8IyIgJiBhcnlUZW1wbGF0ZVRhZ3NOYW1lKGkpICYgIiM+IixhcnlUZW1wbGF0ZVRhZ3NWYWx1ZShpKSkNCgkJTmV4dA0KDQoJCU1ha2VUZW1wbGF0ZT1odG1sDQoNCglFbmQgRnVuY3Rpb24NCg0KDQoJUHVibGljIEZ1bmN0aW9uIFNhdmUoKQ0KDQoJCUNhbGwgUG9zdCgpDQoJCUNhbGwgU2F2ZUZpbGUoKQ0KDQoJCVNhdmU9VHJ1ZQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBTYXZlRmlsZSgpDQoNCgkJSWYgRnR5cGU9InVsIiBBbmQgTWF4TGk+MCBUaGVuDQoJCQlEaW0gaSxiLGoNCgkJCWI9U3BsaXQoQ29udGVudCwiPC9saT4iKQ0KCQkJSWYgVUJvdW5kKGIpPjAgdGhlbg0KCQkJCUZvciBpPTAgVG8gVUJvdW5kKGIpLTENCgkJCQkJaj1qKzENCgkJCQkJYihpKT1iKGkpICYgIjwvbGk+Ig0KCQkJCQlJZiBqPk1heGxpIFRoZW4NCgkJCQkJCWIoaSk9IiINCgkJCQkJRW5kIElmDQoJCQkJTmV4dA0KCQkJCUNvbnRlbnQ9Sm9pbihiLCIiKQ0KCQkJRW5kIGlmDQoJCUVuZCBJZg0KDQoJCUlmIElzSGlkZGVuPVRydWUgVEhlbg0KCQkJQ29udGVudD0iIg0KCQlFbHNlDQoJCQlDb250ZW50PVRyYW5zZmVySFRNTChDb250ZW50LCJbYW50aS16Y19ibG9nX2hvc3RdIikNCgkJRW5kIElmDQoNCgkJQ2FsbCBTYXZlVG9GaWxlKEJsb2dQYXRoICYgInpiX3VzZXJzL2luY2x1ZGUvIiZGaWxlTmFtZSYiLmFzcCIsQ29udGVudCwidXRmLTgiLEZhbHNlKQ0KDQoJCVNhdmVGaWxlPVRydWUNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCglQdWJsaWMgRnVuY3Rpb24gRGVsKCkNCg0KCQlDYWxsIEZpbHRlcl9QbHVnaW5fVEZ1bmN0aW9uX0RlbChJRCxOYW1lLEZpbGVOYW1lLE9yZGVyLENvbnRlbnQsSXNIaWRkZW4sU2lkZWJhcklELEh0bWxJRCxGdHlwZSxNYXhMaSxTb3VyY2UsVmlld1R5cGUsSXNIaWRlVGl0bGUsTWV0YVN0cmluZykNCg0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKElELCJpbnQiLDApDQoNCgkJSWYgKElEPTApIFRoZW4gRGVsPUZhbHNlOkV4aXQgRnVuY3Rpb24NCg0KCQlvYmpDb25uLkV4ZWN1dGUoIkRFTEVURSBGUk9NIFtibG9nX0Z1bmN0aW9uXSBXSEVSRSBbZm5fSURdID0iICYgSUQpDQoJCQ0KCQlJbkRhdGFCYXNlPUZhbHNlDQoNCgkJQ2FsbCBEZWxGaWxlKCkNCg0KCQlEZWw9VHJ1ZQ0KDQoJRW5kIEZ1bmN0aW9uDQoNCg0KCVB1YmxpYyBGdW5jdGlvbiBEZWxGaWxlKCkNCg0KCQlDYWxsIERlbFRvRmlsZShCbG9nUGF0aCAmICJ6Yl91c2Vycy9pbmNsdWRlLyIgJiBGaWxlTmFtZSAmICIuYXNwIikNCg0KCUVuZCBGdW5jdGlvbg0KDQoNCg0KCVByaXZhdGUgU3ViIENsYXNzX0luaXRpYWxpemUoKQ0KCQlJRD0wDQoJCUZ0eXBlPSJkaXYiDQoJCVNpZGViYXJJRD0xDQoJCUlzSGlkZGVuPUZhbHNlDQoJCUlzSGlkZVRpdGxlPUZhbHNlDQoJCU1heExpPTANCgkJU291cmNlPSJ1c2VycyINCgkJSW5EYXRhQmFzZT1GYWxzZQ0KCQlTZXQgTWV0YT1OZXcgVE1ldGENCglFbmQgU3ViDQoNCg0KRW5kIENsYXNzDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCg0KDQoNCicqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCicgICAgICAgICAgICAgICAgICAgICAgICBUQ291bnRlcg0KJyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KQ2xhc3MgVENvdW50ZXINCg0KCVB1YmxpYyBJRA0KCVB1YmxpYyBJUA0KCVB1YmxpYyBBZ2VudA0KCVB1YmxpYyBDb250ZW50DQoJUHVibGljIFVzZXJJRA0KCVB1YmxpYyBQb3N0VGltZQ0KCVB1YmxpYyBQb3N0RGF0YQ0KCVB1YmxpYyBVUkwNCglQdWJsaWMgUmVmZXJlcg0KCVB1YmxpYyBBbGxSZXF1ZXN0SGVhZGVyDQoJUHVibGljIE5hbWUNCg0KCVB1YmxpYyBGdW5jdGlvbiBMb2FkSW5mb0J5SWQobmlkKQ0KCQlDYWxsIENoZWNrUGFyYW1ldGVyKG5pZCwiaW50IiwwKQ0KCQlEaW0gc3RyU1FMDQoJCXN0clNRTD0iU0VMRUNUIFtjb3VuX0lEXSxbY291bl9JUF0sW2NvdW5fQWdlbnRdLFtjb3VuX1JlZmVyXSxbY291bl9Qb3N0VGltZV0sW2NvdW5fQ29udGVudF0sW2NvdW5fVXNlcklEXSxbY291bl9Qb3N0RGF0YV0sW2NvdW5fVVJMXSxbY291bl9BbGxSZXF1ZXN0SGVhZGVyXSxbY291bl9sb2dOYW1lXSBGUk9NIFtibG9nX0NvdW50ZXJdIFdIRVJFIFtjb3VuX0lEXT0iJm5pZA0KCQlEaW0gb2JqUnMNCgkJU2V0IG9ialJzPW9iakNvbm4uRXhlY3V0ZShzdHJzcWwpDQoJCUlmIChOb3Qgb2JqUlMuYm9mKSBBbmQgKE5vdCBvYmpSUy5lb2YpIFRoZW4NCgkJCUlEPW9ialJzKDApDQoJCQlJUD12YnN1bmVzY2FwZShvYmpScygxKSkNCgkJCUFnZW50PXZic3VuZXNjYXBlKG9ialJzKDIpKQ0KCQkJUmVmZXJlcj12YnN1bmVzY2FwZShvYmpScygzKSkNCgkJCVBvc3RUaW1lPW9ialJzKDQpDQoJCQlDb250ZW50PXZic3VuZXNjYXBlKG9ialJzKDUpKQ0KCQkJVXNlcklEPW9ialJzKDYpDQoJCQlQb3N0RGF0YT12YnN1bmVzY2FwZShvYmpScyg3KSkNCgkJCVVSTD12YnN1bmVzY2FwZShvYmpScyg4KSkNCgkJCUFsbFJlcXVlc3RIZWFkZXI9dmJzdW5lc2NhcGUob2JqUnMoOSkpDQoJCQlOYW1lPXZic3VuZXNjYXBlKG9ialJzKDEwKSkNCgkJCUxvYWRJbmZvQnlJZD1UcnVlDQoJCUVuZCBJZg0KCUVuZCBGdW5jdGlvbg0KCQ0KCVB1YmxpYyBGdW5jdGlvbiBMb2FkSW5mb0J5QXJyYXkob2JqUnMpDQoNCgkJSWYgSXNBcnJheShvYmpScyk9VHJ1ZSBUaGVuDQoNCgkJCUlEPW9ialJzKDApDQoJCQlJUD12YnN1bmVzY2FwZShvYmpScygxKSkNCgkJCUFnZW50PXZic3VuZXNjYXBlKG9ialJzKDIpKQ0KCQkJUmVmZXJlcj12YnN1bmVzY2FwZShvYmpScygzKSkNCgkJCVBvc3RUaW1lPW9ialJzKDQpDQoJCQlDb250ZW50PXZic3VuZXNjYXBlKG9ialJzKDUpKQ0KCQkJVXNlcklEPW9ialJzKDYpDQoJCQlQb3N0RGF0YT12YnN1bmVzY2FwZShvYmpScyg3KSkNCgkJCVVSTD12YnN1bmVzY2FwZShvYmpScyg4KSkNCgkJCUFsbFJlcXVlc3RIZWFkZXI9dmJzdW5lc2NhcGUob2JqUnMoOSkpDQoJCQlQb3N0VGltZSA9IFllYXIoUG9zdFRpbWUpICYgIi0iICYgTW9udGgoUG9zdFRpbWUpICYgIi0iICYgRGF5KFBvc3RUaW1lKSAmICIgIiAmIEhvdXIoUG9zdFRpbWUpICYgIjoiICYgTWludXRlKFBvc3RUaW1lKSAmICI6IiAmIFNlY29uZChQb3N0VGltZSkNCgkJCU5hbWU9dmJzdW5lc2NhcGUob2JqUnMoMTApKQ0KCQkJTG9hZEluZm9CeUFycmF5PVRydWUNCgkJRW5kIElmDQoNCg0KCUVuZCBGdW5jdGlvbg0KDQoJUHVibGljIEZ1bmN0aW9uIEFkZChiLGMpDQoJCUlQPUdldFJlYWxseUlQKCkNCgkJQWdlbnQ9UmVxdWVzdC5TZXJ2ZXJWYXJpYWJsZXMoIkhUVFBfVVNFUl9BR0VOVCIpDQoJCVJlZmVyZXI9UmVxdWVzdC5TZXJ2ZXJWYXJpYWJsZXMoIkhUVFBfUkVGRVJFUiIpDQoJCVBvc3RUaW1lPUZvcm1hdERhdGVUaW1lKE5vdykNCgkJQ29udGVudD1jDQoJCVVzZXJJRD1CbG9nVXNlci5JRA0KCQlQb3N0RGF0YT1JSWYoSUlmKEluU3RyKExDYXNlKFJlcXVlc3QuU2VydmVyVmFyaWFibGVzKCJDT05URU5UX1RZUEUiKSksIm11bHRpcGFydC9mb3JtLWRhdGEiKT4wLFRydWUsRmFsc2UpLCJCaW5hcnkgUG9zdERhdGEiLFJlcXVlc3QuRm9ybSkNCgkJVVJMPUdldFVybA0KCQlOYW1lPWINCgkJQWxsUmVxdWVzdEhlYWRlcj1SZXF1ZXN0LlNlcnZlclZhcmlhYmxlcygiQUxMX0hUVFAiKQ0KCQlEaW0gaixrLGksbQ0KCQlqPUFycmF5KElQLEFnZW50LFJlZmVyZXIsUG9zdFRpbWUsQ29udGVudCxVc2VySUQsUG9zdERhdGEsVVJMLEFsbFJlcXVlc3RIZWFkZXIsTmFtZSkNCgkJaz1BcnJheSgiY291bl9JUCIsImNvdW5fQWdlbnQiLCJjb3VuX1JlZmVyIiwiY291bl9Qb3N0VGltZSIsImNvdW5fQ29udGVudCIsImNvdW5fVXNlcklEIiwiY291bl9Qb3N0RGF0YSIsImNvdW5fVVJMIiwiY291bl9BbGxSZXF1ZXN0SGVhZGVyIiwiY291bl9sb2dOYW1lIikNCgkJbT0iSU5TRVJUIElOVE8gW2Jsb2dfQ291bnRlcl0oIg0KCQlGb3IgaT0wIFRvIFVib3VuZChrKS0xDQoJCQltPW0mIlsiJmsoaSkmIl0sIg0KCQlOZXh0DQoJCW09bSYiWyImayhpKSYiXSkgVkFMVUVTKCINCgkJRm9yIGk9MCBUbyBVYm91bmQoaiktMQ0KCQkJbT1tJiInIiZJSWYoaT0zIG9yIGk9NSxqKGkpLHZic2VzY2FwZShqKGkpKSkmIicsIg0KCQlOZXh0DQoJCW09bSYiJyImdmJzZXNjYXBlKGooaSkpJiInIg0KCQltPW0mIikiDQoJCW9iakNvbm4uRXhlY3V0ZSBtDQoJCQ0KCQlJRD1vYmpDb25uLkV4ZWN1dGUoIlNFTEVDVCBNQVgoW2NvdW5fSURdKSBGUk9NIFtibG9nX0NvdW50ZXJdIikoMCkNCglFbmQgRnVuY3Rpb24NCgkNCglQdWJsaWMgRnVuY3Rpb24gR2V0VXJsDQoJCUdldFVybD1SZXF1ZXN0LlNlcnZlclZhcmlhYmxlcygiSFRUUF9NRVRIT0QiKSYiOiAiDQoJCUdldFVybD1HZXRVcmwmSUlmKExDYXNlKFJlcXVlc3QuU2VydmVyVmFyaWFibGVzKCJIVFRQUyIpKT0ib2ZmIiwiaHR0cDovLyIsImh0dHBzOi8vIikNCgkJR2V0VXJsPUdldFVybCAmIFJlcXVlc3QuU2VydmVyVmFyaWFibGVzKCJTRVJWRVJfTkFNRSIpIA0KCQlHZXRVcmw9SUlmKFJlcXVlc3QuU2VydmVyVmFyaWFibGVzKCJTRVJWRVJfUE9SVCIpPD44MCxHZXRVcmwmIjoiJlJlcXVlc3QuU2VydmVyVmFyaWFibGVzKCJTRVJWRVJfUE9SVCIpLEdldFVybCkNCgkJR2V0VXJsPUdldFVybCZSZXF1ZXN0LlNlcnZlclZhcmlhYmxlcygiVVJMIikgDQoJCUdldFVybD1JSWYoVHJpbShSZXF1ZXN0LlF1ZXJ5U3RyaW5nKTw+IiIsR2V0VXJsJiI/IiZUcmltKFJlcXVlc3QuUXVlcnlTdHJpbmcpLEdldFVybCkgDQoJRW5kIEZ1bmN0aW9uDQoNCglGdW5jdGlvbiBEZWxPbGQoaW50ZXJ2YWwsIG9sZCkNCgkJSWYgWkNfTVNTUUxfRU5BQkxFIFRoZW4NCgkJCW9iakNvbm4uRXhlY3V0ZSgiREVMRVRFIEZST00gW2Jsb2dfQ291bnRlcl0gV0hFUkUgREFURURJRkYoIiZpbnRlcnZhbCYiLFtjb3VuX1Bvc3RUaW1lXSxnZXRkYXRlKCkpPiImb2xkKQ0KCQlFbHNlDQoJCQlvYmpDb25uLkV4ZWN1dGUoIkRFTEVURSBGUk9NIFtibG9nX0NvdW50ZXJdIFdIRVJFIERBVEVESUZGKCciJmludGVydmFsJiInLFtjb3VuX1Bvc3RUaW1lXSxub3coKSk+IiZvbGQpDQoJCUVuZCBJZg0KCUVuZCBGdW5jdGlvbg0KRW5kIENsYXNzDQonKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQolPg==</file>
	<file name='zb_system\FUNCTION\c_system_manage.asp' crc32='D78885ED'  dt:dt='bin.base64'></file>
	<file name='zb_system\FUNCTION\c_system_plugin.asp' crc32='170542C2'  dt:dt='bin.base64'></file>
	<file name='zb_system\IMAGE\ADMIN\app-logo.png' crc32='7D5E99CC'  dt:dt='bin.base64'>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAQmSURBVFhH7VZtTJVlGL4OR0A4ioh8aCKYgIIUIJiY1iZCNS2GipVzFT8crg+w1pybuYb8sFmuWn40f9YyZoxE58bChDJjE2RoKspXJIQT4qs4AoIH6bnu4/tyjucgrEPjD9fO2fu+z/O8931f93Pd9/MaVu34dhiTCLdJ9C2upwKYysCEZ2CWyROvpyzF+5uXi8hmeHkg74OXsG3dk/BwNzpofsIDCA6YiTdT45D+7GKsT1yEjOejERrkg7RVERi8N/T/B1B9swO3u3rF0Z6tK7F1bZTc19/qliszxKxoMIzViJi26FB/Wd9l7kdTW4/T1pG5PgZPLZkr82ROaIy11Nc0dyEieDa++7kGR05dGl8fCPaficPZyfJ/LXnpqH2LTqMX+uvOf7rcjJRd+Xhhd4E4JCJD/GB0MyBKXTU4aGCOz3S8k7ZMFwxTpiHA11u/Xxk1D0lxIfpz9qESnK1qkueh+8PI+bpMrszCwcIqdPbclbmjpy/j3SOlzgOg80NZKbJvh7OShVHq02H6YoppdfR8vLomEp9sX4PcjNV6EC0dZpQ8CIAs6dwWgxarAE1q/43GEd7GBYnpe7WF8eFB2KTU62YwIFCxpfPwx3x1O6bp7nguYSESFXuu4V/9UKrSzazt2JggY8QML3eU19yWewacEh8q97GLAuS+4Jc6ebbbgrLqWziQX2EX+aMerjS2Y1/eBVniqcRK5prw6LQwdwMKctJUYPGyhhXSP2BBZW2rbtahCqjYon3p8PKcJovySm/g2Nnr6B+0ID48EDtfWYF5fiaZ+6ygEt+ftzLhWGTIHJDEF2+vRYxiaou//u7DxpyToi0vj2n4p3dApvUtYON45on52JIUhcfnzpJJGvtIMRxQQuKetnTcQXVTp66LMLU9QbO9sViVVlObGcwI172hmo+Pt6e8X1x5EwkRQeD2nb/agnYVCO1psNJU0FqnbdRn1MsPg2lkrVOQ1AlTTXSa76oAzcLwyu/t8FXVc/BElYzFhQUK4zv9gw72HtmKuafOYDQ6H+daaoC6SP2wUJwT731ZKmWpdUhbm/oWtHb34vqDNrpkgbVR+Jg8UFTxh10My1SlbEmysmYmTvxaJ2n+raEdPX0jDB8uQ6dM1KCDCMm6eP/LugjZ0Y6VKBEq9dL5W6mxei8/kH8RJ8vqR7M9rnGHAHiU8jQbD5iBbZ/+IMH9V9hpgIdJ5oux47ZFIfLEcwV2AVxTGqDKiUsNbdice0r6gAaKavvnZ7D/eLmUG5nnn6t1xf9IH6AVy9B9aaus04+PV4ioLEPD+glX+2c3vvmxGnUt3WCwRRWNUvuuwKEMyeqr4mv6YcJvAA1sIhouqnbqqnPaGvODhFXBhkP0qeC0FuoKa9t3x/wm5F6zgfA/0c4ZyJgBTBTT0exMBTDpGfgXQ96oh9pOVGIAAAAASUVORK5CYII=</file>
	<file name='zb_system\IMAGE\ADMIN\logo.png' crc32='5ED6D43C'  dt:dt='bin.base64'>iVBORw0KGgoAAAANSUhEUgAAAMgAAABGCAYAAACJ4ts2AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAACUVJREFUeNrsXf914jgQVu7l//gqiLeCZSuIU8GSCuJUsKQCoAJyFZhUAFtBnApgK8CpIGwFHHo3ejur0+iHZWGTne89PbCxLHk0nzQzksXF4XAQDAbDjL9YBAwGE4TBYIIwGEwQBoMJwmAwQRgMJgiDwQRhMJggDAYThMFgMEEYDCYIgxGNy4i857bK8YKbm8EjSBwWx/RiSOPA/GVAmaqM0RnIZwodo0w7zzwZ5MPyLBPUDcuxhO8LJki3kMItkLLmcLyCzxQoIGVnIJ8ZfK6PaYsU82CRzwryqWeU6R7Je9ORNVKkaKNL5oQRsvFv4fsGGvLmmGoYTT6ja9+OaQnffxzTXutxJV7hHlfH9BMUrNHK/AplmH7PodwrOH6G3wvIIzGHT9l7XsN9nkAhv6F8e7jXNarz2lEOfhYB93iFc0opldLXBsUVUJdH7fw96oymUB6+1xxde6PJWq8rbrvMUA/bs1kcicOhbTo3+DzTC1w7hePRMb3DufKYcvi+Q9dKVFr+yiEjec8MEvV7DvcYozpglFA/hRzVTyGD/Ph4Q8jGVo7pWV4M56YGme7QM43Q+akhfwFJXa9fu4Lj0tHOU9ROPs9GJiaImSAUATKkuPj6F4JgChtopIpQBqzgO63Md3ScaYqVoetlY08MClcRpJ3AceFZTqHdV2jnKJniToYiyYvj3ArJNdfaJdc6AdM9XM9G6gT7IP8fhpUJoUyDB0gKY7Cr39E1DeHPKNyBGfNgKbuBtNT8H+WbPEK95loZa2SifdPqc4MCDP8gU0eZNBMwRXzKEZqJFWquKtPHNyDRaI4+lr+qwwNcl1naIfTZevNB6oRKnXdMkDUiyT0oLW7cPZxTdq3eMK9aozaGxtgSjUM563vi92dQdKUIeyDDAjnVNXKqH6F+FVwjfZHvHuXoSi+Q/1N7kmSHolp3qIOpDT5LY2iXN+Q7bdHvnwmC1J4yHIQPIhKlWYflU+aPyRzCQ39pyY9NBd2+Hht8indkAmXoeArHlcFG3xnMDpOtnSMTZ6KZGa5yxgZZYlt/hEwvgUzSApW9I0zSCu6fa2auySwttWMsM5Op6yvD3n2QoRPEZGNjHwMLeqcpZWEgiMmWnmjnpkRdN8g2phzSMbrvAp0faaTZGcrXnW2fcmzPQzm9heOeK+18bpGJkisVaLD5gj4yNKaLiG1/QjOmmslegIkRW36GTJ4tDMfYfKvh+71mSuHrCy3UmMP5rWYOqnP4eITCs0vNzschSlMYGNe9RuZcppWfaSFeHDZ1lZMbnkcPK+v1zkAmygTS75lB/iutLjiU/h2ZRErO+DnekLz3yHTNkF/nI0Oz0pyIILIinxIR5MVzgoiXmjAGO5PesKgZTBAG44PhVGHeDIUhfWLga83O9QnNMhhnS5AR+Ao+WAaQo2KCMFLilFEsH8iR4y6AHGXIs3pcI+933eHzyChXHZE/pj5vULaP/zcl8i+ZIMMhiJpt9VnGMCMaNZYgvhExX8h6ziPyd1EfSZIHB1EORL5bdtKHgRBylC3I0RfeBlAHSbANm6LnS5BQclRnJN9mIPXIWshty/To/4WpPfgcPuQYnRk5UuKJkNlY0FHCAkaRJqBtmCA9k+PWs8FComAxeITeduuhIK6l2/uEvfAjcX7uGGVDCMLokSCKHD4KlIMinuKd7RCFrhzk8DUbu8ZS/PdeyIjoaGrDua58HdlW15oPtu2wo1DzaOr1Zd3fa7rumC4HTg4pkJUY3oYGU2Hf6eSuZxt+H9ABULL96dl5KVlkDl9sDSPcvgUp5Kh4H0hmRcx51KjZwyu3pef9bcuaDz0uty8d5Uw6LOul5bPsiHwjxzL/g2EJP9U2ixZt8B7Q/krW75HtXsS0walHkAfhP/m0EsPbK0rWZ+Ewb546Li8UpTCHdJuORrWQ12apaFrmIafQieCz90FCyFGJdPtQxSpGZhnSHxKUGUImaYZMAh37UFQOcpjepdGxQGZXW3LgQEo6XTmRiTULuG/V464mbc29d9fuGD3vHDPxfJPSZZqMLWVU2o4v6t6U3HZEfWxlbCxvAVJ6E9Uup2i8KuCek563/WlL2lGi14ljsfGwwUMIQin71NG57AJeed211KMqhe95eSLTKiTy4LP+R4UqZyL9spOpY7h/EMOddVZml21eJw+414jwbeaOiNqcmJu50cwsyn/yMV/zFAIc2taj9cDqU4pfW+eY8OTpV6kwpQvPovsVtCWEYanQ+rUlNKvPc1CBCRfWBEF0wn0l8s/7UgDem7d9xKoOcHyvPR3J2vOaW8KhL2DEGxHRoy8Bz68T5Iq47jViXkZ4kHBvceaTd7ipFyumnkm+6TFidTcwQitFopbvjCLD5oUnkbqO2vX6ZmlqgpzjilAXOdSWl/sOlEvHm8X8CCEKZfZ8HXBnN4rUoT/CBxkCFg7lbLOM5FH4zWlsHb1pLGKUaCvMy2tyj1Gk8CBdFkicNh0QEyQSPhGruqVydQUfkyZ0gjF0dNNHJZdM7j38lzqC1PepRr3UJpZk9iFh6rLnkMSYWX5fimG8o914kKMMyOtLptoit8xBQKo+aw+Fzh2dVmH5Pbpj4hHkVyNUjhHg2ZOQail27IYNbTukhUVhv0eMeA0o9Jjw2e6EOTS8snQ4jYEwJWH2NsL871WrlAJlgvgN421e2JpFEiS39NgFUcfMMQL49qiUaTIn/BBZ9k78vp+Z7e1G/T86FJ4JgigSbtGoMxYnWMzKBBkuri3ECXW296KbxYpqRpsabcfC7x+BqV1WamKUwkQ86Qpv3no0zFENwdtAnk0qou0FtVA/binar1pWexCsHeTZBt5zxgRJi6senOnUqEHZvoju56MkST4FBi2WUJe1h8JLQj95PuOt8JvNb4Wh7ayYEhcOez/vuDyfjR9EgjqF+j0FoaS+pML/1VEY6vIDPtvIQkXkPmuyqCHggP2dFeEHzpkg8QRhnDemhJkVTZBLVjjGB0BJnI82vdgHYQwNvn+RoTCxmKLRM+kxJhaDkQJS2eWcSoN8mK34/f8G1dL+b8K+zutvJgjjI6ILpYz2P5ggjI9KkJAN0dkHYfxRqEWH277yUhPGECFn2z+LX/v95o7r1duUz6LjBaJsYjHOCQVhTiV725EJwmCwD8JgMEEYDCYIg8EEYTAGgn8FGAD4WzHjLHZf2gAAAABJRU5ErkJggg==</file>
	<file name='zb_system\IMAGE\COMMON\file_1.png' crc32='6F655C4D'  dt:dt='bin.base64'>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAb0lEQVR42mNkoBAwIrH/E6EWpMYKiI/jMgCfIUxA/BeIbwFxMhAfI9aA/1B1TGjyjOQYQDAM8BnAiE0vsQagW8iIywBc4B8pBjBi0fyfFAOo6oL/SJoHLgyQ5f4TYwA28BuIWdC8QpIB2ACGAWQBANNPJxHHHRM9AAAAAElFTkSuQmCC</file>
	<file name='zb_system\IMAGE\COMMON\file_2.png' crc32='ECC96FE'  dt:dt='bin.base64'>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAAsTAAALEwEAmpwYAAAKTWlDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVN3WJP3Fj7f92UPVkLY8LGXbIEAIiOsCMgQWaIQkgBhhBASQMWFiApWFBURnEhVxILVCkidiOKgKLhnQYqIWotVXDjuH9yntX167+3t+9f7vOec5/zOec8PgBESJpHmomoAOVKFPDrYH49PSMTJvYACFUjgBCAQ5svCZwXFAADwA3l4fnSwP/wBr28AAgBw1S4kEsfh/4O6UCZXACCRAOAiEucLAZBSAMguVMgUAMgYALBTs2QKAJQAAGx5fEIiAKoNAOz0ST4FANipk9wXANiiHKkIAI0BAJkoRyQCQLsAYFWBUiwCwMIAoKxAIi4EwK4BgFm2MkcCgL0FAHaOWJAPQGAAgJlCLMwAIDgCAEMeE80DIEwDoDDSv+CpX3CFuEgBAMDLlc2XS9IzFLiV0Bp38vDg4iHiwmyxQmEXKRBmCeQinJebIxNI5wNMzgwAABr50cH+OD+Q5+bk4eZm52zv9MWi/mvwbyI+IfHf/ryMAgQAEE7P79pf5eXWA3DHAbB1v2upWwDaVgBo3/ldM9sJoFoK0Hr5i3k4/EAenqFQyDwdHAoLC+0lYqG9MOOLPv8z4W/gi372/EAe/tt68ABxmkCZrcCjg/1xYW52rlKO58sEQjFu9+cj/seFf/2OKdHiNLFcLBWK8ViJuFAiTcd5uVKRRCHJleIS6X8y8R+W/QmTdw0ArIZPwE62B7XLbMB+7gECiw5Y0nYAQH7zLYwaC5EAEGc0Mnn3AACTv/mPQCsBAM2XpOMAALzoGFyolBdMxggAAESggSqwQQcMwRSswA6cwR28wBcCYQZEQAwkwDwQQgbkgBwKoRiWQRlUwDrYBLWwAxqgEZrhELTBMTgN5+ASXIHrcBcGYBiewhi8hgkEQcgIE2EhOogRYo7YIs4IF5mOBCJhSDSSgKQg6YgUUSLFyHKkAqlCapFdSCPyLXIUOY1cQPqQ28ggMor8irxHMZSBslED1AJ1QLmoHxqKxqBz0XQ0D12AlqJr0Rq0Hj2AtqKn0UvodXQAfYqOY4DRMQ5mjNlhXIyHRWCJWBomxxZj5Vg1Vo81Yx1YN3YVG8CeYe8IJAKLgBPsCF6EEMJsgpCQR1hMWEOoJewjtBK6CFcJg4Qxwicik6hPtCV6EvnEeGI6sZBYRqwm7iEeIZ4lXicOE1+TSCQOyZLkTgohJZAySQtJa0jbSC2kU6Q+0hBpnEwm65Btyd7kCLKArCCXkbeQD5BPkvvJw+S3FDrFiOJMCaIkUqSUEko1ZT/lBKWfMkKZoKpRzame1AiqiDqfWkltoHZQL1OHqRM0dZolzZsWQ8ukLaPV0JppZ2n3aC/pdLoJ3YMeRZfQl9Jr6Afp5+mD9HcMDYYNg8dIYigZaxl7GacYtxkvmUymBdOXmchUMNcyG5lnmA+Yb1VYKvYqfBWRyhKVOpVWlX6V56pUVXNVP9V5qgtUq1UPq15WfaZGVbNQ46kJ1Bar1akdVbupNq7OUndSj1DPUV+jvl/9gvpjDbKGhUaghkijVGO3xhmNIRbGMmXxWELWclYD6yxrmE1iW7L57Ex2Bfsbdi97TFNDc6pmrGaRZp3mcc0BDsax4PA52ZxKziHODc57LQMtPy2x1mqtZq1+rTfaetq+2mLtcu0W7eva73VwnUCdLJ31Om0693UJuja6UbqFutt1z+o+02PreekJ9cr1Dund0Uf1bfSj9Rfq79bv0R83MDQINpAZbDE4Y/DMkGPoa5hpuNHwhOGoEctoupHEaKPRSaMnuCbuh2fjNXgXPmasbxxirDTeZdxrPGFiaTLbpMSkxeS+Kc2Ua5pmutG003TMzMgs3KzYrMnsjjnVnGueYb7ZvNv8jYWlRZzFSos2i8eW2pZ8ywWWTZb3rJhWPlZ5VvVW16xJ1lzrLOtt1ldsUBtXmwybOpvLtqitm63Edptt3xTiFI8p0in1U27aMez87ArsmuwG7Tn2YfYl9m32zx3MHBId1jt0O3xydHXMdmxwvOuk4TTDqcSpw+lXZxtnoXOd8zUXpkuQyxKXdpcXU22niqdun3rLleUa7rrStdP1o5u7m9yt2W3U3cw9xX2r+00umxvJXcM970H08PdY4nHM452nm6fC85DnL152Xlle+70eT7OcJp7WMG3I28Rb4L3Le2A6Pj1l+s7pAz7GPgKfep+Hvqa+It89viN+1n6Zfgf8nvs7+sv9j/i/4XnyFvFOBWABwQHlAb2BGoGzA2sDHwSZBKUHNQWNBbsGLww+FUIMCQ1ZH3KTb8AX8hv5YzPcZyya0RXKCJ0VWhv6MMwmTB7WEY6GzwjfEH5vpvlM6cy2CIjgR2yIuB9pGZkX+X0UKSoyqi7qUbRTdHF09yzWrORZ+2e9jvGPqYy5O9tqtnJ2Z6xqbFJsY+ybuIC4qriBeIf4RfGXEnQTJAntieTE2MQ9ieNzAudsmjOc5JpUlnRjruXcorkX5unOy553PFk1WZB8OIWYEpeyP+WDIEJQLxhP5aduTR0T8oSbhU9FvqKNolGxt7hKPJLmnVaV9jjdO31D+miGT0Z1xjMJT1IreZEZkrkj801WRNberM/ZcdktOZSclJyjUg1plrQr1zC3KLdPZisrkw3keeZtyhuTh8r35CP5c/PbFWyFTNGjtFKuUA4WTC+oK3hbGFt4uEi9SFrUM99m/ur5IwuCFny9kLBQuLCz2Lh4WfHgIr9FuxYji1MXdy4xXVK6ZHhp8NJ9y2jLspb9UOJYUlXyannc8o5Sg9KlpUMrglc0lamUycturvRauWMVYZVkVe9ql9VbVn8qF5VfrHCsqK74sEa45uJXTl/VfPV5bdra3kq3yu3rSOuk626s91m/r0q9akHV0IbwDa0b8Y3lG19tSt50oXpq9Y7NtM3KzQM1YTXtW8y2rNvyoTaj9nqdf13LVv2tq7e+2Sba1r/dd3vzDoMdFTve75TsvLUreFdrvUV99W7S7oLdjxpiG7q/5n7duEd3T8Wej3ulewf2Re/ranRvbNyvv7+yCW1SNo0eSDpw5ZuAb9qb7Zp3tXBaKg7CQeXBJ9+mfHvjUOihzsPcw83fmX+39QjrSHkr0jq/dawto22gPaG97+iMo50dXh1Hvrf/fu8x42N1xzWPV56gnSg98fnkgpPjp2Snnp1OPz3Umdx590z8mWtdUV29Z0PPnj8XdO5Mt1/3yfPe549d8Lxw9CL3Ytslt0utPa49R35w/eFIr1tv62X3y+1XPK509E3rO9Hv03/6asDVc9f41y5dn3m978bsG7duJt0cuCW69fh29u0XdwruTNxdeo94r/y+2v3qB/oP6n+0/rFlwG3g+GDAYM/DWQ/vDgmHnv6U/9OH4dJHzEfVI0YjjY+dHx8bDRq98mTOk+GnsqcTz8p+Vv9563Or59/94vtLz1j82PAL+YvPv655qfNy76uprzrHI8cfvM55PfGm/K3O233vuO+638e9H5ko/ED+UPPR+mPHp9BP9z7nfP78L/eE8/sl0p8zAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAAADqYAAAXb5JfxUYAAABwSURBVHjaxJPLEYAgDETfMlZlO/aqPdiKo/HiITLIzwO5bvYlLCAz40/JAUokPT0zsH0BcpAAnMAOLMBaC7Bneoh09QCKGeQASmRSDXiZPLD2Fq4WgBJmG7aBOfO4DLxmvRscwBQdRa2fidJD6qp7AKogVuHoOH04AAAAAElFTkSuQmCC</file>
	<file name='zb_system\SCRIPT\jquery-ui.custom.min.js' crc32='262EB68A'  dt:dt='bin.base64'></file>
	<file name='zb_system\WAP\c_system_wap.asp' crc32='65BC46A7'  dt:dt='bin.base64'></file>
	<file name='zb_system\XML-RPC\index.asp' crc32='1582FEE0'  dt:dt='bin.base64'></file>
	<file name='zb_users\LANGUAGE\SimpChinese.asp' crc32='4FD87E93'  dt:dt='bin.base64'></file>
</files>